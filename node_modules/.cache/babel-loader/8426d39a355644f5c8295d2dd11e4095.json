{"ast":null,"code":"var _jsxFileName = \"/Users/kristalduran/Desktop/PC3-/src/data.js\";\n\n/* App.js */\nimport React from 'react';\nimport CanvasJSReact from './canvasjs.react';\nimport info2015 from './Data/2015.json';\nimport info2016 from './Data/2016.json';\nimport info2017 from './Data/2017.json';\nimport info2018 from './Data/2018.json';\nimport info2019 from './Data/2019.json';\nvar CanvasJS = CanvasJSReact.CanvasJS;\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\nclass Data extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      i2015: {},\n      i2016: {},\n      i2017: {},\n      i2018: {},\n      i2019: {}\n    };\n  }\n\n  componentDidMount() {\n    console.log(this.props);\n    this.getData(this.props.countryName);\n  }\n\n  getData(country) {\n    info2015.forEach(info => {\n      if (info.Country === country) {\n        this.setState({\n          i2015: {\n            happiness: info['Happiness Score'],\n            heald: info.Health\n          }\n        });\n      }\n    });\n    info2016.forEach(info => {\n      if (info.Country === country) {\n        this.setState({\n          i2016: {\n            happiness: info['Happiness Score'],\n            heald: info.Health\n          }\n        });\n      }\n    });\n    info2017.forEach(info => {\n      if (info.Country === country) {\n        this.setState({\n          i2017: {\n            happiness: info['Happiness Score'],\n            heald: info.Health\n          }\n        });\n      }\n    });\n    info2018.forEach(info => {\n      if (info.Country === country) {\n        this.setState({\n          i2018: {\n            happiness: info['Happiness Score'],\n            heald: info.Health\n          }\n        });\n      }\n    });\n    info2019.forEach(info => {\n      if (info.Country === country) {\n        this.setState({\n          i2019: {\n            happiness: info['Happiness Score'],\n            heald: info.Health\n          }\n        });\n      }\n    });\n  }\n\n  render() {\n    const options = {\n      animationEnabled: true,\n      theme: \"light2\",\n      title: {\n        text: \"Promedio de felicidad durante los últimos 5 años\"\n      },\n      axisX: {\n        valueFormatString: \"YYYY\",\n        crosshair: {\n          enabled: true,\n          snapToDataPoint: true\n        }\n      },\n      axisY: {\n        title: \"Valor\",\n        includeZero: false,\n        valueFormatString: \"#0.000\",\n        crosshair: {\n          enabled: true,\n          snapToDataPoint: true,\n          labelFormatter: function (e) {\n            return CanvasJS.formatNumber(e.value, \"#0.000\");\n          }\n        }\n      },\n      data: [{\n        type: \"line\",\n        xValueFormatString: \"YYYY\",\n        yValueFormatString: \"#0.000\",\n        dataPoints: [{\n          x: new Date(\"2015\"),\n          y: Number(this.state.i2015.happiness)\n        }, {\n          x: new Date(\"2016\"),\n          y: Number(this.state.i2016.happiness)\n        }, {\n          x: new Date(\"2017\"),\n          y: Number(this.state.i2017.happiness)\n        }, {\n          x: new Date(\"2018\"),\n          y: Number(this.state.i2018.happiness)\n        }, {\n          x: new Date(\"2019\"),\n          y: Number(this.state.i2019.happiness)\n        }]\n      }]\n    };\n    return /*#__PURE__*/React.createElement(CanvasJSChart, {\n      options: options,\n      className: \"App-data\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 4\n      }\n    });\n  }\n\n}\n\nexport default Data;","map":{"version":3,"sources":["/Users/kristalduran/Desktop/PC3-/src/data.js"],"names":["React","CanvasJSReact","info2015","info2016","info2017","info2018","info2019","CanvasJS","CanvasJSChart","Data","Component","constructor","props","context","state","i2015","i2016","i2017","i2018","i2019","componentDidMount","console","log","getData","countryName","country","forEach","info","Country","setState","happiness","heald","Health","render","options","animationEnabled","theme","title","text","axisX","valueFormatString","crosshair","enabled","snapToDataPoint","axisY","includeZero","labelFormatter","e","formatNumber","value","data","type","xValueFormatString","yValueFormatString","dataPoints","x","Date","y","Number"],"mappings":"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","sourcesContent":["/* App.js */\nimport React from 'react';\nimport CanvasJSReact from './canvasjs.react';\nimport info2015 from './Data/2015.json';\nimport info2016 from './Data/2016.json';\nimport info2017 from './Data/2017.json';\nimport info2018 from './Data/2018.json';\nimport info2019 from './Data/2019.json';\n\nvar CanvasJS = CanvasJSReact.CanvasJS;\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\nclass Data extends React.Component {\n    constructor(props, context) {\n        super(props, context);    \n        this.state={\n            i2015: {},\n            i2016: {},\n            i2017: {},\n            i2018: {},\n            i2019: {}\n        }\n    }\n\n    componentDidMount(){\n        console.log(this.props)\n        this.getData(this.props.countryName);\n    }\n\n    getData(country){\n        info2015.forEach(info => {\n            if (info.Country === country) {\n                this.setState({i2015:{happiness: info['Happiness Score'], heald: info.Health}})\n            }\n        });\n        info2016.forEach(info => {\n            if (info.Country === country) {\n                this.setState({i2016:{happiness: info['Happiness Score'], heald: info.Health}})\n            }\n        });\n        info2017.forEach(info => {\n            if (info.Country === country) {\n                this.setState({i2017:{happiness: info['Happiness Score'], heald: info.Health}})\n            }\n        });\n        info2018.forEach(info => {\n            if (info.Country === country) {\n                this.setState({i2018:{happiness: info['Happiness Score'], heald: info.Health}})\n            }\n        });\n        info2019.forEach(info => {\n            if (info.Country === country) {\n                this.setState({i2019:{happiness: info['Happiness Score'], heald: info.Health}})\n            }\n        });\n    }\n\n\trender() {\n        \n\t\tconst options = {\n\t\t\tanimationEnabled: true,\n\t\t\ttheme: \"light2\",\n\t\t\ttitle:{\n\t\t\t\ttext: \"Promedio de felicidad durante los últimos 5 años\"\n\t\t\t},\n\t\t\taxisX:{\n\t\t\t\tvalueFormatString: \"YYYY\",\n\t\t\t\tcrosshair: {\n\t\t\t\t\tenabled: true,\n\t\t\t\t\tsnapToDataPoint: true\n\t\t\t\t}\n\t\t\t},\n\t\t\taxisY: {\n\t\t\t\ttitle: \"Valor\",\n\t\t\t\tincludeZero: false,\n\t\t\t\tvalueFormatString: \"#0.000\",\n\t\t\t\tcrosshair: {\n\t\t\t\t\tenabled: true,\n\t\t\t\t\tsnapToDataPoint: true,\n\t\t\t\t\tlabelFormatter: function(e) {\n\t\t\t\t\t\treturn CanvasJS.formatNumber(e.value, \"#0.000\");\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tdata: [{\n\t\t\t\ttype: \"line\",\n\t\t\t\txValueFormatString: \"YYYY\",\n\t\t\t\tyValueFormatString: \"#0.000\",\n\t\t\t\tdataPoints: [\n                  { x: new Date(\"2015\"), y: Number(this.state.i2015.happiness)},\n                  { x: new Date(\"2016\"), y: Number(this.state.i2016.happiness)},\n                  { x: new Date(\"2017\"), y: Number(this.state.i2017.happiness)},\n                  { x: new Date(\"2018\"), y: Number(this.state.i2018.happiness)},\n                  { x: new Date(\"2019\"), y: Number(this.state.i2019.happiness)}\n\t\t\t\t]\n\t\t\t}]\n\t\t}\n\t\t\n\t\treturn (\n\t\t\t<CanvasJSChart options = {options} className='App-data'/>\n\t\t);\n\t}\n}\n \nexport default Data;   "]},"metadata":{},"sourceType":"module"}