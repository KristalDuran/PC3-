{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.VectorMap = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    \"default\": obj\n  };\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nvar VectorMap = function VectorMap(_ref) {\n  var id = _ref.id,\n      name = _ref.name,\n      layers = _ref.layers,\n      tabIndex = _ref.tabIndex,\n      layerProps = _ref.layerProps,\n      checkedLayers = _ref.checkedLayers,\n      currentLayers = _ref.currentLayers,\n      other = _objectWithoutProperties(_ref, [\"id\", \"name\", \"layers\", \"tabIndex\", \"layerProps\", \"checkedLayers\", \"currentLayers\"]);\n\n  if (!layers || !layers.length > 0) {\n    console.error(\"[react-vector-maps] No 'layers' prop provided. Did you spread a map object onto the component?\");\n    return null;\n  }\n\n  return _react[\"default\"].createElement(\"svg\", _extends({\n    xmlns: \"http://www.w3.org/2000/svg\",\n    key: id,\n    \"aria-label\": name\n  }, other), layers.map(function (layer) {\n    return _react[\"default\"].createElement(\"path\", _extends({\n      key: layer.id,\n      tabIndex: tabIndex,\n      \"aria-label\": layer.name,\n      \"aria-checked\": checkedLayers && checkedLayers.includes(layer.id),\n      \"aria-current\": currentLayers && currentLayers.includes(layer.id)\n    }, layer, layerProps));\n  }));\n};\n\nexports.VectorMap = VectorMap;\nVectorMap.propTypes = {\n  /** Unique ID of the SVG element. */\n  id: _propTypes[\"default\"].string.isRequired,\n\n  /** Name of the map. */\n  name: _propTypes[\"default\"].string.isRequired,\n\n  /** View box for the map. */\n  viewBox: _propTypes[\"default\"].string.isRequired,\n\n  /** Layers that represent the regions of the map. */\n  layers: _propTypes[\"default\"].arrayOf(_propTypes[\"default\"].shape({\n    /** Unique ID of each layer. */\n    id: _propTypes[\"default\"].string.isRequired,\n\n    /** Name of the layer. */\n    name: _propTypes[\"default\"].string,\n\n    /** SVG path for the layer. */\n    d: _propTypes[\"default\"].string.isRequired\n  })).isRequired,\n\n  /** Tab index for each layer. Set to '-1' to disable layer focusing. */\n  tabIndex: _propTypes[\"default\"].number,\n\n  /** Props to spread onto each layer. */\n  layerProps: _propTypes[\"default\"].object,\n\n  /** Layer IDs to 'select' with the 'aria-checked' attribute. */\n  checkedLayers: _propTypes[\"default\"].arrayOf(_propTypes[\"default\"].string),\n\n  /** Layer IDs to 'select' with the 'aria-current' attribute. */\n  currentLayers: _propTypes[\"default\"].arrayOf(_propTypes[\"default\"].string)\n};\nVectorMap.defaultProps = {\n  tabIndex: 0,\n  layerProps: null,\n  checkedLayers: null,\n  currentLayers: null\n};","map":{"version":3,"sources":["../src/VectorMap.js"],"names":["VectorMap","id","name","layers","tabIndex","layerProps","checkedLayers","currentLayers","other","console","layer","PropTypes","viewBox","d","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst VectorMap = ({ id, name, layers, tabIndex, layerProps, checkedLayers, currentLayers, ...other }) => {\n  if (!layers || !layers.length > 0) {\n    console.error(`[react-vector-maps] No 'layers' prop provided. Did you spread a map object onto the component?`);\n    return null;\n  }\n\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\" key={id} aria-label={name} {...other}>\n      {layers.map(layer => (\n        <path\n          key={layer.id}\n          tabIndex={tabIndex}\n          aria-label={layer.name}\n          aria-checked={checkedLayers && checkedLayers.includes(layer.id)}\n          aria-current={currentLayers && currentLayers.includes(layer.id)}\n          {...layer}\n          {...layerProps}\n        />\n      ))}\n    </svg>\n  );\n};\n\nVectorMap.propTypes = {\n  /** Unique ID of the SVG element. */\n  id: PropTypes.string.isRequired,\n  /** Name of the map. */\n  name: PropTypes.string.isRequired,\n  /** View box for the map. */\n  viewBox: PropTypes.string.isRequired,\n  /** Layers that represent the regions of the map. */\n  layers: PropTypes.arrayOf(\n    PropTypes.shape({\n      /** Unique ID of each layer. */\n      id: PropTypes.string.isRequired,\n      /** Name of the layer. */\n      name: PropTypes.string,\n      /** SVG path for the layer. */\n      d: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  /** Tab index for each layer. Set to '-1' to disable layer focusing. */\n  tabIndex: PropTypes.number,\n  /** Props to spread onto each layer. */\n  layerProps: PropTypes.object,\n  /** Layer IDs to 'select' with the 'aria-checked' attribute. */\n  checkedLayers: PropTypes.arrayOf(PropTypes.string),\n  /** Layer IDs to 'select' with the 'aria-current' attribute. */\n  currentLayers: PropTypes.arrayOf(PropTypes.string),\n};\n\nVectorMap.defaultProps = {\n  tabIndex: 0,\n  layerProps: null,\n  checkedLayers: null,\n  currentLayers: null,\n};\n\nexport { VectorMap };\n"]},"metadata":{},"sourceType":"script"}