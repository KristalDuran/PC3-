{"ast":null,"code":"import * as React from 'react';\nimport * as ol from 'openlayers';\nimport { Util } from '../util';\nimport { Map } from '../map';\nexport class OverviewMap extends React.Component {\n  constructor(props) {\n    super(props);\n    this.control = void 0;\n    this.options = {\n      collapsed: undefined,\n      collapseLabel: undefined,\n      collapsible: undefined,\n      label: undefined,\n      layers: undefined,\n      render: undefined,\n      target: undefined,\n      tipLabel: undefined,\n      view: undefined\n    };\n    this.events = {\n      'change': undefined,\n      'propertychange': undefined\n    };\n  }\n\n  render() {\n    return null;\n  }\n\n  componentDidMount() {\n    let options = Util.getOptions(Object['assign'](this.options, this.props));\n    this.control = new ol.control.OverviewMap(options);\n    this.context.mapComp.controls.push(this.control);\n    let olEvents = Util.getEvents(this.events, this.props);\n\n    for (let eventName in olEvents) {\n      this.control.on(eventName, olEvents[eventName]);\n    }\n  }\n\n}\nOverviewMap['contextTypes'] = {\n  mapComp: React.PropTypes.instanceOf(Map),\n  map: React.PropTypes.instanceOf(ol.Map)\n};","map":{"version":3,"sources":["/Users/kristalduran/Desktop/PC3 Mapa/pc3-mapa/src/map/controls/overview-map.tsx"],"names":["React","ol","Util","Map","OverviewMap","Component","constructor","props","control","options","collapsed","undefined","collapseLabel","collapsible","label","layers","render","target","tipLabel","view","events","componentDidMount","getOptions","Object","context","mapComp","controls","push","olEvents","getEvents","eventName","on","PropTypes","instanceOf","map"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAKC,EAAZ,MAAoB,YAApB;AACA,SAAQC,IAAR,QAAmB,SAAnB;AACA,SAAQC,GAAR,QAAkB,QAAlB;AAEA,OAAO,MAAMC,WAAN,SAA0BJ,KAAK,CAACK,SAAhC,CAAoD;AAqBzDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAAE,UAAMA,KAAN;AAAF,SAnBnBC,OAmBmB;AAAA,SAjBnBC,OAiBmB,GAjBJ;AACbC,MAAAA,SAAS,EAAEC,SADE;AAEbC,MAAAA,aAAa,EAAED,SAFF;AAGbE,MAAAA,WAAW,EAAIF,SAHF;AAIbG,MAAAA,KAAK,EAAEH,SAJM;AAKbI,MAAAA,MAAM,EAAEJ,SALK;AAMbK,MAAAA,MAAM,EAAEL,SANK;AAObM,MAAAA,MAAM,EAAEN,SAPK;AAQbO,MAAAA,QAAQ,EAAEP,SARG;AASbQ,MAAAA,IAAI,EAAER;AATO,KAiBI;AAAA,SALnBS,MAKmB,GALL;AACZ,gBAAUT,SADE;AAEZ,wBAAkBA;AAFN,KAKK;AAAiB;;AAEpCK,EAAAA,MAAM,GAAG;AAAE,WAAO,IAAP;AAAc;;AAEzBK,EAAAA,iBAAiB,GAAI;AACnB,QAAIZ,OAAO,GAAGP,IAAI,CAACoB,UAAL,CAAgBC,MAAM,CAAC,QAAD,CAAN,CAAiB,KAAKd,OAAtB,EAA+B,KAAKF,KAApC,CAAhB,CAAd;AACA,SAAKC,OAAL,GAAe,IAAIP,EAAE,CAACO,OAAH,CAAWJ,WAAf,CAA2BK,OAA3B,CAAf;AACA,SAAKe,OAAL,CAAaC,OAAb,CAAqBC,QAArB,CAA8BC,IAA9B,CAAmC,KAAKnB,OAAxC;AAEA,QAAIoB,QAAQ,GAAG1B,IAAI,CAAC2B,SAAL,CAAe,KAAKT,MAApB,EAA4B,KAAKb,KAAjC,CAAf;;AACA,SAAI,IAAIuB,SAAR,IAAqBF,QAArB,EAA+B;AAC7B,WAAKpB,OAAL,CAAauB,EAAb,CAAgBD,SAAhB,EAA2BF,QAAQ,CAACE,SAAD,CAAnC;AACD;AACF;;AAlCwD;AAsC3D1B,WAAW,CAAC,cAAD,CAAX,GAA8B;AAC5BqB,EAAAA,OAAO,EAAEzB,KAAK,CAACgC,SAAN,CAAgBC,UAAhB,CAA2B9B,GAA3B,CADmB;AAE5B+B,EAAAA,GAAG,EAAElC,KAAK,CAACgC,SAAN,CAAgBC,UAAhB,CAA2BhC,EAAE,CAACE,GAA9B;AAFuB,CAA9B","sourcesContent":["import * as React from 'react';\nimport * as ol from 'openlayers';\nimport {Util} from '../util';\nimport {Map} from '../map';\n\nexport class OverviewMap extends React.Component<any, any> {\n\n  control: ol.control.OverviewMap;\n\n  options: any = {\n    collapsed: undefined,\n    collapseLabel: undefined,\n    collapsible  : undefined,\n    label: undefined,\n    layers: undefined,\n    render: undefined,\n    target: undefined,\n    tipLabel: undefined,\n    view: undefined\n  };\n\n  events: any = {\n    'change': undefined,\n    'propertychange': undefined\n  };\n\n  constructor(props) { super(props); }\n\n  render() { return null; }\n\n  componentDidMount () {\n    let options = Util.getOptions(Object['assign'](this.options, this.props));\n    this.control = new ol.control.OverviewMap(options);\n    this.context.mapComp.controls.push(this.control)\n\n    let olEvents = Util.getEvents(this.events, this.props);\n    for(let eventName in olEvents) {\n      this.control.on(eventName, olEvents[eventName]);\n    }\n  }\n\n}\n\nOverviewMap['contextTypes'] = {\n  mapComp: React.PropTypes.instanceOf(Map),\n  map: React.PropTypes.instanceOf(ol.Map)\n};\n"]},"metadata":{},"sourceType":"module"}