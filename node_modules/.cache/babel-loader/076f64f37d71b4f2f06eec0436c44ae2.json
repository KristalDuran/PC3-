{"ast":null,"code":"var _jsxFileName = \"/Users/kristalduran/Desktop/PC3-/src/pais.js\";\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { MapAjax } from '@syncfusion/ej2-maps';\nimport { MapsComponent, Inject, ILoadedEventArgs, MapsTheme, LayersDirective, LayerDirective, ProjectionType, MapsTooltip, Legend, ITooltipRenderEventArgs, Selection, Highlight } from '@syncfusion/ej2-react-maps';\nimport { Browser } from '@syncfusion/ej2-base'; // import { SampleBase } from './sample-base';\n\nimport datasource from './tooltip-datasource.json'; // let datasource =      data;\n\nimport world from './world-map.json';\nconst SAMPLE_CSS = `\n    .control-fluid {\n\t\tpadding: 0px !important;\n    }`;\nexport class MapaPais extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      mapInstance: '',\n      pais: this.props.paisInfo\n    };\n  }\n\n  onMapsLoad(args) {\n    let maps = document.getElementById('maps');\n    maps.setAttribute('title', '');\n  }\n\n  tooltipRender(args) {\n    this.setState({\n      ver: !this.state.ver,\n      pais: 'args'\n    });\n\n    if (!args.options['data']) {\n      args.cancel = true;\n    }\n  }\n\n  render() {\n    return (\n      /*#__PURE__*/\n      // <div className='control-pane'>\n      //     <div className='control-section row'>\n      React.createElement(\"div\", {\n        className: \"col-md-6\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(MapsComponent, {\n        id: \"maps\" // tooltipRender={this.tooltipRender.bind(this)} \n        ,\n        loaded: this.onMapsLoad.bind(this),\n        load: this.load,\n        zoomSettings: {\n          enable: false\n        },\n        legendSettings: {\n          visible: true,\n          mode: 'Interactive',\n          position: 'Left',\n          orientation: 'Vertical',\n          height: '70%',\n          width: '10',\n          textStyle: {\n            color: '#757575'\n          }\n        } // shapeSelected={this.onClick.bind(this)}\n        ,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(Inject, {\n        services: [MapsTooltip, Selection, Highlight, Legend],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(LayersDirective, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }\n      }, /*#__PURE__*/React.createElement(LayerDirective, {\n        shapeData: this.state.pais,\n        shapePropertyPath: \"name\",\n        shapeDataPath: \"name\",\n        dataSource: datasource,\n        tooltipSettings: {\n          visible: true,\n          valuePath: 'name',\n          template: '<div id=\"tooltemplate\" style=\"width: 90px;background: rgba(53, 63, 76, 0.90); opacity: 90%;background: rgba(53, 63, 76, 0.90);box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.40);padding-bottom: 10px;padding-top: 10px;padding-left: 10px;padding-right: 10px;border: 1px #abb9c6\">' + '<div style=\"font-size:13px;color:#ffffff;font-weight: 500;\"><center>${country}</center></div>' + '<hr style=\"margin-top: 2px;margin-bottom:5px;border:0.5px solid #DDDDDD\">' + '<div><span style=\"font-size:13px;color:#cccccc\">Felicidad : </span><span style=\"font-size:13px;color:#ffffff;font-weight: 500;\">${value1}</span></div>'\n        } // shapeSelected={this.onClick.bind(this)}\n        ,\n        shapeSettings: {\n          fill: 'lightgrey',\n          colorMapping: [{\n            value: '1',\n            color: '#FCE55F'\n          }, {\n            color: '#F9D923',\n            value: '2'\n          }, {\n            color: '#F9CC23',\n            value: '3'\n          }, {\n            color: '#F9BB23',\n            value: '4'\n          }, {\n            color: '#F9AB23',\n            value: '5'\n          }, {\n            color: '#F99823',\n            value: '6'\n          }, {\n            color: '#F96A23',\n            value: '7'\n          }],\n          colorValuePath: 'value1'\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 29\n        }\n      })))) //     </div>\n      // </div>\n\n    );\n  }\n\n}\nexport default MapaPais;","map":{"version":3,"sources":["/Users/kristalduran/Desktop/PC3-/src/pais.js"],"names":["React","ReactDOM","MapAjax","MapsComponent","Inject","ILoadedEventArgs","MapsTheme","LayersDirective","LayerDirective","ProjectionType","MapsTooltip","Legend","ITooltipRenderEventArgs","Selection","Highlight","Browser","datasource","world","SAMPLE_CSS","MapaPais","Component","constructor","props","context","state","mapInstance","pais","paisInfo","onMapsLoad","args","maps","document","getElementById","setAttribute","tooltipRender","setState","ver","options","cancel","render","bind","load","enable","visible","mode","position","orientation","height","width","textStyle","color","valuePath","template","fill","colorMapping","value","colorValuePath"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { MapAjax } from '@syncfusion/ej2-maps';\nimport {\n    MapsComponent, Inject, ILoadedEventArgs, MapsTheme, LayersDirective, LayerDirective,\n    ProjectionType, MapsTooltip, Legend, ITooltipRenderEventArgs, Selection, Highlight\n} from '@syncfusion/ej2-react-maps';\nimport { Browser } from '@syncfusion/ej2-base';\n// import { SampleBase } from './sample-base';\nimport datasource from './tooltip-datasource.json';\n// let datasource =      data;\nimport world from './world-map.json';\n\nconst SAMPLE_CSS = `\n    .control-fluid {\n\t\tpadding: 0px !important;\n    }`;\n    \nexport class MapaPais extends React.Component {\n\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n        mapInstance: '',\n        pais:this.props.paisInfo\n    };\n  }\n  \n  onMapsLoad(args) {\n    let maps = document.getElementById('maps');\n    maps.setAttribute('title', '');\n  };\n  \n  tooltipRender(args) {\n    this.setState({ver:!this.state.ver, pais:'args'})\n    if (!args.options['data']) {\n        args.cancel = true;\n    }\n  }\n\n  \n\n  render(){\n    return (\n        // <div className='control-pane'>\n        //     <div className='control-section row'>\n                <div className='col-md-6'>\n                    <MapsComponent id=\"maps\" \n                    // tooltipRender={this.tooltipRender.bind(this)} \n                    loaded={this.onMapsLoad.bind(this)} load={this.load} \n                        zoomSettings={{\n                            enable: false\n                        }}\n                        legendSettings={{\n                            visible: true,\n                            mode: 'Interactive',\n                            position: 'Left',\n                            orientation: 'Vertical',\n                            height: '70%',\n                            width: '10',\n                            textStyle: {\n                                color: '#757575'\n                            }\n                        }}\n                        // shapeSelected={this.onClick.bind(this)}\n                    >\n                        <Inject services={[MapsTooltip,Selection, Highlight, Legend]} />\n                        <LayersDirective>\n                            <LayerDirective shapeData={this.state.pais}\n                                shapePropertyPath='name'\n                                shapeDataPath='name'\n                                dataSource={datasource}\n                                tooltipSettings={{\n                                    visible: true,\n                                    valuePath: 'name',\n                                    template: '<div id=\"tooltemplate\" style=\"width: 90px;background: rgba(53, 63, 76, 0.90); opacity: 90%;background: rgba(53, 63, 76, 0.90);box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.40);padding-bottom: 10px;padding-top: 10px;padding-left: 10px;padding-right: 10px;border: 1px #abb9c6\">'+\n                                        '<div style=\"font-size:13px;color:#ffffff;font-weight: 500;\"><center>${country}</center></div>'+\n                                        '<hr style=\"margin-top: 2px;margin-bottom:5px;border:0.5px solid #DDDDDD\">'+\n                                        '<div><span style=\"font-size:13px;color:#cccccc\">Felicidad : </span><span style=\"font-size:13px;color:#ffffff;font-weight: 500;\">${value1}</span></div>',\n                                }}\n                                // shapeSelected={this.onClick.bind(this)}\n                                shapeSettings={{\n                                    fill: 'lightgrey',\n                                    colorMapping: [\n                                        {\n                                            value: '1',\n                                            color: '#FCE55F'\n                                        },\n                                        {\n                                            color: '#F9D923',\n                                            value: '2'\n                                        },\n                                        {\n                                            color: '#F9CC23',\n                                            value: '3'\n                                        },\n                                        {\n                                            color: '#F9BB23',\n                                            value: '4'\n                                        },\n                                        {\n                                            color: '#F9AB23',\n                                            value: '5'\n                                        },\n                                        {\n                                            color: '#F99823',\n                                            value: '6'\n                                        },\n                                        {\n                                            color: '#F96A23',\n                                            value: '7'\n                                        }\n                                    ],\n                                    colorValuePath: 'value1'\n                                }}\n                            >\n                            </LayerDirective>\n                        </LayersDirective>\n                    </MapsComponent>\n                </div>\n        //     </div>\n        // </div>\n    );\n    }\n}\n\nexport default MapaPais;"]},"metadata":{},"sourceType":"module"}