{"ast":null,"code":"var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  return t;\n};\n\nimport { click, itemSelection } from '../index';\nimport { getElement, createStyle, customizeStyle, removeClass, getTargetElement, getElementByID } from '../utils/helper';\nimport { isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\n/**\n * Selection module class\n */\n\nvar Selection =\n/** @class */\nfunction () {\n  /* tslint:disable:no-string-literal */\n  function Selection(maps) {\n    this.maps = maps;\n    this.addEventListener();\n  }\n  /**\n   * For binding events to selection module\n   */\n\n\n  Selection.prototype.addEventListener = function () {\n    if (!this.maps.isDestroyed) {\n      this.maps.on(click, this.mouseClick, this);\n      this.maps.on(Browser.touchEndEvent, this.mouseClick, this);\n    }\n  };\n  /**\n   * For removing events from selection modue\n   */\n\n\n  Selection.prototype.removeEventListener = function () {\n    if (this.maps.isDestroyed) {\n      return;\n    }\n\n    this.maps.off(click, this.mouseClick);\n    this.maps.off(Browser.touchEndEvent, this.mouseClick);\n  };\n\n  Selection.prototype.mouseClick = function (targetElement) {\n    if (!isNullOrUndefined(targetElement['type']) && targetElement['type'].indexOf('touch') !== -1 && isNullOrUndefined(targetElement.id)) {\n      targetElement = targetElement['target'];\n    }\n\n    if (!isNullOrUndefined(targetElement.id) && (targetElement.id.indexOf('LayerIndex') > -1 || targetElement.id.indexOf('NavigationIndex') > -1)) {\n      var layerIndex = void 0;\n      var shapeData = void 0;\n      var data = void 0;\n      var shapeIndex = void 0;\n      var dataIndex = void 0;\n      layerIndex = parseInt(targetElement.id.split('_LayerIndex_')[1].split('_')[0], 10);\n\n      if (targetElement.id.indexOf('shapeIndex') > -1) {\n        shapeIndex = parseInt(targetElement.id.split('_shapeIndex_')[1].split('_')[0], 10);\n        shapeData = this.maps.layers[layerIndex].shapeData['features']['length'] > shapeIndex ? this.maps.layers[layerIndex].shapeData['features'][shapeIndex]['properties'] : null;\n        dataIndex = parseInt(targetElement.id.split('_dataIndex_')[1].split('_')[0], 10);\n        data = isNullOrUndefined(dataIndex) ? null : this.maps.layers[layerIndex].dataSource[dataIndex];\n        this.selectionsettings = this.maps.layers[layerIndex].selectionSettings;\n        this.selectionType = 'Shape';\n      } else if (targetElement.id.indexOf('BubbleIndex') > -1) {\n        var bubbleIndex = parseInt(targetElement.id.split('_BubbleIndex_')[1].split('_')[0], 10);\n        dataIndex = parseInt(targetElement.id.split('_dataIndex_')[1].split('_')[0], 10);\n        data = this.maps.layers[layerIndex].bubbleSettings[bubbleIndex].dataSource[dataIndex];\n        this.selectionsettings = this.maps.layers[layerIndex].bubbleSettings[bubbleIndex].selectionSettings;\n        this.selectionType = 'Bubble';\n      } else if (targetElement.id.indexOf('MarkerIndex') > -1) {\n        var markerIndex = parseInt(targetElement.id.split('_MarkerIndex_')[1].split('_')[0], 10);\n        dataIndex = parseInt(targetElement.id.split('_dataIndex_')[1].split('_')[0], 10);\n        data = this.maps.layers[layerIndex].markerSettings[markerIndex].dataSource[dataIndex];\n        this.selectionsettings = this.maps.layers[layerIndex].markerSettings[markerIndex].selectionSettings;\n        this.selectionType = 'Marker';\n      } else {\n        var index = parseInt(targetElement.id.split('_NavigationIndex_')[1].split('_')[0], 10);\n        shapeData = null;\n        data = {\n          latitude: this.maps.layers[layerIndex].navigationLineSettings[index].latitude,\n          longitude: this.maps.layers[layerIndex].navigationLineSettings[index].longitude\n        };\n        this.selectionsettings = this.maps.layers[layerIndex].navigationLineSettings[index].selectionSettings;\n        this.selectionType = 'navigationline';\n      }\n\n      if (this.selectionsettings.enable) {\n        this.maps.mapSelect = targetElement ? true : false;\n\n        if (this.maps.legendSettings.visible && targetElement.id.indexOf('_MarkerIndex_') === -1) {\n          this.maps.legendModule.shapeHighLightAndSelection(targetElement, data, this.selectionsettings, 'selection', layerIndex);\n        }\n\n        var shapeToggled = targetElement.id.indexOf('shapeIndex') > -1 && this.maps.legendSettings.visible ? this.maps.legendModule.shapeToggled : true;\n\n        if (shapeToggled) {\n          this.selectMap(targetElement, shapeData, data);\n        }\n      }\n    } else if (this.maps.legendSettings.visible && !this.maps.legendSettings.toggleLegendSettings.enable && !isNullOrUndefined(targetElement.id) && targetElement.id.indexOf('_Text') === -1 && (targetElement.id.indexOf(this.maps.element.id + '_Legend_Shape_Index') > -1 || targetElement.id.indexOf(this.maps.element.id + '_Legend_Index') !== -1)) {\n      this.maps.legendModule.legendHighLightAndSelection(targetElement, 'selection');\n    }\n  };\n  /**\n   * Public method for selection\n   */\n\n\n  Selection.prototype.addSelection = function (layerIndex, name, enable) {\n    var targetElement = getTargetElement(layerIndex, name, enable, this.maps);\n\n    if (enable) {\n      this.selectMap(targetElement, null, null);\n    } else {\n      removeClass(targetElement);\n    }\n  };\n  /**\n   * Method for selection\n   */\n\n\n  Selection.prototype.selectMap = function (targetElement, shapeData, data) {\n    var _this = this;\n\n    var parentElement;\n    var children;\n    var selectionClass;\n    var selectionsettings = this.selectionsettings;\n    var border = {\n      color: this.selectionsettings.border.color,\n      width: this.selectionsettings.border.width / (this.selectionType === 'Marker' ? 1 : this.maps.scale)\n    };\n    var eventArgs = {\n      opacity: this.selectionsettings.opacity,\n      fill: this.selectionType !== 'navigationline' ? this.selectionsettings.fill : 'none',\n      border: border,\n      name: itemSelection,\n      target: targetElement.id,\n      cancel: false,\n      shapeData: shapeData,\n      data: data,\n      maps: this.maps\n    };\n\n    if (this.maps.isBlazor) {\n      var shapeData_1 = eventArgs.shapeData,\n          maps = eventArgs.maps,\n          blazorEventArgs = __rest(eventArgs, [\"shapeData\", \"maps\"]);\n\n      eventArgs = blazorEventArgs;\n    }\n\n    this.maps.trigger('itemSelection', eventArgs, function (observedArgs) {\n      if (!eventArgs.cancel) {\n        if (targetElement.getAttribute('class') === _this.selectionType + 'selectionMapStyle') {\n          removeClass(targetElement);\n\n          _this.removedSelectionList(targetElement);\n\n          for (var m = 0; m < _this.maps.shapeSelectionItem.length; m++) {\n            if (_this.maps.shapeSelectionItem[m] === eventArgs.shapeData) {\n              _this.maps.shapeSelectionItem.splice(m, 1);\n\n              break;\n            }\n          }\n\n          if (targetElement.id.indexOf('NavigationIndex') > -1) {\n            var index = parseInt(targetElement.id.split('_NavigationIndex_')[1].split('_')[0], 10);\n            var layerIndex = parseInt(targetElement.parentElement.id.split('_LayerIndex_')[1].split('_')[0], 10);\n            targetElement.setAttribute('stroke-width', _this.maps.layers[layerIndex].navigationLineSettings[index].width.toString());\n            targetElement.setAttribute('stroke', _this.maps.layers[layerIndex].navigationLineSettings[index].color);\n          }\n        } else {\n          var layetElement = getElementByID(_this.maps.element.id + '_Layer_Collections');\n\n          if (!_this.selectionsettings.enableMultiSelect && layetElement.getElementsByClassName(_this.selectionType + 'selectionMapStyle').length > 0) {\n            var eleCount = layetElement.getElementsByClassName(_this.selectionType + 'selectionMapStyle').length;\n            var ele = void 0;\n\n            for (var k = 0; k < eleCount; k++) {\n              ele = layetElement.getElementsByClassName(_this.selectionType + 'selectionMapStyle')[0];\n              removeClass(ele);\n\n              _this.removedSelectionList(ele);\n            }\n\n            if (_this.selectionType === 'Shape') {\n              _this.maps.shapeSelectionItem = [];\n              var selectionLength = _this.maps.selectedElementId.length;\n\n              for (var i = 0; i < selectionLength; i++) {\n                ele = layetElement.getElementsByClassName(_this.selectionType + 'selectionMapStyle')[0];\n                removeClass(ele);\n\n                var selectedElementIdIndex = _this.maps.selectedElementId.indexOf(ele.getAttribute('id'));\n\n                _this.maps.selectedElementId.splice(selectedElementIdIndex, 1);\n              }\n            }\n\n            if (ele.id.indexOf('NavigationIndex') > -1) {\n              var index = parseInt(targetElement.id.split('_NavigationIndex_')[1].split('_')[0], 10);\n              var layerIndex = parseInt(targetElement.parentElement.id.split('_LayerIndex_')[1].split('_')[0], 10);\n              ele.setAttribute('stroke-width', _this.maps.layers[layerIndex].navigationLineSettings[index].width.toString());\n              ele.setAttribute('stroke', _this.maps.layers[layerIndex].navigationLineSettings[index].color);\n            }\n          }\n\n          if (!getElement(_this.selectionType + 'selectionMap')) {\n            document.body.appendChild(createStyle(_this.selectionType + 'selectionMap', _this.selectionType + 'selectionMapStyle', eventArgs));\n          } else {\n            customizeStyle(_this.selectionType + 'selectionMap', _this.selectionType + 'selectionMapStyle', eventArgs);\n          }\n\n          targetElement.setAttribute('class', _this.selectionType + 'selectionMapStyle');\n\n          if (targetElement.getAttribute('class') === 'ShapeselectionMapStyle') {\n            _this.maps.shapeSelectionClass = getElement(_this.selectionType + 'selectionMap');\n\n            _this.maps.selectedElementId.push(targetElement.getAttribute('id'));\n\n            _this.maps.shapeSelectionItem.push(eventArgs.shapeData);\n          }\n\n          if (targetElement.getAttribute('class') === 'MarkerselectionMapStyle') {\n            _this.maps.markerSelectionClass = getElement(_this.selectionType + 'selectionMap');\n\n            _this.maps.selectedMarkerElementId.push(targetElement.getAttribute('id'));\n          }\n\n          if (targetElement.getAttribute('class') === 'BubbleselectionMapStyle') {\n            _this.maps.bubbleSelectionClass = getElement(_this.selectionType + 'selectionMap');\n\n            _this.maps.selectedBubbleElementId.push(targetElement.getAttribute('id'));\n          }\n\n          if (targetElement.getAttribute('class') === 'navigationlineselectionMapStyle') {\n            _this.maps.navigationSelectionClass = getElement(_this.selectionType + 'selectionMap');\n\n            _this.maps.selectedNavigationElementId.push(targetElement.getAttribute('id'));\n          }\n        }\n      }\n    });\n  };\n  /**\n   * Remove legend selection\n   */\n  // private removeLegendSelection(legendCollection: Object[], targetElement: Element): void {\n  //     let shape: Element;\n  //     if (!this.selectionsettings.enableMultiSelect) {\n  //        for (let i: number = 0; i < legendCollection.length; i++) {\n  //             for (let data of legendCollection[i]['data']) {\n  //                 shape = getElement(this.maps.element.id + '_LayerIndex_' + data['layerIndex'] +\n  //                            '_shapeIndex_' + data['shapeIndex'] + '_dataIndex_' + data['dataIndex']);\n  //                 removeClass(shape);\n  //             }\n  //         }\n  //     }\n  // }\n\n  /**\n   * Get module name.\n   * @private\n   */\n\n\n  Selection.prototype.removedSelectionList = function (targetElement) {\n    if (this.selectionType === 'Shape') {\n      this.maps.selectedElementId.splice(this.maps.selectedElementId.indexOf(targetElement.getAttribute('id')), 1);\n    }\n\n    if (this.selectionType === 'Bubble') {\n      this.maps.selectedBubbleElementId.splice(this.maps.selectedBubbleElementId.indexOf(targetElement.getAttribute('id')), 1);\n    }\n\n    if (this.selectionType === 'Marker') {\n      this.maps.selectedMarkerElementId.splice(this.maps.selectedMarkerElementId.indexOf(targetElement.getAttribute('id')), 1);\n    }\n\n    if (this.selectionType === 'navigationline') {\n      this.maps.selectedBubbleElementId.splice(this.maps.selectedBubbleElementId.indexOf(targetElement.getAttribute('id')), 1);\n    }\n  };\n  /**\n   * Get module name.\n   */\n\n\n  Selection.prototype.getModuleName = function () {\n    return 'Selection';\n  };\n  /**\n   * To destroy the selection.\n   * @return {void}\n   * @private\n   */\n\n\n  Selection.prototype.destroy = function (maps) {\n    /**\n     * Destroy method performed here\n     */\n    this.removeEventListener();\n  };\n\n  return Selection;\n}();\n\nexport { Selection };","map":{"version":3,"sources":["/Users/kristalduran/Desktop/PC3-/node_modules/@syncfusion/ej2-maps/src/maps/user-interaction/selection.js"],"names":["__rest","s","e","t","p","Object","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","click","itemSelection","getElement","createStyle","customizeStyle","removeClass","getTargetElement","getElementByID","isNullOrUndefined","Browser","Selection","maps","addEventListener","isDestroyed","on","mouseClick","touchEndEvent","removeEventListener","off","targetElement","id","layerIndex","shapeData","data","shapeIndex","dataIndex","parseInt","split","layers","dataSource","selectionsettings","selectionSettings","selectionType","bubbleIndex","bubbleSettings","markerIndex","markerSettings","index","latitude","navigationLineSettings","longitude","enable","mapSelect","legendSettings","visible","legendModule","shapeHighLightAndSelection","shapeToggled","selectMap","toggleLegendSettings","element","legendHighLightAndSelection","addSelection","name","_this","parentElement","children","selectionClass","border","color","width","scale","eventArgs","opacity","fill","target","cancel","isBlazor","shapeData_1","blazorEventArgs","trigger","observedArgs","getAttribute","removedSelectionList","m","shapeSelectionItem","splice","setAttribute","toString","layetElement","enableMultiSelect","getElementsByClassName","eleCount","ele","k","selectionLength","selectedElementId","selectedElementIdIndex","document","body","appendChild","shapeSelectionClass","push","markerSelectionClass","selectedMarkerElementId","bubbleSelectionClass","selectedBubbleElementId","navigationSelectionClass","selectedNavigationElementId","getModuleName","destroy"],"mappings":"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","sourcesContent":["var __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\n            t[p[i]] = s[p[i]];\n    return t;\n};\nimport { click, itemSelection } from '../index';\nimport { getElement, createStyle, customizeStyle, removeClass, getTargetElement, getElementByID } from '../utils/helper';\nimport { isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\n/**\n * Selection module class\n */\nvar Selection = /** @class */ (function () {\n    /* tslint:disable:no-string-literal */\n    function Selection(maps) {\n        this.maps = maps;\n        this.addEventListener();\n    }\n    /**\n     * For binding events to selection module\n     */\n    Selection.prototype.addEventListener = function () {\n        if (!this.maps.isDestroyed) {\n            this.maps.on(click, this.mouseClick, this);\n            this.maps.on(Browser.touchEndEvent, this.mouseClick, this);\n        }\n    };\n    /**\n     * For removing events from selection modue\n     */\n    Selection.prototype.removeEventListener = function () {\n        if (this.maps.isDestroyed) {\n            return;\n        }\n        this.maps.off(click, this.mouseClick);\n        this.maps.off(Browser.touchEndEvent, this.mouseClick);\n    };\n    Selection.prototype.mouseClick = function (targetElement) {\n        if (!isNullOrUndefined(targetElement['type']) && targetElement['type'].indexOf('touch') !== -1 &&\n            isNullOrUndefined(targetElement.id)) {\n            targetElement = targetElement['target'];\n        }\n        if (!isNullOrUndefined(targetElement.id) && (targetElement.id.indexOf('LayerIndex') > -1 ||\n            targetElement.id.indexOf('NavigationIndex') > -1)) {\n            var layerIndex = void 0;\n            var shapeData = void 0;\n            var data = void 0;\n            var shapeIndex = void 0;\n            var dataIndex = void 0;\n            layerIndex = parseInt(targetElement.id.split('_LayerIndex_')[1].split('_')[0], 10);\n            if (targetElement.id.indexOf('shapeIndex') > -1) {\n                shapeIndex = parseInt(targetElement.id.split('_shapeIndex_')[1].split('_')[0], 10);\n                shapeData = this.maps.layers[layerIndex].shapeData['features']['length'] > shapeIndex ?\n                    this.maps.layers[layerIndex].shapeData['features'][shapeIndex]['properties'] : null;\n                dataIndex = parseInt(targetElement.id.split('_dataIndex_')[1].split('_')[0], 10);\n                data = isNullOrUndefined(dataIndex) ? null : this.maps.layers[layerIndex].dataSource[dataIndex];\n                this.selectionsettings = this.maps.layers[layerIndex].selectionSettings;\n                this.selectionType = 'Shape';\n            }\n            else if (targetElement.id.indexOf('BubbleIndex') > -1) {\n                var bubbleIndex = parseInt(targetElement.id.split('_BubbleIndex_')[1].split('_')[0], 10);\n                dataIndex = parseInt(targetElement.id.split('_dataIndex_')[1].split('_')[0], 10);\n                data = this.maps.layers[layerIndex].bubbleSettings[bubbleIndex].dataSource[dataIndex];\n                this.selectionsettings = this.maps.layers[layerIndex].bubbleSettings[bubbleIndex].selectionSettings;\n                this.selectionType = 'Bubble';\n            }\n            else if (targetElement.id.indexOf('MarkerIndex') > -1) {\n                var markerIndex = parseInt(targetElement.id.split('_MarkerIndex_')[1].split('_')[0], 10);\n                dataIndex = parseInt(targetElement.id.split('_dataIndex_')[1].split('_')[0], 10);\n                data = this.maps.layers[layerIndex].markerSettings[markerIndex].dataSource[dataIndex];\n                this.selectionsettings = this.maps.layers[layerIndex].markerSettings[markerIndex].selectionSettings;\n                this.selectionType = 'Marker';\n            }\n            else {\n                var index = parseInt(targetElement.id.split('_NavigationIndex_')[1].split('_')[0], 10);\n                shapeData = null;\n                data = {\n                    latitude: this.maps.layers[layerIndex].navigationLineSettings[index].latitude,\n                    longitude: this.maps.layers[layerIndex].navigationLineSettings[index].longitude\n                };\n                this.selectionsettings = this.maps.layers[layerIndex].navigationLineSettings[index].selectionSettings;\n                this.selectionType = 'navigationline';\n            }\n            if (this.selectionsettings.enable) {\n                this.maps.mapSelect = targetElement ? true : false;\n                if (this.maps.legendSettings.visible && targetElement.id.indexOf('_MarkerIndex_') === -1) {\n                    this.maps.legendModule.shapeHighLightAndSelection(targetElement, data, this.selectionsettings, 'selection', layerIndex);\n                }\n                var shapeToggled = (targetElement.id.indexOf('shapeIndex') > -1 && this.maps.legendSettings.visible) ?\n                    this.maps.legendModule.shapeToggled : true;\n                if (shapeToggled) {\n                    this.selectMap(targetElement, shapeData, data);\n                }\n            }\n        }\n        else if (this.maps.legendSettings.visible && !this.maps.legendSettings.toggleLegendSettings.enable &&\n            !isNullOrUndefined(targetElement.id) && targetElement.id.indexOf('_Text') === -1 &&\n            (targetElement.id.indexOf(this.maps.element.id + '_Legend_Shape_Index') > -1 ||\n                targetElement.id.indexOf(this.maps.element.id + '_Legend_Index') !== -1)) {\n            this.maps.legendModule.legendHighLightAndSelection(targetElement, 'selection');\n        }\n    };\n    /**\n     * Public method for selection\n     */\n    Selection.prototype.addSelection = function (layerIndex, name, enable) {\n        var targetElement = getTargetElement(layerIndex, name, enable, this.maps);\n        if (enable) {\n            this.selectMap(targetElement, null, null);\n        }\n        else {\n            removeClass(targetElement);\n        }\n    };\n    /**\n     * Method for selection\n     */\n    Selection.prototype.selectMap = function (targetElement, shapeData, data) {\n        var _this = this;\n        var parentElement;\n        var children;\n        var selectionClass;\n        var selectionsettings = this.selectionsettings;\n        var border = {\n            color: this.selectionsettings.border.color,\n            width: this.selectionsettings.border.width / (this.selectionType === 'Marker' ? 1 : this.maps.scale)\n        };\n        var eventArgs = {\n            opacity: this.selectionsettings.opacity,\n            fill: this.selectionType !== 'navigationline' ? this.selectionsettings.fill : 'none',\n            border: border,\n            name: itemSelection,\n            target: targetElement.id,\n            cancel: false,\n            shapeData: shapeData,\n            data: data,\n            maps: this.maps\n        };\n        if (this.maps.isBlazor) {\n            var shapeData_1 = eventArgs.shapeData, maps = eventArgs.maps, blazorEventArgs = __rest(eventArgs, [\"shapeData\", \"maps\"]);\n            eventArgs = blazorEventArgs;\n        }\n        this.maps.trigger('itemSelection', eventArgs, function (observedArgs) {\n            if (!eventArgs.cancel) {\n                if (targetElement.getAttribute('class') === _this.selectionType + 'selectionMapStyle') {\n                    removeClass(targetElement);\n                    _this.removedSelectionList(targetElement);\n                    for (var m = 0; m < _this.maps.shapeSelectionItem.length; m++) {\n                        if (_this.maps.shapeSelectionItem[m] === eventArgs.shapeData) {\n                            _this.maps.shapeSelectionItem.splice(m, 1);\n                            break;\n                        }\n                    }\n                    if (targetElement.id.indexOf('NavigationIndex') > -1) {\n                        var index = parseInt(targetElement.id.split('_NavigationIndex_')[1].split('_')[0], 10);\n                        var layerIndex = parseInt(targetElement.parentElement.id.split('_LayerIndex_')[1].split('_')[0], 10);\n                        targetElement.setAttribute('stroke-width', _this.maps.layers[layerIndex].navigationLineSettings[index].width.toString());\n                        targetElement.setAttribute('stroke', _this.maps.layers[layerIndex].navigationLineSettings[index].color);\n                    }\n                }\n                else {\n                    var layetElement = getElementByID(_this.maps.element.id + '_Layer_Collections');\n                    if (!_this.selectionsettings.enableMultiSelect &&\n                        layetElement.getElementsByClassName(_this.selectionType + 'selectionMapStyle').length > 0) {\n                        var eleCount = layetElement.getElementsByClassName(_this.selectionType + 'selectionMapStyle').length;\n                        var ele = void 0;\n                        for (var k = 0; k < eleCount; k++) {\n                            ele = layetElement.getElementsByClassName(_this.selectionType + 'selectionMapStyle')[0];\n                            removeClass(ele);\n                            _this.removedSelectionList(ele);\n                        }\n                        if (_this.selectionType === 'Shape') {\n                            _this.maps.shapeSelectionItem = [];\n                            var selectionLength = _this.maps.selectedElementId.length;\n                            for (var i = 0; i < selectionLength; i++) {\n                                ele = layetElement.getElementsByClassName(_this.selectionType + 'selectionMapStyle')[0];\n                                removeClass(ele);\n                                var selectedElementIdIndex = _this.maps.selectedElementId.indexOf(ele.getAttribute('id'));\n                                _this.maps.selectedElementId.splice(selectedElementIdIndex, 1);\n                            }\n                        }\n                        if (ele.id.indexOf('NavigationIndex') > -1) {\n                            var index = parseInt(targetElement.id.split('_NavigationIndex_')[1].split('_')[0], 10);\n                            var layerIndex = parseInt(targetElement.parentElement.id.split('_LayerIndex_')[1].split('_')[0], 10);\n                            ele.setAttribute('stroke-width', _this.maps.layers[layerIndex].navigationLineSettings[index].width.toString());\n                            ele.setAttribute('stroke', _this.maps.layers[layerIndex].navigationLineSettings[index].color);\n                        }\n                    }\n                    if (!getElement(_this.selectionType + 'selectionMap')) {\n                        document.body.appendChild(createStyle(_this.selectionType + 'selectionMap', _this.selectionType + 'selectionMapStyle', eventArgs));\n                    }\n                    else {\n                        customizeStyle(_this.selectionType + 'selectionMap', _this.selectionType + 'selectionMapStyle', eventArgs);\n                    }\n                    targetElement.setAttribute('class', _this.selectionType + 'selectionMapStyle');\n                    if (targetElement.getAttribute('class') === 'ShapeselectionMapStyle') {\n                        _this.maps.shapeSelectionClass = getElement(_this.selectionType + 'selectionMap');\n                        _this.maps.selectedElementId.push(targetElement.getAttribute('id'));\n                        _this.maps.shapeSelectionItem.push(eventArgs.shapeData);\n                    }\n                    if (targetElement.getAttribute('class') === 'MarkerselectionMapStyle') {\n                        _this.maps.markerSelectionClass = getElement(_this.selectionType + 'selectionMap');\n                        _this.maps.selectedMarkerElementId.push(targetElement.getAttribute('id'));\n                    }\n                    if (targetElement.getAttribute('class') === 'BubbleselectionMapStyle') {\n                        _this.maps.bubbleSelectionClass = getElement(_this.selectionType + 'selectionMap');\n                        _this.maps.selectedBubbleElementId.push(targetElement.getAttribute('id'));\n                    }\n                    if (targetElement.getAttribute('class') === 'navigationlineselectionMapStyle') {\n                        _this.maps.navigationSelectionClass = getElement(_this.selectionType + 'selectionMap');\n                        _this.maps.selectedNavigationElementId.push(targetElement.getAttribute('id'));\n                    }\n                }\n            }\n        });\n    };\n    /**\n     * Remove legend selection\n     */\n    // private removeLegendSelection(legendCollection: Object[], targetElement: Element): void {\n    //     let shape: Element;\n    //     if (!this.selectionsettings.enableMultiSelect) {\n    //        for (let i: number = 0; i < legendCollection.length; i++) {\n    //             for (let data of legendCollection[i]['data']) {\n    //                 shape = getElement(this.maps.element.id + '_LayerIndex_' + data['layerIndex'] +\n    //                            '_shapeIndex_' + data['shapeIndex'] + '_dataIndex_' + data['dataIndex']);\n    //                 removeClass(shape);\n    //             }\n    //         }\n    //     }\n    // }\n    /**\n     * Get module name.\n     * @private\n     */\n    Selection.prototype.removedSelectionList = function (targetElement) {\n        if (this.selectionType === 'Shape') {\n            this.maps.selectedElementId.splice(this.maps.selectedElementId.indexOf(targetElement.getAttribute('id')), 1);\n        }\n        if (this.selectionType === 'Bubble') {\n            this.maps.selectedBubbleElementId.splice(this.maps.selectedBubbleElementId.indexOf(targetElement.getAttribute('id')), 1);\n        }\n        if (this.selectionType === 'Marker') {\n            this.maps.selectedMarkerElementId.splice(this.maps.selectedMarkerElementId.indexOf(targetElement.getAttribute('id')), 1);\n        }\n        if (this.selectionType === 'navigationline') {\n            this.maps.selectedBubbleElementId.splice(this.maps.selectedBubbleElementId.indexOf(targetElement.getAttribute('id')), 1);\n        }\n    };\n    /**\n     * Get module name.\n     */\n    Selection.prototype.getModuleName = function () {\n        return 'Selection';\n    };\n    /**\n     * To destroy the selection.\n     * @return {void}\n     * @private\n     */\n    Selection.prototype.destroy = function (maps) {\n        /**\n         * Destroy method performed here\n         */\n        this.removeEventListener();\n    };\n    return Selection;\n}());\nexport { Selection };\n"]},"metadata":{},"sourceType":"module"}