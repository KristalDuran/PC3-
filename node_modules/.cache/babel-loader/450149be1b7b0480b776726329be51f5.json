{"ast":null,"code":"import * as React from 'react';\nimport * as ol from 'openlayers';\nimport { Util } from '../util';\nimport { Map } from '../map';\nexport class Rotate extends React.Component {\n  constructor(props) {\n    super(props);\n    this.control = void 0;\n    this.options = {\n      className: undefined,\n      label: undefined,\n      tipLabel: undefined,\n      duration: undefined,\n      autoHide: undefined,\n      render: undefined,\n      resetNorth: undefined,\n      target: undefined\n    };\n    this.events = {\n      'change': undefined,\n      'propertychange': undefined\n    };\n  }\n\n  render() {\n    return null;\n  }\n\n  componentDidMount() {\n    let options = Util.getOptions(Object['assign'](this.options, this.props));\n    this.control = new ol.control.Rotate(options);\n    this.context.mapComp.controls.push(this.control);\n    let olEvents = Util.getEvents(this.events, this.props);\n\n    for (let eventName in olEvents) {\n      this.control.on(eventName, olEvents[eventName]);\n    }\n  }\n\n}\nRotate['contextTypes'] = {\n  mapComp: React.PropTypes.instanceOf(Map),\n  map: React.PropTypes.instanceOf(ol.Map)\n};","map":{"version":3,"sources":["/Users/kristalduran/Desktop/PC3 Mapa/pc3-mapa/src/map/controls/rotate.tsx"],"names":["React","ol","Util","Map","Rotate","Component","constructor","props","control","options","className","undefined","label","tipLabel","duration","autoHide","render","resetNorth","target","events","componentDidMount","getOptions","Object","context","mapComp","controls","push","olEvents","getEvents","eventName","on","PropTypes","instanceOf","map"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAKC,EAAZ,MAAoB,YAApB;AACA,SAAQC,IAAR,QAAmB,SAAnB;AACA,SAAQC,GAAR,QAAkB,QAAlB;AAEA,OAAO,MAAMC,MAAN,SAAqBJ,KAAK,CAACK,SAA3B,CAA+C;AAoBpDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAAE,UAAMA,KAAN;AAAF,SAlBnBC,OAkBmB;AAAA,SAhBnBC,OAgBmB,GAhBJ;AACbC,MAAAA,SAAS,EAAEC,SADE;AAEbC,MAAAA,KAAK,EAAED,SAFM;AAGbE,MAAAA,QAAQ,EAAIF,SAHC;AAIbG,MAAAA,QAAQ,EAAEH,SAJG;AAKbI,MAAAA,QAAQ,EAAEJ,SALG;AAMbK,MAAAA,MAAM,EAAEL,SANK;AAObM,MAAAA,UAAU,EAAEN,SAPC;AAQbO,MAAAA,MAAM,EAAEP;AARK,KAgBI;AAAA,SALnBQ,MAKmB,GALL;AACZ,gBAAUR,SADE;AAEZ,wBAAkBA;AAFN,KAKK;AAAiB;;AAEpCK,EAAAA,MAAM,GAAG;AAAE,WAAO,IAAP;AAAc;;AAEzBI,EAAAA,iBAAiB,GAAI;AACnB,QAAIX,OAAO,GAAGP,IAAI,CAACmB,UAAL,CAAgBC,MAAM,CAAC,QAAD,CAAN,CAAiB,KAAKb,OAAtB,EAA+B,KAAKF,KAApC,CAAhB,CAAd;AACA,SAAKC,OAAL,GAAe,IAAIP,EAAE,CAACO,OAAH,CAAWJ,MAAf,CAAsBK,OAAtB,CAAf;AACA,SAAKc,OAAL,CAAaC,OAAb,CAAqBC,QAArB,CAA8BC,IAA9B,CAAmC,KAAKlB,OAAxC;AAEA,QAAImB,QAAQ,GAAGzB,IAAI,CAAC0B,SAAL,CAAe,KAAKT,MAApB,EAA4B,KAAKZ,KAAjC,CAAf;;AACA,SAAI,IAAIsB,SAAR,IAAqBF,QAArB,EAA+B;AAC7B,WAAKnB,OAAL,CAAasB,EAAb,CAAgBD,SAAhB,EAA2BF,QAAQ,CAACE,SAAD,CAAnC;AACD;AACF;;AAjCmD;AAqCtDzB,MAAM,CAAC,cAAD,CAAN,GAAyB;AACvBoB,EAAAA,OAAO,EAAExB,KAAK,CAAC+B,SAAN,CAAgBC,UAAhB,CAA2B7B,GAA3B,CADc;AAEvB8B,EAAAA,GAAG,EAAEjC,KAAK,CAAC+B,SAAN,CAAgBC,UAAhB,CAA2B/B,EAAE,CAACE,GAA9B;AAFkB,CAAzB","sourcesContent":["import * as React from 'react';\nimport * as ol from 'openlayers';\nimport {Util} from '../util';\nimport {Map} from '../map';\n\nexport class Rotate extends React.Component<any, any> {\n\n  control: ol.control.Rotate;\n\n  options: any = {\n    className: undefined,\n    label: undefined,\n    tipLabel  : undefined,\n    duration: undefined,\n    autoHide: undefined,\n    render: undefined,\n    resetNorth: undefined,\n    target: undefined\n  };\n\n  events: any = {\n    'change': undefined,\n    'propertychange': undefined\n  };\n\n  constructor(props) { super(props); }\n\n  render() { return null; }\n\n  componentDidMount () {\n    let options = Util.getOptions(Object['assign'](this.options, this.props));\n    this.control = new ol.control.Rotate(options);\n    this.context.mapComp.controls.push(this.control)\n\n    let olEvents = Util.getEvents(this.events, this.props);\n    for(let eventName in olEvents) {\n      this.control.on(eventName, olEvents[eventName]);\n    }\n  }\n\n}\n\nRotate['contextTypes'] = {\n  mapComp: React.PropTypes.instanceOf(Map),\n  map: React.PropTypes.instanceOf(ol.Map)\n};\n"]},"metadata":{},"sourceType":"module"}