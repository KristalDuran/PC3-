{"ast":null,"code":"var _jsxFileName = \"/Users/kristalduran/Desktop/PC3 Mapa/pc3-mapa/src/map/overlay.tsx\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport * as ol from 'openlayers';\nimport { Util } from './util';\nexport class Overlay extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.overlay = void 0;\n    this.el = void 0;\n    this.options = {\n      id: undefined,\n      element: undefined,\n      offset: undefined,\n      position: undefined,\n      stopEvent: undefined,\n      insertFirst: undefined,\n      autoPan: undefined,\n      autoPanAnimation: undefined,\n      autoPanMargin: undefined\n    };\n    this.events = {\n      'change': undefined,\n      'change:element': undefined,\n      'change:map': undefined,\n      'change:offset': undefined,\n      'change:position': undefined,\n      'change:positioning': undefined,\n      'propertychange': undefined\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }, this.props.children);\n  }\n\n  componentDidMount() {\n    let options = Util.getOptions(Object['assign'](this.options, this.props));\n    options.element = ReactDOM.findDOMNode(this).querySelector('div'); // console.log('options.element', options.element);\n\n    this.overlay = new ol.Overlay(options);\n    this.context.mapComp.overlays.push(this.overlay);\n  }\n\n}\nOverlay['contextTypes'] = {\n  mapComp: React.PropTypes.instanceOf(Object),\n  map: React.PropTypes.instanceOf(ol.Map)\n};","map":{"version":3,"sources":["/Users/kristalduran/Desktop/PC3 Mapa/pc3-mapa/src/map/overlay.tsx"],"names":["React","ReactDOM","ol","Util","Overlay","Component","overlay","el","options","id","undefined","element","offset","position","stopEvent","insertFirst","autoPan","autoPanAnimation","autoPanMargin","events","render","props","children","componentDidMount","getOptions","Object","findDOMNode","querySelector","context","mapComp","overlays","push","PropTypes","instanceOf","map","Map"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAKC,QAAZ,MAA0B,WAA1B;AACA,OAAO,KAAKC,EAAZ,MAAoB,YAApB;AACA,SAAQC,IAAR,QAAmB,QAAnB;AAGA,OAAO,MAAMC,OAAN,SAAsBJ,KAAK,CAACK,SAA5B,CAAgD;AAAA;AAAA;AAAA,SAErDC,OAFqD;AAAA,SAGrDC,EAHqD;AAAA,SAKrDC,OALqD,GAKtC;AACbC,MAAAA,EAAE,EAAEC,SADS;AAEbC,MAAAA,OAAO,EAAED,SAFI;AAGbE,MAAAA,MAAM,EAAEF,SAHK;AAIbG,MAAAA,QAAQ,EAAEH,SAJG;AAKbI,MAAAA,SAAS,EAAEJ,SALE;AAMbK,MAAAA,WAAW,EAAEL,SANA;AAObM,MAAAA,OAAO,EAAEN,SAPI;AAQbO,MAAAA,gBAAgB,EAAEP,SARL;AASbQ,MAAAA,aAAa,EAAER;AATF,KALsC;AAAA,SAiBrDS,MAjBqD,GAiBvC;AACZ,gBAAUT,SADE;AAEZ,wBAAkBA,SAFN;AAGZ,oBAAcA,SAHF;AAIZ,uBAAiBA,SAJL;AAKZ,yBAAmBA,SALP;AAMZ,4BAAsBA,SANV;AAOZ,wBAAkBA;AAPN,KAjBuC;AAAA;;AA2BrDU,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKC,KAAL,CAAWC,QADd,CADF;AAKD;;AAEDC,EAAAA,iBAAiB,GAAI;AACnB,QAAIf,OAAO,GAAGL,IAAI,CAACqB,UAAL,CAAiBC,MAAM,CAAC,QAAD,CAAN,CAAiB,KAAKjB,OAAtB,EAA+B,KAAKa,KAApC,CAAjB,CAAd;AACAb,IAAAA,OAAO,CAACG,OAAR,GAAkBV,QAAQ,CAACyB,WAAT,CAAqB,IAArB,EAA2BC,aAA3B,CAAyC,KAAzC,CAAlB,CAFmB,CAGnB;;AACA,SAAKrB,OAAL,GAAe,IAAIJ,EAAE,CAACE,OAAP,CAAeI,OAAf,CAAf;AACA,SAAKoB,OAAL,CAAaC,OAAb,CAAqBC,QAArB,CAA8BC,IAA9B,CAAmC,KAAKzB,OAAxC;AACD;;AAzCoD;AA4CvDF,OAAO,CAAC,cAAD,CAAP,GAA0B;AACxByB,EAAAA,OAAO,EAAE7B,KAAK,CAACgC,SAAN,CAAgBC,UAAhB,CAA2BR,MAA3B,CADe;AAExBS,EAAAA,GAAG,EAAElC,KAAK,CAACgC,SAAN,CAAgBC,UAAhB,CAA2B/B,EAAE,CAACiC,GAA9B;AAFmB,CAA1B","sourcesContent":["import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport * as ol from 'openlayers';\nimport {Util} from './util';\nimport {Map} from './Map';\n\nexport class Overlay extends React.Component<any, any> {\n\n  overlay: ol.Overlay;\n  el: HTMLElement;\n\n  options: any = {\n    id: undefined,\n    element: undefined,\n    offset: undefined,\n    position: undefined,\n    stopEvent: undefined,\n    insertFirst: undefined,\n    autoPan: undefined,\n    autoPanAnimation: undefined,\n    autoPanMargin: undefined\n  };\n\n  events: any = {\n    'change': undefined,\n    'change:element': undefined,\n    'change:map': undefined,\n    'change:offset': undefined,\n    'change:position': undefined,\n    'change:positioning': undefined,\n    'propertychange': undefined\n  };\n\n  render() {\n    return (\n      <div>\n        {this.props.children}\n      </div>\n    );\n  }\n\n  componentDidMount () {\n    let options = Util.getOptions( Object['assign'](this.options, this.props));\n    options.element = ReactDOM.findDOMNode(this).querySelector('div');\n    // console.log('options.element', options.element);\n    this.overlay = new ol.Overlay(options);\n    this.context.mapComp.overlays.push(this.overlay);\n  }\n}\n\nOverlay['contextTypes'] = {\n  mapComp: React.PropTypes.instanceOf(Object),\n  map: React.PropTypes.instanceOf(ol.Map)\n};\n"]},"metadata":{},"sourceType":"module"}