{"ast":null,"code":"/**\n * Bing map src doc\n */\nvar BingMap =\n/** @class */\nfunction () {\n  function BingMap(maps) {\n    this.maps = maps;\n  }\n\n  BingMap.prototype.getBingMap = function (tile, key, type, language, imageUrl, subDomains) {\n    var quadKey = '';\n    var subDomain;\n    var maxZoom = Math.min(this.maps.tileZoomLevel, parseInt(this.maxZoom, 10));\n\n    for (var i = maxZoom; i > 0; i--) {\n      var digit = 0;\n      var mask = 1 << i - 1;\n\n      if ((tile.x & mask) !== 0) {\n        digit++;\n      }\n\n      if ((tile.y & mask) !== 0) {\n        digit += 2;\n      }\n\n      quadKey = quadKey + '' + digit;\n    }\n\n    subDomain = subDomains[Math.min(parseInt(quadKey.substr(quadKey.length - 1, 1), 10), subDomains.length)];\n    imageUrl = imageUrl.replace('{quadkey}', quadKey).replace('{subdomain}', subDomain);\n    return imageUrl += '&mkt=' + language + '&ur=IN&Key=' + key;\n  };\n\n  return BingMap;\n}();\n\nexport { BingMap };","map":{"version":3,"sources":["/Users/kristalduran/node_modules/@syncfusion/ej2-maps/src/maps/layers/bing-map.js"],"names":["BingMap","maps","prototype","getBingMap","tile","key","type","language","imageUrl","subDomains","quadKey","subDomain","maxZoom","Math","min","tileZoomLevel","parseInt","i","digit","mask","x","y","substr","length","replace"],"mappings":"AAAA;;;AAGA,IAAIA,OAAO;AAAG;AAAe,YAAY;AACrC,WAASA,OAAT,CAAiBC,IAAjB,EAAuB;AACnB,SAAKA,IAAL,GAAYA,IAAZ;AACH;;AACDD,EAAAA,OAAO,CAACE,SAAR,CAAkBC,UAAlB,GAA+B,UAAUC,IAAV,EAAgBC,GAAhB,EAAqBC,IAArB,EAA2BC,QAA3B,EAAqCC,QAArC,EAA+CC,UAA/C,EAA2D;AACtF,QAAIC,OAAO,GAAG,EAAd;AACA,QAAIC,SAAJ;AACA,QAAIC,OAAO,GAAGC,IAAI,CAACC,GAAL,CAAS,KAAKb,IAAL,CAAUc,aAAnB,EAAkCC,QAAQ,CAAC,KAAKJ,OAAN,EAAe,EAAf,CAA1C,CAAd;;AACA,SAAK,IAAIK,CAAC,GAAGL,OAAb,EAAsBK,CAAC,GAAG,CAA1B,EAA6BA,CAAC,EAA9B,EAAkC;AAC9B,UAAIC,KAAK,GAAG,CAAZ;AACA,UAAIC,IAAI,GAAG,KAAMF,CAAC,GAAG,CAArB;;AACA,UAAI,CAACb,IAAI,CAACgB,CAAL,GAASD,IAAV,MAAoB,CAAxB,EAA2B;AACvBD,QAAAA,KAAK;AACR;;AACD,UAAI,CAACd,IAAI,CAACiB,CAAL,GAASF,IAAV,MAAoB,CAAxB,EAA2B;AACvBD,QAAAA,KAAK,IAAI,CAAT;AACH;;AACDR,MAAAA,OAAO,GAAGA,OAAO,GAAG,EAAV,GAAeQ,KAAzB;AACH;;AACDP,IAAAA,SAAS,GAAGF,UAAU,CAACI,IAAI,CAACC,GAAL,CAASE,QAAQ,CAACN,OAAO,CAACY,MAAR,CAAeZ,OAAO,CAACa,MAAR,GAAiB,CAAhC,EAAmC,CAAnC,CAAD,EAAwC,EAAxC,CAAjB,EAA8Dd,UAAU,CAACc,MAAzE,CAAD,CAAtB;AACAf,IAAAA,QAAQ,GAAGA,QAAQ,CAACgB,OAAT,CAAiB,WAAjB,EAA8Bd,OAA9B,EAAuCc,OAAvC,CAA+C,aAA/C,EAA8Db,SAA9D,CAAX;AACA,WAAOH,QAAQ,IAAI,UAAUD,QAAV,GAAqB,aAArB,GAAqCF,GAAxD;AACH,GAlBD;;AAmBA,SAAOL,OAAP;AACH,CAxB4B,EAA7B;;AAyBA,SAASA,OAAT","sourcesContent":["/**\n * Bing map src doc\n */\nvar BingMap = /** @class */ (function () {\n    function BingMap(maps) {\n        this.maps = maps;\n    }\n    BingMap.prototype.getBingMap = function (tile, key, type, language, imageUrl, subDomains) {\n        var quadKey = '';\n        var subDomain;\n        var maxZoom = Math.min(this.maps.tileZoomLevel, parseInt(this.maxZoom, 10));\n        for (var i = maxZoom; i > 0; i--) {\n            var digit = 0;\n            var mask = 1 << (i - 1);\n            if ((tile.x & mask) !== 0) {\n                digit++;\n            }\n            if ((tile.y & mask) !== 0) {\n                digit += 2;\n            }\n            quadKey = quadKey + '' + digit;\n        }\n        subDomain = subDomains[Math.min(parseInt(quadKey.substr(quadKey.length - 1, 1), 10), subDomains.length)];\n        imageUrl = imageUrl.replace('{quadkey}', quadKey).replace('{subdomain}', subDomain);\n        return imageUrl += '&mkt=' + language + '&ur=IN&Key=' + key;\n    };\n    return BingMap;\n}());\nexport { BingMap };\n"]},"metadata":{},"sourceType":"module"}