{"ast":null,"code":"import * as React from 'react';\nimport * as ol from 'openlayers';\nimport { Util } from \"../util\";\nimport { Map } from '../map';\nexport class DragRotateAndZoom extends React.Component {\n  constructor(props) {\n    super(props);\n    this.interaction = void 0;\n    this.options = {\n      condition: undefined,\n      duration: undefined\n    };\n    this.events = {\n      'change': undefined,\n      'change:active': undefined,\n      'propertychange': undefined\n    };\n  }\n\n  render() {\n    return null;\n  }\n\n  componentDidMount() {\n    let options = Util.getOptions(Object['assign'](this.options, this.props));\n    console.log('options', options);\n    this.interaction = new ol.interaction.DragRotateAndZoom(options);\n    this.context.mapComp.interactions.push(this.interaction);\n    let olEvents = Util.getEvents(this.events, this.props);\n\n    for (let eventName in olEvents) {\n      this.interaction.on(eventName, olEvents[eventName]);\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps !== this.props) {\n      this.context.mapComp.map.removeInteraction(this.interaction);\n      let options = Util.getOptions(Object['assign'](this.options, nextProps));\n      this.interaction = new ol.interaction.DragRotateAndZoom(options);\n      this.context.mapComp.map.addInteraction(this.interaction);\n      let olEvents = Util.getEvents(this.events, this.props);\n\n      for (let eventName in olEvents) {\n        this.interaction.on(eventName, olEvents[eventName]);\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this.context.mapComp.map.removeInteraction(this.interaction);\n  }\n\n}\nDragRotateAndZoom['contextTypes'] = {\n  mapComp: React.PropTypes.instanceOf(Map),\n  map: React.PropTypes.instanceOf(ol.Map)\n};","map":{"version":3,"sources":["/Users/kristalduran/Desktop/PC3 Mapa/pc3-mapa/src/map/interactions/drag-rotate-and-zoom.tsx"],"names":["React","ol","Util","Map","DragRotateAndZoom","Component","constructor","props","interaction","options","condition","undefined","duration","events","render","componentDidMount","getOptions","Object","console","log","context","mapComp","interactions","push","olEvents","getEvents","eventName","on","componentWillReceiveProps","nextProps","map","removeInteraction","addInteraction","componentWillUnmount","PropTypes","instanceOf"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAKC,EAAZ,MAAoB,YAApB;AACA,SAAQC,IAAR,QAAmB,SAAnB;AACA,SAAQC,GAAR,QAAkB,QAAlB;AAEA,OAAO,MAAMC,iBAAN,SAAgCJ,KAAK,CAACK,SAAtC,CAA0D;AAe/DC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAAE,UAAMA,KAAN;AAAF,SAbnBC,WAamB;AAAA,SAXnBC,OAWmB,GAXJ;AACbC,MAAAA,SAAS,EAAEC,SADE;AAEbC,MAAAA,QAAQ,EAAED;AAFG,KAWI;AAAA,SANnBE,MAMmB,GANL;AACZ,gBAAUF,SADE;AAEZ,uBAAiBA,SAFL;AAGZ,wBAAkBA;AAHN,KAMK;AAAiB;;AAEpCG,EAAAA,MAAM,GAAG;AAAE,WAAO,IAAP;AAAc;;AAEzBC,EAAAA,iBAAiB,GAAI;AACnB,QAAIN,OAAO,GAAGP,IAAI,CAACc,UAAL,CAAgBC,MAAM,CAAC,QAAD,CAAN,CAAiB,KAAKR,OAAtB,EAA+B,KAAKF,KAApC,CAAhB,CAAd;AACAW,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBV,OAAvB;AACA,SAAKD,WAAL,GAAmB,IAAIP,EAAE,CAACO,WAAH,CAAeJ,iBAAnB,CAAqCK,OAArC,CAAnB;AACA,SAAKW,OAAL,CAAaC,OAAb,CAAqBC,YAArB,CAAkCC,IAAlC,CAAuC,KAAKf,WAA5C;AAEA,QAAIgB,QAAQ,GAAGtB,IAAI,CAACuB,SAAL,CAAe,KAAKZ,MAApB,EAA4B,KAAKN,KAAjC,CAAf;;AACA,SAAI,IAAImB,SAAR,IAAqBF,QAArB,EAA+B;AAC7B,WAAKhB,WAAL,CAAiBmB,EAAjB,CAAoBD,SAApB,EAA+BF,QAAQ,CAACE,SAAD,CAAvC;AACD;AACF;;AAEDE,EAAAA,yBAAyB,CAAEC,SAAF,EAAa;AACpC,QAAGA,SAAS,KAAK,KAAKtB,KAAtB,EAA4B;AAC1B,WAAKa,OAAL,CAAaC,OAAb,CAAqBS,GAArB,CAAyBC,iBAAzB,CAA2C,KAAKvB,WAAhD;AACA,UAAIC,OAAO,GAAGP,IAAI,CAACc,UAAL,CAAgBC,MAAM,CAAC,QAAD,CAAN,CAAiB,KAAKR,OAAtB,EAA+BoB,SAA/B,CAAhB,CAAd;AACA,WAAKrB,WAAL,GAAmB,IAAIP,EAAE,CAACO,WAAH,CAAeJ,iBAAnB,CAAqCK,OAArC,CAAnB;AACA,WAAKW,OAAL,CAAaC,OAAb,CAAqBS,GAArB,CAAyBE,cAAzB,CAAwC,KAAKxB,WAA7C;AAEA,UAAIgB,QAAQ,GAAGtB,IAAI,CAACuB,SAAL,CAAe,KAAKZ,MAApB,EAA4B,KAAKN,KAAjC,CAAf;;AACA,WAAI,IAAImB,SAAR,IAAqBF,QAArB,EAA+B;AAC7B,aAAKhB,WAAL,CAAiBmB,EAAjB,CAAoBD,SAApB,EAA+BF,QAAQ,CAACE,SAAD,CAAvC;AACD;AACF;AACF;;AAEDO,EAAAA,oBAAoB,GAAI;AACtB,SAAKb,OAAL,CAAaC,OAAb,CAAqBS,GAArB,CAAyBC,iBAAzB,CAA2C,KAAKvB,WAAhD;AACD;;AA/C8D;AAmDjEJ,iBAAiB,CAAC,cAAD,CAAjB,GAAoC;AAClCiB,EAAAA,OAAO,EAAErB,KAAK,CAACkC,SAAN,CAAgBC,UAAhB,CAA2BhC,GAA3B,CADyB;AAElC2B,EAAAA,GAAG,EAAE9B,KAAK,CAACkC,SAAN,CAAgBC,UAAhB,CAA2BlC,EAAE,CAACE,GAA9B;AAF6B,CAApC","sourcesContent":["import * as React from 'react';\nimport * as ol from 'openlayers';\nimport {Util} from \"../util\";\nimport {Map} from '../map';\n\nexport class DragRotateAndZoom extends React.Component<any, any> {\n\n  interaction: ol.interaction.DragRotateAndZoom;\n\n  options: any = {\n    condition: undefined,\n    duration: undefined\n  };\n\n  events: any = {\n    'change': undefined,\n    'change:active': undefined,\n    'propertychange': undefined\n  };\n\n  constructor(props) { super(props); }\n\n  render() { return null; }\n\n  componentDidMount () {\n    let options = Util.getOptions(Object['assign'](this.options, this.props));\n    console.log('options', options);\n    this.interaction = new ol.interaction.DragRotateAndZoom(options);\n    this.context.mapComp.interactions.push(this.interaction)\n    \n    let olEvents = Util.getEvents(this.events, this.props);\n    for(let eventName in olEvents) {\n      this.interaction.on(eventName, olEvents[eventName]);\n    }\n  }\n\n  componentWillReceiveProps (nextProps) {\n    if(nextProps !== this.props){\n      this.context.mapComp.map.removeInteraction(this.interaction);\n      let options = Util.getOptions(Object['assign'](this.options, nextProps));\n      this.interaction = new ol.interaction.DragRotateAndZoom(options);\n      this.context.mapComp.map.addInteraction(this.interaction);\n\n      let olEvents = Util.getEvents(this.events, this.props);\n      for(let eventName in olEvents) {\n        this.interaction.on(eventName, olEvents[eventName]);\n      }\n    }\n  }\n  \n  componentWillUnmount () {\n    this.context.mapComp.map.removeInteraction(this.interaction);\n  }\n\n}\n\nDragRotateAndZoom['contextTypes'] = {\n  mapComp: React.PropTypes.instanceOf(Map),\n  map: React.PropTypes.instanceOf(ol.Map)\n};"]},"metadata":{},"sourceType":"module"}