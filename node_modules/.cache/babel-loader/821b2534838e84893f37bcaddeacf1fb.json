{"ast":null,"code":"import { tooltipRender } from '../index';\nimport { Tooltip } from '@syncfusion/ej2-svg-base';\nimport { createElement, Browser, isNullOrUndefined, extend, remove } from '@syncfusion/ej2-base';\nimport { getMousePosition, Internalize, checkPropertyPath, getValueFromObject, formatValue, convertStringToValue } from '../utils/helper';\n/**\n * Map Tooltip\n */\n\nvar MapsTooltip =\n/** @class */\nfunction () {\n  function MapsTooltip(maps) {\n    this.maps = maps;\n    this.tooltipId = this.maps.element.id + '_mapsTooltip';\n    this.addEventListener();\n  }\n  /* tslint:disable:no-string-literal */\n  //tslint:disable:max-func-body-length\n\n\n  MapsTooltip.prototype.renderTooltip = function (e) {\n    var _this = this;\n\n    var pageX;\n    var pageY;\n    var target;\n    var touchArg;\n    var tooltipArgs;\n\n    if (e.type.indexOf('touch') !== -1) {\n      this.isTouch = true;\n      touchArg = e;\n      pageX = touchArg.changedTouches[0].pageX;\n      pageY = touchArg.changedTouches[0].pageY;\n      target = touchArg.target;\n    } else {\n      this.isTouch = e.pointerType === 'touch';\n      pageX = e.pageX;\n      pageY = e.pageY;\n      target = e.target;\n    }\n\n    var option;\n    var currentData = '';\n    var targetId = target.id;\n    var item = {};\n    var tooltipEle;\n    var location;\n    var toolTipData = {};\n    var templateData = [];\n    var index = targetId.indexOf('_LayerIndex_') > -1 && parseFloat(targetId.split('_LayerIndex_')[1].split('_')[0]);\n    var layer = this.maps.layersCollection[index];\n    var tooltipContent = [];\n    var markerFill;\n    location = getMousePosition(pageX, pageY, this.maps.svgObject);\n    this.tooltipTargetID = targetId;\n    var istooltipRender = targetId.indexOf('_shapeIndex_') > -1 || targetId.indexOf('_MarkerIndex_') > -1 || targetId.indexOf('_BubbleIndex_') > -1;\n\n    if (istooltipRender) {\n      if (targetId.indexOf('_shapeIndex_') > -1) {\n        option = layer.tooltipSettings;\n        option.textStyle.fontFamily = this.maps.themeStyle.fontFamily || option.textStyle.fontFamily;\n        option.textStyle.opacity = this.maps.themeStyle.tooltipTextOpacity || option.textStyle.opacity;\n        var shape = parseInt(targetId.split('_shapeIndex_')[1].split('_')[0], 10);\n\n        if (isNullOrUndefined(layer.layerData) || isNullOrUndefined(layer.layerData[shape])) {\n          return;\n        }\n\n        var value = layer.layerData[shape]['property'];\n        var isShape = false;\n        var properties = Object.prototype.toString.call(layer.shapePropertyPath) === '[object Array]' ? layer.shapePropertyPath : [layer.shapePropertyPath];\n\n        if (!isNullOrUndefined(properties)) {\n          for (var k = 0; k < properties.length; k++) {\n            for (var i = 0; i < layer['dataSource']['length']; i++) {\n              var data = layer.dataSource[i];\n              var dataPath = layer.shapeDataPath.indexOf('.') > -1 ? getValueFromObject(data, layer.shapeDataPath) : data[layer.shapeDataPath];\n              var dataPathValue = !isNullOrUndefined(dataPath) && isNaN(data[layer.shapeDataPath]) ? dataPath.toLowerCase() : dataPath;\n              var propertyValue = !isNullOrUndefined(value[properties[k]]) && isNaN(value[properties[k]]) ? value[properties[k]].toLowerCase() : value[properties[k]];\n\n              if (dataPathValue === propertyValue) {\n                isShape = true;\n                index = i;\n                k = properties.length;\n                break;\n              }\n            }\n          }\n\n          index = isShape ? index : null;\n          templateData = layer.dataSource[index];\n        }\n\n        if (option.visible && (!isNullOrUndefined(index) && !isNaN(index) || !isNullOrUndefined(value))) {\n          if (layer.tooltipSettings.format) {\n            currentData = this.formatter(layer.tooltipSettings.format, layer.dataSource[index]);\n          } else {\n            var shapePath = checkPropertyPath(layer.shapeDataPath, layer.shapePropertyPath, value);\n            currentData = !isNullOrUndefined(layer.dataSource) && !isNullOrUndefined(index) ? formatValue(option.valuePath.indexOf('.') > -1 ? getValueFromObject(layer.dataSource[index], option.valuePath) : layer.dataSource[index][option.valuePath], this.maps) : value[shapePath];\n\n            if (isNullOrUndefined(currentData)) {\n              currentData = option.valuePath.indexOf('.') > -1 ? getValueFromObject(value, option.valuePath) : value[option.valuePath];\n            }\n          }\n        } //location.y = this.template(option, location);\n\n      } else if (targetId.indexOf('_MarkerIndex_') > -1) {\n        var markerIdex = parseInt(targetId.split('_MarkerIndex_')[1].split('_')[0], 10);\n        var dataIndex = parseInt(targetId.split('_MarkerIndex_')[1].split('_')[2], 10);\n        var marker = layer.markerSettings[markerIdex];\n        option = marker.tooltipSettings;\n        templateData = marker.dataSource[dataIndex];\n\n        if (option.visible && !isNaN(markerIdex)) {\n          if (marker.tooltipSettings.format) {\n            currentData = this.formatter(marker.tooltipSettings.format, marker.dataSource[dataIndex]);\n          } else {\n            if (marker.template && !marker.tooltipSettings.valuePath) {\n              currentData = marker.template.split('>')[1].split('<')[0];\n            } else {\n              currentData = formatValue(marker.tooltipSettings.valuePath.indexOf('.') > -1 ? getValueFromObject(marker.dataSource[dataIndex], marker.tooltipSettings.valuePath) : marker.dataSource[dataIndex][marker.tooltipSettings.valuePath], this.maps);\n            }\n          }\n        } //location.y = this.template(option, location);\n\n      } else if (targetId.indexOf('_BubbleIndex_') > -1) {\n        var bubbleIndex = parseInt(targetId.split('_BubbleIndex_')[1].split('_')[0], 10);\n        var dataIndex = parseInt(targetId.split('_BubbleIndex_')[1].split('_')[2], 10);\n        var bubble = layer.bubbleSettings[bubbleIndex];\n        option = bubble.tooltipSettings;\n        templateData = bubble.dataSource[dataIndex];\n\n        if (option.visible && !isNaN(dataIndex)) {\n          if (bubble.tooltipSettings.format) {\n            currentData = this.formatter(bubble.tooltipSettings.format, bubble.dataSource[dataIndex]);\n          } else {\n            currentData = formatValue(bubble.tooltipSettings.valuePath.indexOf('.') > -1 ? getValueFromObject(bubble.dataSource[dataIndex], bubble.tooltipSettings.valuePath) : bubble.dataSource[dataIndex][bubble.tooltipSettings.valuePath], this.maps);\n          }\n        } //location.y = this.template(option, location);\n\n      }\n\n      if (document.getElementById(this.tooltipId)) {\n        tooltipEle = document.getElementById(this.tooltipId);\n      } else {\n        tooltipEle = createElement('div', {\n          id: this.maps.element.id + '_mapsTooltip',\n          className: 'EJ2-maps-Tooltip',\n          styles: 'position: absolute;pointer-events:none;'\n        });\n        document.getElementById(this.maps.element.id + '_Secondary_Element').appendChild(tooltipEle);\n      }\n\n      if (option.template !== null && Object.keys(typeof option.template === 'object' ? option.template : {}).length === 1) {\n        option.template = option.template[Object.keys(option.template)[0]];\n      }\n\n      templateData = this.setTooltipContent(option, templateData);\n      var tooltipOption = {\n        location: location,\n        text: tooltipContent,\n        data: templateData,\n        textStyle: option.textStyle,\n        template: option.template\n      };\n      tooltipArgs = {\n        cancel: false,\n        name: tooltipRender,\n        options: tooltipOption,\n        fill: option.fill,\n        maps: this.maps,\n        element: target,\n        eventArgs: e\n      };\n\n      if (this.maps.isBlazor) {\n        var tootipOption_1 = {\n          location: location\n        };\n        var blazorArgs_1 = {\n          name: tooltipRender,\n          cancel: false,\n          options: tootipOption_1,\n          data: templateData,\n          textStyle: tooltipArgs.options['textStyle'],\n          fill: tooltipArgs.fill,\n          element: target,\n          eventArgs: e\n        };\n        this.maps.trigger(tooltipRender, blazorArgs_1, function (args) {\n          if (!blazorArgs_1.cancel && option.visible && !isNullOrUndefined(currentData) && targetId.indexOf('_cluster_') === -1 && targetId.indexOf('_dataLabel_') === -1) {\n            var blazTooltipName = void 0;\n\n            if (targetId.indexOf('MarkerIndex') > 0) {\n              blazTooltipName = 'MarkerTooltipTemplate';\n            } else if (targetId.indexOf('BubbleIndex') > 0) {\n              blazTooltipName = 'BubbleTooltipTemplate';\n            } else {\n              blazTooltipName = 'LayerTooltipTemplate';\n            }\n\n            _this.maps['isProtectedOnChange'] = true;\n\n            if (blazorArgs_1.cancel) {\n              _this.svgTooltip = new Tooltip({\n                enable: true,\n                header: '',\n                content: [currentData.toString()],\n                shapes: [],\n                location: tootipOption_1.location,\n                palette: [markerFill],\n                areaBounds: _this.maps.mapAreaRect,\n                textStyle: tooltipArgs.options['textStyle'],\n                availableSize: _this.maps.availableSize,\n                fill: tooltipArgs.fill\n              });\n            } else {\n              _this.svgTooltip = new Tooltip({\n                enable: true,\n                header: '',\n                content: [currentData.toString()],\n                shapes: [],\n                location: tootipOption_1.location,\n                palette: [markerFill],\n                areaBounds: _this.maps.mapAreaRect,\n                textStyle: blazorArgs_1.textStyle,\n                availableSize: _this.maps.availableSize,\n                fill: blazorArgs_1.fill\n              });\n            }\n\n            _this.svgTooltip.opacity = _this.maps.themeStyle.tooltipFillOpacity || _this.svgTooltip.opacity;\n\n            _this.svgTooltip.appendTo(tooltipEle);\n          } else {\n            _this.removeTooltip();\n          }\n        });\n      } else {\n        this.maps.trigger(tooltipRender, tooltipArgs, function (args) {\n          if (!tooltipArgs.cancel && option.visible && !isNullOrUndefined(currentData) && targetId.indexOf('_cluster_') === -1 && targetId.indexOf('_dataLabel_') === -1) {\n            _this.maps['isProtectedOnChange'] = true;\n            tooltipArgs.options['textStyle']['color'] = _this.maps.themeStyle.tooltipFontColor || tooltipArgs.options['textStyle']['color'];\n\n            if (tooltipArgs.cancel) {\n              _this.svgTooltip = new Tooltip({\n                enable: true,\n                header: '',\n                data: option['data'],\n                template: option['template'],\n                content: [currentData.toString()],\n                shapes: [],\n                location: option['location'],\n                palette: [markerFill],\n                areaBounds: _this.maps.mapAreaRect,\n                textStyle: option['textStyle'],\n                availableSize: _this.maps.availableSize,\n                fill: option.fill || _this.maps.themeStyle.tooltipFillColor\n              });\n            } else {\n              _this.svgTooltip = new Tooltip({\n                enable: true,\n                header: '',\n                data: tooltipArgs.options['data'],\n                template: tooltipArgs.options['template'],\n                content: [currentData.toString()],\n                shapes: [],\n                location: tooltipArgs.options['location'],\n                palette: [markerFill],\n                areaBounds: _this.maps.mapAreaRect,\n                textStyle: tooltipArgs.options['textStyle'],\n                availableSize: _this.maps.availableSize,\n                fill: tooltipArgs.fill || _this.maps.themeStyle.tooltipFillColor\n              });\n            }\n\n            _this.svgTooltip.opacity = _this.maps.themeStyle.tooltipFillOpacity || _this.svgTooltip.opacity;\n\n            _this.svgTooltip.appendTo(tooltipEle);\n          } else {\n            _this.removeTooltip();\n          }\n        });\n      }\n\n      if (this.svgTooltip) {\n        this.maps.trigger('tooltipRenderComplete', {\n          cancel: false,\n          name: 'tooltipRenderComplete',\n          maps: this.maps,\n          options: tooltipOption,\n          element: this.svgTooltip.element\n        });\n      }\n\n      if (this.svgTooltip) {\n        this.maps.trigger('tooltipRenderComplete', {\n          cancel: false,\n          name: 'tooltipRenderComplete',\n          maps: this.maps,\n          options: tooltipOption,\n          element: this.svgTooltip.element\n        });\n      } else {\n        this.removeTooltip();\n      }\n    } else {\n      this.removeTooltip();\n    }\n  };\n  /**\n   * To get content for the current toolitp\n   */\n\n\n  MapsTooltip.prototype.setTooltipContent = function (options, templateData) {\n    var localData = extend({}, templateData, null, true);\n\n    if (this.maps.format && !isNaN(Number(localData[options.valuePath]))) {\n      localData[options.valuePath] = Internalize(this.maps, Number(localData[options.valuePath]));\n    } else {\n      localData = Object.keys(localData).length ? localData : undefined;\n    }\n\n    return localData;\n  };\n  /*private template(tooltip: TooltipSettingsModel, location: MapLocation): number {\n      location.y = (tooltip.template) ? location.y + 10 : location.y;\n      return location.y;\n  }*/\n\n\n  MapsTooltip.prototype.formatter = function (format, data) {\n    if (data === void 0) {\n      data = {};\n    }\n\n    var keys = Object.keys(data);\n\n    for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n      var key = keys_1[_i];\n      format = typeof data[key] === 'object' ? convertStringToValue('', format, data, this.maps) : format.split('${' + key + '}').join(formatValue(data[key], this.maps));\n    }\n\n    return format;\n  };\n\n  MapsTooltip.prototype.mouseUpHandler = function (e) {\n    this.renderTooltip(e);\n\n    if (this.maps.tooltipDisplayMode === 'MouseMove') {\n      clearTimeout(this.clearTimeout);\n      this.clearTimeout = setTimeout(this.removeTooltip.bind(this), 2000);\n    }\n  };\n\n  MapsTooltip.prototype.removeTooltip = function () {\n    if (document.getElementsByClassName('EJ2-maps-Tooltip').length > 0) {\n      remove(document.getElementsByClassName('EJ2-maps-Tooltip')[0]);\n    }\n  };\n  /**\n   * To bind events for tooltip module\n   */\n\n\n  MapsTooltip.prototype.addEventListener = function () {\n    if (this.maps.isDestroyed) {\n      return;\n    }\n\n    if (this.maps.tooltipDisplayMode === 'DoubleClick') {\n      this.maps.on('dblclick', this.renderTooltip, this);\n    } else if (this.maps.tooltipDisplayMode === 'Click') {\n      this.maps.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n    } else {\n      this.maps.on(Browser.touchMoveEvent, this.renderTooltip, this);\n    }\n\n    this.maps.on(Browser.touchCancelEvent, this.removeTooltip, this);\n  };\n\n  MapsTooltip.prototype.removeEventListener = function () {\n    if (this.maps.isDestroyed) {\n      return;\n    }\n\n    if (this.maps.tooltipDisplayMode === 'DoubleClick') {\n      this.maps.off('dblclick', this.removeTooltip);\n    } else if (this.maps.tooltipDisplayMode === 'Click') {\n      this.maps.off(Browser.touchEndEvent, this.mouseUpHandler);\n    } else {\n      this.maps.off(Browser.touchMoveEvent, this.renderTooltip);\n    }\n\n    this.maps.off(Browser.touchCancelEvent, this.removeTooltip);\n  };\n  /**\n   * Get module name.\n   */\n\n\n  MapsTooltip.prototype.getModuleName = function () {\n    return 'MapsTooltip';\n  };\n  /**\n   * To destroy the tooltip.\n   * @return {void}\n   * @private\n   */\n\n\n  MapsTooltip.prototype.destroy = function (maps) {\n    this.removeEventListener();\n  };\n\n  return MapsTooltip;\n}();\n\nexport { MapsTooltip };","map":{"version":3,"sources":["/Users/kristalduran/Desktop/PC3 Mapa/pc3-mapa/node_modules/@syncfusion/ej2-maps/src/maps/user-interaction/tooltip.js"],"names":["tooltipRender","Tooltip","createElement","Browser","isNullOrUndefined","extend","remove","getMousePosition","Internalize","checkPropertyPath","getValueFromObject","formatValue","convertStringToValue","MapsTooltip","maps","tooltipId","element","id","addEventListener","prototype","renderTooltip","e","_this","pageX","pageY","target","touchArg","tooltipArgs","type","indexOf","isTouch","changedTouches","pointerType","option","currentData","targetId","item","tooltipEle","location","toolTipData","templateData","index","parseFloat","split","layer","layersCollection","tooltipContent","markerFill","svgObject","tooltipTargetID","istooltipRender","tooltipSettings","textStyle","fontFamily","themeStyle","opacity","tooltipTextOpacity","shape","parseInt","layerData","value","isShape","properties","Object","toString","call","shapePropertyPath","k","length","i","data","dataSource","dataPath","shapeDataPath","dataPathValue","isNaN","toLowerCase","propertyValue","visible","format","formatter","shapePath","valuePath","markerIdex","dataIndex","marker","markerSettings","template","bubbleIndex","bubble","bubbleSettings","document","getElementById","className","styles","appendChild","keys","setTooltipContent","tooltipOption","text","cancel","name","options","fill","eventArgs","isBlazor","tootipOption_1","blazorArgs_1","trigger","args","blazTooltipName","svgTooltip","enable","header","content","shapes","palette","areaBounds","mapAreaRect","availableSize","tooltipFillOpacity","appendTo","removeTooltip","tooltipFontColor","tooltipFillColor","localData","Number","undefined","_i","keys_1","key","join","mouseUpHandler","tooltipDisplayMode","clearTimeout","setTimeout","bind","getElementsByClassName","isDestroyed","on","touchEndEvent","touchMoveEvent","touchCancelEvent","removeEventListener","off","getModuleName","destroy"],"mappings":"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","sourcesContent":["import { tooltipRender } from '../index';\nimport { Tooltip } from '@syncfusion/ej2-svg-base';\nimport { createElement, Browser, isNullOrUndefined, extend, remove } from '@syncfusion/ej2-base';\nimport { getMousePosition, Internalize, checkPropertyPath, getValueFromObject, formatValue, convertStringToValue } from '../utils/helper';\n/**\n * Map Tooltip\n */\nvar MapsTooltip = /** @class */ (function () {\n    function MapsTooltip(maps) {\n        this.maps = maps;\n        this.tooltipId = this.maps.element.id + '_mapsTooltip';\n        this.addEventListener();\n    }\n    /* tslint:disable:no-string-literal */\n    //tslint:disable:max-func-body-length\n    MapsTooltip.prototype.renderTooltip = function (e) {\n        var _this = this;\n        var pageX;\n        var pageY;\n        var target;\n        var touchArg;\n        var tooltipArgs;\n        if (e.type.indexOf('touch') !== -1) {\n            this.isTouch = true;\n            touchArg = e;\n            pageX = touchArg.changedTouches[0].pageX;\n            pageY = touchArg.changedTouches[0].pageY;\n            target = touchArg.target;\n        }\n        else {\n            this.isTouch = e.pointerType === 'touch';\n            pageX = e.pageX;\n            pageY = e.pageY;\n            target = e.target;\n        }\n        var option;\n        var currentData = '';\n        var targetId = target.id;\n        var item = {};\n        var tooltipEle;\n        var location;\n        var toolTipData = {};\n        var templateData = [];\n        var index = targetId.indexOf('_LayerIndex_') > -1 && parseFloat(targetId.split('_LayerIndex_')[1].split('_')[0]);\n        var layer = this.maps.layersCollection[index];\n        var tooltipContent = [];\n        var markerFill;\n        location = getMousePosition(pageX, pageY, this.maps.svgObject);\n        this.tooltipTargetID = targetId;\n        var istooltipRender = (targetId.indexOf('_shapeIndex_') > -1)\n            || (targetId.indexOf('_MarkerIndex_') > -1) || (targetId.indexOf('_BubbleIndex_') > -1);\n        if (istooltipRender) {\n            if (targetId.indexOf('_shapeIndex_') > -1) {\n                option = layer.tooltipSettings;\n                option.textStyle.fontFamily = this.maps.themeStyle.fontFamily || option.textStyle.fontFamily;\n                option.textStyle.opacity = this.maps.themeStyle.tooltipTextOpacity || option.textStyle.opacity;\n                var shape = parseInt(targetId.split('_shapeIndex_')[1].split('_')[0], 10);\n                if (isNullOrUndefined(layer.layerData) || isNullOrUndefined(layer.layerData[shape])) {\n                    return;\n                }\n                var value = layer.layerData[shape]['property'];\n                var isShape = false;\n                var properties = (Object.prototype.toString.call(layer.shapePropertyPath) === '[object Array]' ?\n                    layer.shapePropertyPath : [layer.shapePropertyPath]);\n                if (!isNullOrUndefined(properties)) {\n                    for (var k = 0; k < properties.length; k++) {\n                        for (var i = 0; i < layer['dataSource']['length']; i++) {\n                            var data = layer.dataSource[i];\n                            var dataPath = (layer.shapeDataPath.indexOf('.') > -1) ?\n                                (getValueFromObject(data, layer.shapeDataPath)) : data[layer.shapeDataPath];\n                            var dataPathValue = !isNullOrUndefined(dataPath) && isNaN(data[layer.shapeDataPath])\n                                ? dataPath.toLowerCase() : dataPath;\n                            var propertyValue = !isNullOrUndefined(value[properties[k]])\n                                && isNaN(value[properties[k]]) ? value[properties[k]].toLowerCase() :\n                                value[properties[k]];\n                            if (dataPathValue === propertyValue) {\n                                isShape = true;\n                                index = i;\n                                k = properties.length;\n                                break;\n                            }\n                        }\n                    }\n                    index = isShape ? index : null;\n                    templateData = layer.dataSource[index];\n                }\n                if (option.visible && ((!isNullOrUndefined(index) && !isNaN(index)) || (!isNullOrUndefined(value)))) {\n                    if (layer.tooltipSettings.format) {\n                        currentData = this.formatter(layer.tooltipSettings.format, layer.dataSource[index]);\n                    }\n                    else {\n                        var shapePath = checkPropertyPath(layer.shapeDataPath, layer.shapePropertyPath, value);\n                        currentData = (!isNullOrUndefined(layer.dataSource) && !isNullOrUndefined(index)) ?\n                            formatValue(((option.valuePath.indexOf('.') > -1) ?\n                                (getValueFromObject(layer.dataSource[index], option.valuePath)) :\n                                layer.dataSource[index][option.valuePath]), this.maps) : value[shapePath];\n                        if (isNullOrUndefined(currentData)) {\n                            currentData = (option.valuePath.indexOf('.') > -1) ?\n                                (getValueFromObject(value, option.valuePath)) : value[option.valuePath];\n                        }\n                    }\n                }\n                //location.y = this.template(option, location);\n            }\n            else if (targetId.indexOf('_MarkerIndex_') > -1) {\n                var markerIdex = parseInt(targetId.split('_MarkerIndex_')[1].split('_')[0], 10);\n                var dataIndex = parseInt(targetId.split('_MarkerIndex_')[1].split('_')[2], 10);\n                var marker = layer.markerSettings[markerIdex];\n                option = marker.tooltipSettings;\n                templateData = marker.dataSource[dataIndex];\n                if (option.visible && !isNaN(markerIdex)) {\n                    if (marker.tooltipSettings.format) {\n                        currentData = this.formatter(marker.tooltipSettings.format, marker.dataSource[dataIndex]);\n                    }\n                    else {\n                        if (marker.template && !marker.tooltipSettings.valuePath) {\n                            currentData = marker.template.split('>')[1].split('<')[0];\n                        }\n                        else {\n                            currentData =\n                                formatValue(((marker.tooltipSettings.valuePath.indexOf('.') > -1) ?\n                                    (getValueFromObject(marker.dataSource[dataIndex], marker.tooltipSettings.valuePath)) :\n                                    marker.dataSource[dataIndex][marker.tooltipSettings.valuePath]), this.maps);\n                        }\n                    }\n                }\n                //location.y = this.template(option, location);\n            }\n            else if (targetId.indexOf('_BubbleIndex_') > -1) {\n                var bubbleIndex = parseInt(targetId.split('_BubbleIndex_')[1].split('_')[0], 10);\n                var dataIndex = parseInt(targetId.split('_BubbleIndex_')[1].split('_')[2], 10);\n                var bubble = layer.bubbleSettings[bubbleIndex];\n                option = bubble.tooltipSettings;\n                templateData = bubble.dataSource[dataIndex];\n                if (option.visible && !isNaN(dataIndex)) {\n                    if (bubble.tooltipSettings.format) {\n                        currentData = this.formatter(bubble.tooltipSettings.format, bubble.dataSource[dataIndex]);\n                    }\n                    else {\n                        currentData =\n                            formatValue(((bubble.tooltipSettings.valuePath.indexOf('.') > -1) ?\n                                (getValueFromObject(bubble.dataSource[dataIndex], bubble.tooltipSettings.valuePath)) :\n                                bubble.dataSource[dataIndex][bubble.tooltipSettings.valuePath]), this.maps);\n                    }\n                }\n                //location.y = this.template(option, location);\n            }\n            if (document.getElementById(this.tooltipId)) {\n                tooltipEle = document.getElementById(this.tooltipId);\n            }\n            else {\n                tooltipEle = createElement('div', {\n                    id: this.maps.element.id + '_mapsTooltip',\n                    className: 'EJ2-maps-Tooltip',\n                    styles: 'position: absolute;pointer-events:none;'\n                });\n                document.getElementById(this.maps.element.id + '_Secondary_Element').appendChild(tooltipEle);\n            }\n            if (option.template !== null && Object.keys(typeof option.template === 'object' ? option.template : {}).length === 1) {\n                option.template = option.template[Object.keys(option.template)[0]];\n            }\n            templateData = this.setTooltipContent(option, templateData);\n            var tooltipOption = {\n                location: location, text: tooltipContent, data: templateData,\n                textStyle: option.textStyle,\n                template: option.template\n            };\n            tooltipArgs = {\n                cancel: false, name: tooltipRender,\n                options: tooltipOption,\n                fill: option.fill,\n                maps: this.maps,\n                element: target, eventArgs: e\n            };\n            if (this.maps.isBlazor) {\n                var tootipOption_1 = {\n                    location: location\n                };\n                var blazorArgs_1 = {\n                    name: tooltipRender,\n                    cancel: false,\n                    options: tootipOption_1,\n                    data: templateData,\n                    textStyle: tooltipArgs.options['textStyle'],\n                    fill: tooltipArgs.fill,\n                    element: target, eventArgs: e\n                };\n                this.maps.trigger(tooltipRender, blazorArgs_1, function (args) {\n                    if (!blazorArgs_1.cancel && option.visible && !isNullOrUndefined(currentData) &&\n                        (targetId.indexOf('_cluster_') === -1 && targetId.indexOf('_dataLabel_') === -1)) {\n                        var blazTooltipName = void 0;\n                        if (targetId.indexOf('MarkerIndex') > 0) {\n                            blazTooltipName = 'MarkerTooltipTemplate';\n                        }\n                        else if (targetId.indexOf('BubbleIndex') > 0) {\n                            blazTooltipName = 'BubbleTooltipTemplate';\n                        }\n                        else {\n                            blazTooltipName = 'LayerTooltipTemplate';\n                        }\n                        _this.maps['isProtectedOnChange'] = true;\n                        if (blazorArgs_1.cancel) {\n                            _this.svgTooltip = new Tooltip({\n                                enable: true,\n                                header: '',\n                                content: [currentData.toString()],\n                                shapes: [],\n                                location: tootipOption_1.location,\n                                palette: [markerFill],\n                                areaBounds: _this.maps.mapAreaRect,\n                                textStyle: tooltipArgs.options['textStyle'],\n                                availableSize: _this.maps.availableSize,\n                                fill: tooltipArgs.fill,\n                            });\n                        }\n                        else {\n                            _this.svgTooltip = new Tooltip({\n                                enable: true,\n                                header: '',\n                                content: [currentData.toString()],\n                                shapes: [],\n                                location: tootipOption_1.location,\n                                palette: [markerFill],\n                                areaBounds: _this.maps.mapAreaRect,\n                                textStyle: blazorArgs_1.textStyle,\n                                availableSize: _this.maps.availableSize,\n                                fill: blazorArgs_1.fill\n                            });\n                        }\n                        _this.svgTooltip.opacity = _this.maps.themeStyle.tooltipFillOpacity || _this.svgTooltip.opacity;\n                        _this.svgTooltip.appendTo(tooltipEle);\n                    }\n                    else {\n                        _this.removeTooltip();\n                    }\n                });\n            }\n            else {\n                this.maps.trigger(tooltipRender, tooltipArgs, function (args) {\n                    if (!tooltipArgs.cancel && option.visible && !isNullOrUndefined(currentData) &&\n                        (targetId.indexOf('_cluster_') === -1 && targetId.indexOf('_dataLabel_') === -1)) {\n                        _this.maps['isProtectedOnChange'] = true;\n                        tooltipArgs.options['textStyle']['color'] = _this.maps.themeStyle.tooltipFontColor\n                            || tooltipArgs.options['textStyle']['color'];\n                        if (tooltipArgs.cancel) {\n                            _this.svgTooltip = new Tooltip({\n                                enable: true,\n                                header: '',\n                                data: option['data'],\n                                template: option['template'],\n                                content: [currentData.toString()],\n                                shapes: [],\n                                location: option['location'],\n                                palette: [markerFill],\n                                areaBounds: _this.maps.mapAreaRect,\n                                textStyle: option['textStyle'],\n                                availableSize: _this.maps.availableSize,\n                                fill: option.fill || _this.maps.themeStyle.tooltipFillColor,\n                            });\n                        }\n                        else {\n                            _this.svgTooltip = new Tooltip({\n                                enable: true,\n                                header: '',\n                                data: tooltipArgs.options['data'],\n                                template: tooltipArgs.options['template'],\n                                content: [currentData.toString()],\n                                shapes: [],\n                                location: tooltipArgs.options['location'],\n                                palette: [markerFill],\n                                areaBounds: _this.maps.mapAreaRect,\n                                textStyle: tooltipArgs.options['textStyle'],\n                                availableSize: _this.maps.availableSize,\n                                fill: tooltipArgs.fill || _this.maps.themeStyle.tooltipFillColor,\n                            });\n                        }\n                        _this.svgTooltip.opacity = _this.maps.themeStyle.tooltipFillOpacity || _this.svgTooltip.opacity;\n                        _this.svgTooltip.appendTo(tooltipEle);\n                    }\n                    else {\n                        _this.removeTooltip();\n                    }\n                });\n            }\n            if (this.svgTooltip) {\n                this.maps.trigger('tooltipRenderComplete', {\n                    cancel: false, name: 'tooltipRenderComplete', maps: this.maps, options: tooltipOption,\n                    element: this.svgTooltip.element\n                });\n            }\n            if (this.svgTooltip) {\n                this.maps.trigger('tooltipRenderComplete', {\n                    cancel: false, name: 'tooltipRenderComplete', maps: this.maps, options: tooltipOption, element: this.svgTooltip.element\n                });\n            }\n            else {\n                this.removeTooltip();\n            }\n        }\n        else {\n            this.removeTooltip();\n        }\n    };\n    /**\n     * To get content for the current toolitp\n     */\n    MapsTooltip.prototype.setTooltipContent = function (options, templateData) {\n        var localData = extend({}, templateData, null, true);\n        if (this.maps.format && !isNaN(Number(localData[options.valuePath]))) {\n            localData[options.valuePath] = Internalize(this.maps, Number(localData[options.valuePath]));\n        }\n        else {\n            localData = Object.keys(localData).length ? localData : undefined;\n        }\n        return localData;\n    };\n    /*private template(tooltip: TooltipSettingsModel, location: MapLocation): number {\n        location.y = (tooltip.template) ? location.y + 10 : location.y;\n        return location.y;\n    }*/\n    MapsTooltip.prototype.formatter = function (format, data) {\n        if (data === void 0) { data = {}; }\n        var keys = Object.keys(data);\n        for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n            var key = keys_1[_i];\n            format = (typeof data[key] === 'object') ? convertStringToValue('', format, data, this.maps) :\n                format.split('${' + key + '}').join(formatValue(data[key], this.maps));\n        }\n        return format;\n    };\n    MapsTooltip.prototype.mouseUpHandler = function (e) {\n        this.renderTooltip(e);\n        if (this.maps.tooltipDisplayMode === 'MouseMove') {\n            clearTimeout(this.clearTimeout);\n            this.clearTimeout = setTimeout(this.removeTooltip.bind(this), 2000);\n        }\n    };\n    MapsTooltip.prototype.removeTooltip = function () {\n        if (document.getElementsByClassName('EJ2-maps-Tooltip').length > 0) {\n            remove(document.getElementsByClassName('EJ2-maps-Tooltip')[0]);\n        }\n    };\n    /**\n     * To bind events for tooltip module\n     */\n    MapsTooltip.prototype.addEventListener = function () {\n        if (this.maps.isDestroyed) {\n            return;\n        }\n        if (this.maps.tooltipDisplayMode === 'DoubleClick') {\n            this.maps.on('dblclick', this.renderTooltip, this);\n        }\n        else if (this.maps.tooltipDisplayMode === 'Click') {\n            this.maps.on(Browser.touchEndEvent, this.mouseUpHandler, this);\n        }\n        else {\n            this.maps.on(Browser.touchMoveEvent, this.renderTooltip, this);\n        }\n        this.maps.on(Browser.touchCancelEvent, this.removeTooltip, this);\n    };\n    MapsTooltip.prototype.removeEventListener = function () {\n        if (this.maps.isDestroyed) {\n            return;\n        }\n        if (this.maps.tooltipDisplayMode === 'DoubleClick') {\n            this.maps.off('dblclick', this.removeTooltip);\n        }\n        else if (this.maps.tooltipDisplayMode === 'Click') {\n            this.maps.off(Browser.touchEndEvent, this.mouseUpHandler);\n        }\n        else {\n            this.maps.off(Browser.touchMoveEvent, this.renderTooltip);\n        }\n        this.maps.off(Browser.touchCancelEvent, this.removeTooltip);\n    };\n    /**\n     * Get module name.\n     */\n    MapsTooltip.prototype.getModuleName = function () {\n        return 'MapsTooltip';\n    };\n    /**\n     * To destroy the tooltip.\n     * @return {void}\n     * @private\n     */\n    MapsTooltip.prototype.destroy = function (maps) {\n        this.removeEventListener();\n    };\n    return MapsTooltip;\n}());\nexport { MapsTooltip };\n"]},"metadata":{},"sourceType":"module"}