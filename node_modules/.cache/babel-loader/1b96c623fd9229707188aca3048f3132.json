{"ast":null,"code":"var _jsxFileName = \"/Users/kristalduran/Desktop/PC3 Mapa/pc3-mapa/src/tooltip.js\";\nimport { render } from 'react-dom';\nimport './index.css';\n/**\n * Projection sample\n */\n\nimport * as React from \"react\";\nimport { MapAjax } from '@syncfusion/ej2-maps';\nimport { MapsComponent, Inject, LayersDirective, LayerDirective, MapsTooltip, Legend } from '@syncfusion/ej2-react-maps';\nimport { SampleBase } from './sample-base';\nimport * as data from './tooltip-datasource.json';\nlet datasource = data;\nconst SAMPLE_CSS = `\n    .control-fluid {\n\t\tpadding: 0px !important;\n    }`;\nexport class TooltipMaps extends SampleBase {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"control-pane\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"style\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }\n    }, SAMPLE_CSS), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"control-section row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"col-md-12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(MapsComponent, {\n      id: \"maps\",\n      tooltipRender: this.tooltipRender.bind(this),\n      loaded: this.onMapsLoad.bind(this),\n      load: this.load,\n      ref: m => this.mapInstance = m,\n      zoomSettings: {\n        enable: false\n      },\n      legendSettings: {\n        visible: true,\n        mode: 'Interactive',\n        position: 'Left',\n        orientation: 'Vertical',\n        height: '70%',\n        width: '10',\n        textStyle: {\n          color: '#757575'\n        }\n      },\n      titleSettings: {\n        text: 'Finalist in Cricket World Cup',\n        textStyle: {\n          size: '16px'\n        }\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(Inject, {\n      services: [MapsTooltip, Legend],\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 33\n      }\n    }), /*#__PURE__*/React.createElement(LayersDirective, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(LayerDirective, {\n      shapeData: new MapAjax('https://ej2.syncfusion.com/react/demos/src/maps/map-data/world-map.json'),\n      shapePropertyPath: \"name\",\n      shapeDataPath: \"name\",\n      dataSource: datasource,\n      tooltipSettings: {\n        visible: true,\n        valuePath: 'name',\n        template: '<div id=\"tooltemplate\" style=\"width: 90px;background: rgba(53, 63, 76, 0.90); opacity: 90%;background: rgba(53, 63, 76, 0.90);box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.40);padding-bottom: 10px;padding-top: 10px;padding-left: 10px;padding-right: 10px;border: 1px #abb9c6\">' + '<div style=\"font-size:13px;color:#ffffff;font-weight: 500;\"><center>${country}</center></div>' + '<hr style=\"margin-top: 2px;margin-bottom:5px;border:0.5px solid #DDDDDD\">' + '<div><span style=\"font-size:13px;color:#cccccc\">Finalist : </span><span style=\"font-size:13px;color:#ffffff;font-weight: 500;\">${value1}</span></div>' + '<div><span style=\"font-size:13px;color:#cccccc\">Win : </span><span style=\"font-size:13px;color:#ffffff;font-weight: 500;\">${value2}</span></div></div>'\n      },\n      shapeSettings: {\n        fill: 'lightgrey',\n        colorMapping: [{\n          value: '1',\n          color: '#b3daff'\n        }, {\n          color: '#80c1ff',\n          value: '2'\n        }, {\n          color: '#1a90ff',\n          value: '3'\n        }, {\n          color: '#005cb3',\n          value: '7'\n        }],\n        colorValuePath: 'value1'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 37\n      }\n    }))))));\n  }\n\n  onMapsLoad(args) {\n    let maps = document.getElementById('maps');\n    maps.setAttribute('title', '');\n  }\n\n  tooltipRender(args) {\n    if (!args.options['data']) {\n      args.cancel = true;\n    }\n  }\n\n}\nrender( /*#__PURE__*/React.createElement(TooltipMaps, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 8\n  }\n}), document.getElementById('sample'));","map":{"version":3,"sources":["/Users/kristalduran/Desktop/PC3 Mapa/pc3-mapa/src/tooltip.js"],"names":["render","React","MapAjax","MapsComponent","Inject","LayersDirective","LayerDirective","MapsTooltip","Legend","SampleBase","data","datasource","SAMPLE_CSS","TooltipMaps","tooltipRender","bind","onMapsLoad","load","m","mapInstance","enable","visible","mode","position","orientation","height","width","textStyle","color","text","size","valuePath","template","fill","colorMapping","value","colorValuePath","args","maps","document","getElementById","setAttribute","options","cancel"],"mappings":"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","sourcesContent":["import { render } from 'react-dom';\nimport './index.css';\n/**\n * Projection sample\n */\nimport * as React from \"react\";\nimport { MapAjax } from '@syncfusion/ej2-maps';\nimport { MapsComponent, Inject, LayersDirective, LayerDirective, MapsTooltip, Legend } from '@syncfusion/ej2-react-maps';\nimport { SampleBase } from './sample-base';\nimport * as data from './tooltip-datasource.json';\nlet datasource = data;\nconst SAMPLE_CSS = `\n    .control-fluid {\n\t\tpadding: 0px !important;\n    }`;\nexport class TooltipMaps extends SampleBase {\n    render() {\n        return (<div className='control-pane'>\n                    <style>\n                        {SAMPLE_CSS}\n                    </style>\n                    <div className='control-section row'>\n                        <div className='col-md-12'>\n                            <MapsComponent id=\"maps\" tooltipRender={this.tooltipRender.bind(this)} loaded={this.onMapsLoad.bind(this)} load={this.load} ref={m => this.mapInstance = m} zoomSettings={{\n                                enable: false\n                            }} legendSettings={{\n                                visible: true,\n                                mode: 'Interactive',\n                                position: 'Left',\n                                orientation: 'Vertical',\n                                height: '70%',\n                                width: '10',\n                                textStyle: {\n                                    color: '#757575'\n                                }\n                            }} titleSettings={{\n                                text: 'Finalist in Cricket World Cup',\n                                textStyle: {\n                                    size: '16px'\n                                }\n                            }}>\n                                <Inject services={[MapsTooltip, Legend]}/>\n                                <LayersDirective>\n                                    <LayerDirective shapeData={new MapAjax('https://ej2.syncfusion.com/react/demos/src/maps/map-data/world-map.json')} shapePropertyPath='name' shapeDataPath='name' dataSource={datasource} tooltipSettings={{\n                                        visible: true,\n                                        valuePath: 'name',\n                                        template: '<div id=\"tooltemplate\" style=\"width: 90px;background: rgba(53, 63, 76, 0.90); opacity: 90%;background: rgba(53, 63, 76, 0.90);box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.40);padding-bottom: 10px;padding-top: 10px;padding-left: 10px;padding-right: 10px;border: 1px #abb9c6\">' +\n                                            '<div style=\"font-size:13px;color:#ffffff;font-weight: 500;\"><center>${country}</center></div>' +\n                                            '<hr style=\"margin-top: 2px;margin-bottom:5px;border:0.5px solid #DDDDDD\">' +\n                                            '<div><span style=\"font-size:13px;color:#cccccc\">Finalist : </span><span style=\"font-size:13px;color:#ffffff;font-weight: 500;\">${value1}</span></div>' +\n                                            '<div><span style=\"font-size:13px;color:#cccccc\">Win : </span><span style=\"font-size:13px;color:#ffffff;font-weight: 500;\">${value2}</span></div></div>',\n                                    }} shapeSettings={{\n                                        fill: 'lightgrey',\n                                        colorMapping: [\n                                            {\n                                                value: '1',\n                                                color: '#b3daff'\n                                            },\n                                            {\n                                                color: '#80c1ff',\n                                                value: '2'\n                                            },\n                                            {\n                                                color: '#1a90ff',\n                                                value: '3'\n                                            },\n                                            {\n                                                color: '#005cb3',\n                                                value: '7'\n                                            }\n                                        ],\n                                        colorValuePath: 'value1'\n                                    }}>\n                                    </LayerDirective>\n                                </LayersDirective>\n                            </MapsComponent>\n                        </div>\n                    </div>\n            </div>);\n    }\n    onMapsLoad(args) {\n        let maps = document.getElementById('maps');\n        maps.setAttribute('title', '');\n    }\n    ;\n    tooltipRender(args) {\n        if (!args.options['data']) {\n            args.cancel = true;\n        }\n    }\n}\n\nrender(<TooltipMaps />, document.getElementById('sample'));"]},"metadata":{},"sourceType":"module"}