{"ast":null,"code":"import * as React from 'react';\nimport * as ol from 'openlayers';\nimport { Util } from \"../util\";\nimport { Map } from '../map';\nexport class MouseWheelZoom extends React.Component {\n  constructor(props) {\n    super(props);\n    this.interaction = void 0;\n    this.options = {\n      duration: undefined,\n      timeout: undefined,\n      useAnchor: undefined\n    };\n    this.events = {\n      'change': undefined,\n      'change:active': undefined,\n      'propertychange': undefined\n    };\n  }\n\n  render() {\n    return null;\n  }\n\n  componentDidMount() {\n    let options = Util.getOptions(Object['assign'](this.options, this.props));\n    console.log('options', options);\n    this.interaction = new ol.interaction.MouseWheelZoom(options);\n    this.context.mapComp.interactions.push(this.interaction);\n    let olEvents = Util.getEvents(this.events, this.props);\n\n    for (let eventName in olEvents) {\n      this.interaction.on(eventName, olEvents[eventName]);\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps !== this.props) {\n      this.context.mapComp.map.removeInteraction(this.interaction);\n      let options = Util.getOptions(Object['assign'](this.options, nextProps));\n      this.interaction = new ol.interaction.MouseWheelZoom(options);\n      this.context.mapComp.map.addInteraction(this.interaction);\n      let olEvents = Util.getEvents(this.events, this.props);\n\n      for (let eventName in olEvents) {\n        this.interaction.on(eventName, olEvents[eventName]);\n      }\n    }\n  }\n\n  componentWillUnmount() {\n    this.context.mapComp.map.removeInteraction(this.interaction);\n  }\n\n}\nMouseWheelZoom['contextTypes'] = {\n  mapComp: React.PropTypes.instanceOf(Map),\n  map: React.PropTypes.instanceOf(ol.Map)\n};","map":{"version":3,"sources":["/Users/kristalduran/Desktop/PC3 Mapa/pc3-mapa/src/map/interactions/mouse-wheel-zoom.tsx"],"names":["React","ol","Util","Map","MouseWheelZoom","Component","constructor","props","interaction","options","duration","undefined","timeout","useAnchor","events","render","componentDidMount","getOptions","Object","console","log","context","mapComp","interactions","push","olEvents","getEvents","eventName","on","componentWillReceiveProps","nextProps","map","removeInteraction","addInteraction","componentWillUnmount","PropTypes","instanceOf"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAKC,EAAZ,MAAoB,YAApB;AACA,SAAQC,IAAR,QAAmB,SAAnB;AACA,SAAQC,GAAR,QAAkB,QAAlB;AAEA,OAAO,MAAMC,cAAN,SAA6BJ,KAAK,CAACK,SAAnC,CAAuD;AAgB5DC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAAE,UAAMA,KAAN;AAAF,SAdnBC,WAcmB;AAAA,SAZnBC,OAYmB,GAZJ;AACbC,MAAAA,QAAQ,EAAEC,SADG;AAEbC,MAAAA,OAAO,EAAED,SAFI;AAGbE,MAAAA,SAAS,EAAEF;AAHE,KAYI;AAAA,SANnBG,MAMmB,GANL;AACZ,gBAAUH,SADE;AAEZ,uBAAiBA,SAFL;AAGZ,wBAAkBA;AAHN,KAMK;AAAiB;;AAEpCI,EAAAA,MAAM,GAAG;AAAE,WAAO,IAAP;AAAc;;AAEzBC,EAAAA,iBAAiB,GAAI;AACnB,QAAIP,OAAO,GAAGP,IAAI,CAACe,UAAL,CAAgBC,MAAM,CAAC,QAAD,CAAN,CAAiB,KAAKT,OAAtB,EAA+B,KAAKF,KAApC,CAAhB,CAAd;AACAY,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBX,OAAvB;AACA,SAAKD,WAAL,GAAmB,IAAIP,EAAE,CAACO,WAAH,CAAeJ,cAAnB,CAAkCK,OAAlC,CAAnB;AACA,SAAKY,OAAL,CAAaC,OAAb,CAAqBC,YAArB,CAAkCC,IAAlC,CAAuC,KAAKhB,WAA5C;AAEA,QAAIiB,QAAQ,GAAGvB,IAAI,CAACwB,SAAL,CAAe,KAAKZ,MAApB,EAA4B,KAAKP,KAAjC,CAAf;;AACA,SAAI,IAAIoB,SAAR,IAAqBF,QAArB,EAA+B;AAC7B,WAAKjB,WAAL,CAAiBoB,EAAjB,CAAoBD,SAApB,EAA+BF,QAAQ,CAACE,SAAD,CAAvC;AACD;AACF;;AAEDE,EAAAA,yBAAyB,CAAEC,SAAF,EAAa;AACpC,QAAGA,SAAS,KAAK,KAAKvB,KAAtB,EAA4B;AAC1B,WAAKc,OAAL,CAAaC,OAAb,CAAqBS,GAArB,CAAyBC,iBAAzB,CAA2C,KAAKxB,WAAhD;AACA,UAAIC,OAAO,GAAGP,IAAI,CAACe,UAAL,CAAgBC,MAAM,CAAC,QAAD,CAAN,CAAiB,KAAKT,OAAtB,EAA+BqB,SAA/B,CAAhB,CAAd;AACA,WAAKtB,WAAL,GAAmB,IAAIP,EAAE,CAACO,WAAH,CAAeJ,cAAnB,CAAkCK,OAAlC,CAAnB;AACA,WAAKY,OAAL,CAAaC,OAAb,CAAqBS,GAArB,CAAyBE,cAAzB,CAAwC,KAAKzB,WAA7C;AAEA,UAAIiB,QAAQ,GAAGvB,IAAI,CAACwB,SAAL,CAAe,KAAKZ,MAApB,EAA4B,KAAKP,KAAjC,CAAf;;AACA,WAAI,IAAIoB,SAAR,IAAqBF,QAArB,EAA+B;AAC7B,aAAKjB,WAAL,CAAiBoB,EAAjB,CAAoBD,SAApB,EAA+BF,QAAQ,CAACE,SAAD,CAAvC;AACD;AACF;AACF;;AAEDO,EAAAA,oBAAoB,GAAI;AACtB,SAAKb,OAAL,CAAaC,OAAb,CAAqBS,GAArB,CAAyBC,iBAAzB,CAA2C,KAAKxB,WAAhD;AACD;;AAhD2D;AAoD9DJ,cAAc,CAAC,cAAD,CAAd,GAAiC;AAC/BkB,EAAAA,OAAO,EAAEtB,KAAK,CAACmC,SAAN,CAAgBC,UAAhB,CAA2BjC,GAA3B,CADsB;AAE/B4B,EAAAA,GAAG,EAAE/B,KAAK,CAACmC,SAAN,CAAgBC,UAAhB,CAA2BnC,EAAE,CAACE,GAA9B;AAF0B,CAAjC","sourcesContent":["import * as React from 'react';\nimport * as ol from 'openlayers';\nimport {Util} from \"../util\";\nimport {Map} from '../map';\n\nexport class MouseWheelZoom extends React.Component<any, any> {\n\n  interaction: ol.interaction.MouseWheelZoom;\n\n  options: any = {\n    duration: undefined,\n    timeout: undefined,\n    useAnchor: undefined\n  };\n\n  events: any = {\n    'change': undefined,\n    'change:active': undefined,\n    'propertychange': undefined\n  };\n\n  constructor(props) { super(props); }\n\n  render() { return null; }\n\n  componentDidMount () {\n    let options = Util.getOptions(Object['assign'](this.options, this.props));\n    console.log('options', options);\n    this.interaction = new ol.interaction.MouseWheelZoom(options);\n    this.context.mapComp.interactions.push(this.interaction)\n    \n    let olEvents = Util.getEvents(this.events, this.props);\n    for(let eventName in olEvents) {\n      this.interaction.on(eventName, olEvents[eventName]);\n    }\n  }\n\n  componentWillReceiveProps (nextProps) {\n    if(nextProps !== this.props){\n      this.context.mapComp.map.removeInteraction(this.interaction);\n      let options = Util.getOptions(Object['assign'](this.options, nextProps));\n      this.interaction = new ol.interaction.MouseWheelZoom(options);\n      this.context.mapComp.map.addInteraction(this.interaction);\n\n      let olEvents = Util.getEvents(this.events, this.props);\n      for(let eventName in olEvents) {\n        this.interaction.on(eventName, olEvents[eventName]);\n      }\n    }\n  }\n  \n  componentWillUnmount () {\n    this.context.mapComp.map.removeInteraction(this.interaction);\n  }\n\n}\n\nMouseWheelZoom['contextTypes'] = {\n  mapComp: React.PropTypes.instanceOf(Map),\n  map: React.PropTypes.instanceOf(ol.Map)\n};"]},"metadata":{},"sourceType":"module"}