{"ast":null,"code":"var _jsxFileName = \"/Users/kristalduran/Desktop/PC3-/src/Storytelling/Data/data2.js\";\n\n/* App.js */\nimport React from 'react';\nimport CanvasJSReact from '../../canvasjs.react';\nimport info2015 from '../../Data/2015.json';\nimport info2016 from '../../Data/2016.json';\nimport info2017 from '../../Data/2017.json';\nimport info2018 from '../../Data/2018.json';\nimport info2019 from '../../Data/2019.json';\nvar CanvasJS = CanvasJSReact.CanvasJS;\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\nclass DataStory2 extends React.Component {\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      i2015: 0,\n      i2016: 0,\n      i2017: 0,\n      i2018: 0,\n      i2019: 0\n    };\n  }\n\n  componentDidMount() {\n    this.getData();\n  }\n\n  getData() {\n    console.log('si o no');\n    let data2015 = 0;\n    let data2016 = 0;\n    let data2017 = 0;\n    let data2018 = 0;\n    let data2019 = 0;\n    info2015.forEach(info => {\n      data2015 += info.Health;\n    });\n    info2016.forEach(info => {\n      data2016 += info.Health;\n    });\n    info2017.forEach(info => {\n      data2017 += info.Health;\n    });\n    info2018.forEach(info => {\n      data2018 += info.Healthy;\n    });\n    info2019.forEach(info => {\n      data2019 += info.Healthy;\n    });\n    console.log(data2018);\n    this.setState({\n      i2015: data2015 / info2015.length * 100,\n      i2016: data2016 / info2016.length * 100,\n      i2017: data2017 / info2017.length * 100,\n      i2018: data2018 / info2018.length * 100,\n      i2019: data2019 / info2019.length * 100\n    });\n  }\n\n  render() {\n    const options = {\n      animationEnabled: true,\n      exportEnabled: true,\n      theme: \"light2\",\n      //\"light1\", \"dark1\", \"dark2\"\n      title: {\n        text: \"Simple Column Chart with Index Labels\"\n      },\n      data: [{\n        type: \"column\",\n        //change type to bar, line, area, pie, etc\n        //indexLabel: \"{y}\", //Shows y value on all Data Points\n        indexLabelFontColor: \"#5A5757\",\n        indexLabelPlacement: \"outside\",\n        dataPoints: [{\n          x: 10,\n          y: this.state.i2015\n        }, {\n          x: 20,\n          y: this.state.i2016\n        }, {\n          x: 30,\n          y: this.state.i2017\n        }, {\n          x: 40,\n          y: this.state.i2018\n        }, {\n          x: 50,\n          y: this.state.i2019\n        }]\n      }]\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 3\n      }\n    }, /*#__PURE__*/React.createElement(CanvasJSChart, {\n      options: options\n      /* onRef={ref => this.chart = ref} */\n      ,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 4\n      }\n    }));\n  }\n\n}\n\nexport default DataStory2;","map":{"version":3,"sources":["/Users/kristalduran/Desktop/PC3-/src/Storytelling/Data/data2.js"],"names":["React","CanvasJSReact","info2015","info2016","info2017","info2018","info2019","CanvasJS","CanvasJSChart","DataStory2","Component","constructor","props","context","state","i2015","i2016","i2017","i2018","i2019","componentDidMount","getData","console","log","data2015","data2016","data2017","data2018","data2019","forEach","info","Health","Healthy","setState","length","render","options","animationEnabled","exportEnabled","theme","title","text","data","type","indexLabelFontColor","indexLabelPlacement","dataPoints","x","y"],"mappings":"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","sourcesContent":["/* App.js */\nimport React from 'react';\nimport CanvasJSReact from '../../canvasjs.react';\nimport info2015 from '../../Data/2015.json';\nimport info2016 from '../../Data/2016.json';\nimport info2017 from '../../Data/2017.json';\nimport info2018 from '../../Data/2018.json';\nimport info2019 from '../../Data/2019.json';\n\nvar CanvasJS = CanvasJSReact.CanvasJS;\nvar CanvasJSChart = CanvasJSReact.CanvasJSChart;\n\nclass DataStory2 extends React.Component {\n    constructor(props, context) {\n        super(props, context);    \n        this.state={\n            i2015: 0,\n            i2016: 0,\n            i2017: 0,\n            i2018: 0,\n            i2019: 0\n        }\n    }\n\n    componentDidMount(){\n        this.getData();\n    }\n\n    getData(){\n        console.log('si o no')\n        let data2015 = 0;\n        let data2016 = 0;\n        let data2017 = 0;\n        let data2018 = 0;\n        let data2019 = 0;\n        info2015.forEach(info => {\n            data2015 += info.Health;\n        });\n        info2016.forEach(info => {\n            data2016 += info.Health;\n        });\n        info2017.forEach(info => {\n            data2017 += info.Health;\n        });\n        info2018.forEach(info => {\n            data2018 += info.Healthy;\n        });\n        info2019.forEach(info => {\n            data2019 += info.Healthy;\n        });\n        console.log(data2018)\n        this.setState({i2015: (data2015/info2015.length)*100, i2016: (data2016/info2016.length)*100, i2017: (data2017/info2017.length)*100, i2018: (data2018/info2018.length)*100, i2019: (data2019/info2019.length)*100 })\n        \n    }\n\n\trender() {\n        \n\t\tconst options = {\n\t\t\tanimationEnabled: true,\n\t\t\texportEnabled: true,\n\t\t\ttheme: \"light2\", //\"light1\", \"dark1\", \"dark2\"\n\t\t\ttitle:{\n\t\t\t\ttext: \"Simple Column Chart with Index Labels\"\n\t\t\t},\n\t\t\tdata: [{\n\t\t\t\ttype: \"column\", //change type to bar, line, area, pie, etc\n\t\t\t\t//indexLabel: \"{y}\", //Shows y value on all Data Points\n\t\t\t\tindexLabelFontColor: \"#5A5757\",\n\t\t\t\tindexLabelPlacement: \"outside\",\n\t\t\t\tdataPoints: [\n\t\t\t\t\t{ x: 10, y: this.state.i2015 },\n\t\t\t\t\t{ x: 20, y: this.state.i2016 },\n\t\t\t\t\t{ x: 30, y: this.state.i2017 },\n\t\t\t\t\t{ x: 40, y: this.state.i2018 },\n\t\t\t\t\t{ x: 50, y: this.state.i2019 },\n\t\t\t\t]\n\t\t\t}]\n\t\t}\n\t\t\n\t\treturn (\n\t\t<div>\n\t\t\t<CanvasJSChart options = {options} \n\t\t\t\t/* onRef={ref => this.chart = ref} */\n\t\t\t/>\n\t\t\t{/*You can get reference to the chart instance as shown above using onRef. This allows you to access all chart properties and methods*/}\n\t\t</div>\n\t\t);\n\t}\n}\n \nexport default DataStory2;   "]},"metadata":{},"sourceType":"module"}