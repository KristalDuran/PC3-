{"version":3,"file":"ej2-treegrid.umd.min.js","sources":["../src/treegrid/utils.js","../src/treegrid/actions/crud-actions.js","../src/treegrid/models/column.js","../src/treegrid/models/filter-settings.js","../src/treegrid/models/textwrap-settings.js","../src/treegrid/base/constant.js","../src/treegrid/actions/clipboard.js","../src/treegrid/actions/selection.js","../src/treegrid/actions/print.js","../src/treegrid/models/search-settings.js","../src/treegrid/models/selection-settings.js","../src/treegrid/renderer/render.js","../src/treegrid/base/data.js","../src/treegrid/enum.js","../src/treegrid/models/page-settings.js","../src/treegrid/models/summary.js","../src/treegrid/models/edit-settings.js","../src/treegrid/models/sort-settings.js","../src/treegrid/base/treegrid.js","../src/treegrid/actions/reorder.js","../src/treegrid/actions/resize.js","../src/treegrid/actions/rowdragdrop.js","../src/treegrid/models/rowdrop-settings.js","../src/treegrid/renderer/virtual-row-model-generator.js","../src/treegrid/actions/filter.js","../src/treegrid/actions/excel-export.js","../src/treegrid/actions/pdf-export.js","../src/treegrid/actions/page.js","../src/treegrid/actions/toolbar.js","../src/treegrid/actions/summary.js","../src/treegrid/actions/sort.js","../src/treegrid/actions/column-menu.js","../src/treegrid/actions/context-menu.js","../src/treegrid/actions/batch-edit.js","../src/treegrid/actions/edit.js","../src/treegrid/actions/command-column.js","../src/treegrid/actions/detail-row.js","../src/treegrid/renderer/virtual-tree-content-render.js","../src/treegrid/actions/virtual-scroll.js","../src/treegrid/actions/freeze-column.js","../src/treegrid/actions/column-chooser.js"],"sourcesContent":["import { getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, ODataAdaptor, UrlAdaptor } from '@syncfusion/ej2-data';\nimport { WebApiAdaptor, WebMethodAdaptor, CacheAdaptor } from '@syncfusion/ej2-data';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nexport function isRemoteData(parent) {\n    if (parent.dataSource instanceof DataManager) {\n        var adaptor = parent.dataSource.adaptor;\n        return (adaptor instanceof ODataAdaptor ||\n            (adaptor instanceof WebApiAdaptor) || (adaptor instanceof WebMethodAdaptor) ||\n            (adaptor instanceof CacheAdaptor) || adaptor instanceof UrlAdaptor);\n    }\n    return false;\n}\nexport function isCountRequired(parent) {\n    if (parent.dataSource && 'result' in parent.dataSource) {\n        return true;\n    }\n    return false;\n}\nexport function isCheckboxcolumn(parent) {\n    for (var i = 0; i < parent.columns.length; i++) {\n        if (parent.columns[i].showCheckbox) {\n            return true;\n        }\n    }\n    return false;\n}\nexport function isFilterChildHierarchy(parent) {\n    if ((!isNullOrUndefined(parent.grid.searchSettings.key) && parent.grid.searchSettings.key !== '' &&\n        (parent.searchSettings.hierarchyMode === 'Child' || parent.searchSettings.hierarchyMode === 'None')) ||\n        (parent.allowFiltering && parent.grid.filterSettings.columns.length &&\n            (parent.filterSettings.hierarchyMode === 'Child' || parent.filterSettings.hierarchyMode === 'None'))) {\n        return true;\n    }\n    return false;\n}\n/**\n * @hidden\n */\nexport function findParentRecords(records) {\n    var datas;\n    datas = [];\n    var recordsLength = Object.keys(records).length;\n    for (var i = 0, len = recordsLength; i < len; i++) {\n        var hasChild = getObject('hasChildRecords', records[i]);\n        if (hasChild) {\n            datas.push(records[i]);\n        }\n    }\n    return datas;\n}\n/**\n * @hidden\n */\nexport function getExpandStatus(parent, record, parents) {\n    var parentRecord = isNullOrUndefined(record.parentItem) ? null :\n        getParentData(parent, record.parentItem.uniqueID);\n    var childParent;\n    if (parentRecord != null) {\n        if (parent.initialRender && !isNullOrUndefined(parentRecord[parent.expandStateMapping])\n            && !parentRecord[parent.expandStateMapping]) {\n            parentRecord.expanded = false;\n            return false;\n        }\n        else if (parentRecord.expanded === false) {\n            return false;\n        }\n        else if (parentRecord.parentItem) {\n            childParent = getParentData(parent, parentRecord.parentItem.uniqueID);\n            if (childParent && parent.initialRender && !isNullOrUndefined(childParent[parent.expandStateMapping])\n                && !childParent[parent.expandStateMapping]) {\n                childParent.expanded = false;\n                return false;\n            }\n            if (childParent && childParent.expanded === false) {\n                return false;\n            }\n            else if (childParent) {\n                return getExpandStatus(parent, childParent, parents);\n            }\n            return true;\n        }\n        else {\n            return true;\n        }\n    }\n    else {\n        return true;\n    }\n}\n/**\n * @hidden\n */\nexport function findChildrenRecords(records) {\n    var datas = [];\n    if (isNullOrUndefined(records) || (!records.hasChildRecords && !isNullOrUndefined(records.childRecords)\n        && !records.childRecords.length)) {\n        return [];\n    }\n    if (!isNullOrUndefined(records.childRecords)) {\n        var childRecords = records.childRecords;\n        for (var i = 0, len = Object.keys(childRecords).length; i < len; i++) {\n            datas.push(childRecords[i]);\n            if (childRecords[i].hasChildRecords || (!isNullOrUndefined(childRecords[i].childRecords) &&\n                childRecords[i].childRecords.length)) {\n                datas = datas.concat(findChildrenRecords(childRecords[i]));\n            }\n        }\n    }\n    return datas;\n}\nexport function isOffline(parent) {\n    if (isRemoteData(parent)) {\n        var dm = parent.dataSource;\n        return !isNullOrUndefined(dm.ready);\n    }\n    return true;\n}\nexport function extendArray(array) {\n    var objArr = [];\n    var obj;\n    var keys;\n    for (var i = 0; array && i < array.length; i++) {\n        keys = Object.keys(array[i]);\n        obj = {};\n        for (var j = 0; j < keys.length; j++) {\n            obj[keys[j]] = array[i][keys[j]];\n        }\n        objArr.push(obj);\n    }\n    return objArr;\n}\nexport function getPlainData(value) {\n    delete value.hasChildRecords;\n    delete value.childRecords;\n    delete value.index;\n    delete value.parentItem;\n    delete value.level;\n    return value;\n}\nexport function getParentData(parent, value, requireFilter) {\n    if (requireFilter) {\n        var idFilter = 'uniqueIDFilterCollection';\n        return parent[idFilter][value];\n    }\n    else {\n        var id = 'uniqueIDCollection';\n        return parent[id][value];\n    }\n}\n","import { isNullOrUndefined, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { extendArray, getPlainData, getParentData } from '../utils';\nexport function editAction(details, control, isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord) {\n    var value = details.value;\n    var action = details.action;\n    var changedRecords = 'changedRecords';\n    var i;\n    var j;\n    var addedRecords = 'addedRecords';\n    var batchChanges;\n    var key = control.grid.getPrimaryKeyFieldNames()[0];\n    var treeData = control.dataSource instanceof DataManager ?\n        control.dataSource.dataSource.json : control.dataSource;\n    var modifiedData = [];\n    var originalData = value;\n    var isSkip = false;\n    if (control.editSettings.mode === 'Batch') {\n        batchChanges = control.grid.editModule.getBatchChanges();\n    }\n    if (action === 'add' || (action === 'batchsave' && (control.editSettings.mode === 'Batch'\n        && batchChanges[addedRecords].length))) {\n        var addAct = addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord);\n        value = addAct.value;\n        isSkip = addAct.isSkip;\n    }\n    if (value instanceof Array) {\n        modifiedData = extendArray(value);\n    }\n    else {\n        modifiedData.push(extend({}, value));\n    }\n    if (!isSkip && (action !== 'add' ||\n        (control.editSettings.newRowPosition !== 'Top' && control.editSettings.newRowPosition !== 'Bottom'))) {\n        for (var k = 0; k < modifiedData.length; k++) {\n            if (typeof (modifiedData[k][key]) === 'object') {\n                modifiedData[k] = modifiedData[k][key];\n            }\n            var keys = Object.keys(modifiedData[k].taskData);\n            i = treeData.length;\n            var _loop_1 = function () {\n                if (treeData[i][key] === modifiedData[k][key]) {\n                    if (action === 'delete') {\n                        var currentData_1 = treeData[i];\n                        treeData.splice(i, 1);\n                        if (isSelfReference) {\n                            if (!isNullOrUndefined(currentData_1[control.parentIdMapping])) {\n                                var parentData = control.flatData.filter(function (e) {\n                                    return e[control.idMapping] === currentData_1[control.parentIdMapping];\n                                })[0];\n                                var childRecords = parentData ? parentData[control.childMapping] : [];\n                                for (var p = childRecords.length - 1; p >= 0; p--) {\n                                    if (childRecords[p][control.idMapping] === currentData_1[control.idMapping]) {\n                                        childRecords.splice(p, 1);\n                                        if (!childRecords.length) {\n                                            parentData.hasChildRecords = false;\n                                            updateParentRow(key, parentData, action, control, isSelfReference);\n                                        }\n                                        break;\n                                    }\n                                }\n                            }\n                            return \"break\";\n                        }\n                    }\n                    else {\n                        if (action === 'edit') {\n                            for (j = 0; j < keys.length; j++) {\n                                if (treeData[i].hasOwnProperty(keys[j]) && ((control.editSettings.mode !== 'Cell'\n                                    || (!isNullOrUndefined(batchChanges) && batchChanges[changedRecords].length === 0))\n                                    || keys[j] === columnName)) {\n                                    var editedData = getParentData(control, modifiedData[k].uniqueID);\n                                    editedData.taskData[keys[j]] = editedData[keys[j]] = treeData[i][keys[j]] = modifiedData[k][keys[j]];\n                                }\n                            }\n                        }\n                        else if (action === 'add' || action === 'batchsave') {\n                            var index = void 0;\n                            if (control.editSettings.newRowPosition === 'Child') {\n                                if (isSelfReference) {\n                                    originalData.taskData[control.parentIdMapping] = treeData[i][control.idMapping];\n                                    treeData.splice(i + 1, 0, originalData.taskData);\n                                }\n                                else {\n                                    if (!treeData[i].hasOwnProperty(control.childMapping)) {\n                                        treeData[i][control.childMapping] = [];\n                                    }\n                                    treeData[i][control.childMapping].push(originalData.taskData);\n                                    updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                                }\n                            }\n                            else if (control.editSettings.newRowPosition === 'Below') {\n                                treeData.splice(i + 1, 0, originalData.taskData);\n                                updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                            }\n                            else if (!addRowIndex) {\n                                index = 0;\n                                treeData.splice(index, 0, originalData.taskData);\n                            }\n                            else if (control.editSettings.newRowPosition === 'Above') {\n                                treeData.splice(i, 0, originalData.taskData);\n                                updateParentRow(key, treeData[i], action, control, isSelfReference, originalData);\n                            }\n                        }\n                        return \"break\";\n                    }\n                }\n                else if (!isNullOrUndefined(treeData[i][control.childMapping])) {\n                    if (removeChildRecords(treeData[i][control.childMapping], modifiedData[k], action, key, control, isSelfReference, originalData, columnName)) {\n                        updateParentRow(key, treeData[i], action, control, isSelfReference);\n                    }\n                }\n            };\n            while (i-- && i >= 0) {\n                var state_1 = _loop_1();\n                if (state_1 === \"break\")\n                    break;\n            }\n        }\n    }\n}\nexport function addAction(details, treeData, control, isSelfReference, addRowIndex, selectedIndex, addRowRecord) {\n    var value;\n    var isSkip = false;\n    var currentViewRecords = control.grid.getCurrentViewRecords();\n    value = extend({}, details.value);\n    value = getPlainData(value);\n    switch (control.editSettings.newRowPosition) {\n        case 'Top':\n            treeData.unshift(value);\n            isSkip = true;\n            break;\n        case 'Bottom':\n            treeData.push(value);\n            isSkip = true;\n            break;\n        case 'Above':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                value = extend({}, currentViewRecords[addRowIndex + 1]);\n                value = getPlainData(value);\n            }\n            break;\n        case 'Below':\n        case 'Child':\n            if (!isNullOrUndefined(addRowRecord)) {\n                value = extend({}, addRowRecord);\n                value = getPlainData(value);\n            }\n            else {\n                var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n                var currentdata = currentViewRecords[addRowIndex];\n                if (!isNullOrUndefined(currentdata) && currentdata[primaryKeys] === details.value[primaryKeys] || selectedIndex !== -1) {\n                    value = extend({}, currentdata);\n                }\n                else {\n                    value = extend({}, details.value);\n                }\n                value = getPlainData(value);\n            }\n            if (selectedIndex === -1) {\n                treeData.unshift(value);\n                isSkip = true;\n            }\n    }\n    return { value: value, isSkip: isSkip };\n}\nexport function removeChildRecords(childRecords, modifiedData, action, key, control, isSelfReference, originalData, columnName) {\n    var isChildAll = false;\n    var j = childRecords.length;\n    while (j-- && j >= 0) {\n        if (childRecords[j][key] === modifiedData[key] ||\n            (isSelfReference && childRecords[j][control.parentIdMapping] === modifiedData[control.idMapping])) {\n            if (action === 'edit') {\n                var keys = Object.keys(modifiedData);\n                var editedData = getParentData(control, modifiedData.uniqueID);\n                for (var i = 0; i < keys.length; i++) {\n                    if (childRecords[j].hasOwnProperty(keys[i]) && (control.editSettings.mode !== 'Cell' || keys[i] === columnName)) {\n                        editedData[keys[i]] = editedData.taskData[keys[i]] = childRecords[j][keys[i]] = modifiedData[keys[i]];\n                    }\n                }\n                break;\n            }\n            else if (action === 'add' || action === 'batchsave') {\n                if (control.editSettings.newRowPosition === 'Child') {\n                    if (isSelfReference) {\n                        originalData[control.parentIdMapping] = childRecords[j][control.idMapping];\n                        childRecords.splice(j + 1, 0, originalData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                    else {\n                        if (!childRecords[j].hasOwnProperty(control.childMapping)) {\n                            childRecords[j][control.childMapping] = [];\n                        }\n                        childRecords[j][control.childMapping].push(originalData.taskData);\n                        updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                    }\n                }\n                else if (control.editSettings.newRowPosition === 'Above') {\n                    childRecords.splice(j, 0, originalData.taskData);\n                    updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                }\n                else if (control.editSettings.newRowPosition === 'Below') {\n                    childRecords.splice(j + 1, 0, originalData.taskData);\n                    updateParentRow(key, childRecords[j], action, control, isSelfReference, originalData);\n                }\n            }\n            else {\n                var parentItem = childRecords[j].parentItem;\n                childRecords.splice(j, 1);\n                if (!childRecords.length) {\n                    isChildAll = true;\n                }\n            }\n        }\n        else if (!isNullOrUndefined(childRecords[j][control.childMapping])) {\n            if (removeChildRecords(childRecords[j][control.childMapping], modifiedData, action, key, control, isSelfReference, originalData, columnName)) {\n                updateParentRow(key, childRecords[j], action, control, isSelfReference);\n            }\n        }\n    }\n    return isChildAll;\n}\nexport function updateParentRow(key, record, action, control, isSelfReference, child) {\n    if ((control.editSettings.newRowPosition === 'Above' || control.editSettings.newRowPosition === 'Below')\n        && ((action === 'add' || action === 'batchsave')) && !isNullOrUndefined(child.parentItem)) {\n        var parentData = getParentData(control, child.parentItem.uniqueID);\n        parentData.childRecords.push(child);\n    }\n    else {\n        var currentRecords = control.grid.getCurrentViewRecords();\n        var index_1;\n        currentRecords.map(function (e, i) { if (e[key] === record[key]) {\n            index_1 = i;\n            return;\n        } });\n        record = currentRecords[index_1];\n        if (control.enableVirtualization && isNullOrUndefined(record) && !isNullOrUndefined(child)) {\n            record = getValue('uniqueIDCollection.' + child.parentUniqueID, control);\n        }\n        record.hasChildRecords = false;\n        if (action === 'add' || action === 'batchsave') {\n            record.expanded = true;\n            record.hasChildRecords = true;\n            if (control.sortSettings.columns.length && isNullOrUndefined(child)) {\n                child = currentRecords.filter(function (e) {\n                    if (e.parentUniqueID === record.uniqueID) {\n                        return e;\n                    }\n                    else {\n                        return null;\n                    }\n                });\n            }\n            var childRecords = child ? child instanceof Array ? child[0] : child : currentRecords[index_1 + 1];\n            if (control.editSettings.newRowPosition !== 'Below') {\n                if (!record.hasOwnProperty('childRecords')) {\n                    record.childRecords = [];\n                }\n                else {\n                    if (!isNullOrUndefined(child) && record[key] !== child[key]) {\n                        record.childRecords.push(child);\n                    }\n                }\n                if (record.childRecords.indexOf(childRecords) === -1 && record[key] !== child[key]) {\n                    record.childRecords.unshift(childRecords);\n                }\n                if (isSelfReference) {\n                    if (!record.hasOwnProperty(control.childMapping)) {\n                        record[control.childMapping] = [];\n                    }\n                    if (record[control.childMapping].indexOf(childRecords) === -1 && record[key] !== child[key]) {\n                        record[control.childMapping].unshift(childRecords);\n                    }\n                }\n            }\n        }\n        var primaryKeys = control.grid.getPrimaryKeyFieldNames()[0];\n        var data = control.grid.dataSource instanceof DataManager ?\n            control.grid.dataSource.dataSource.json : control.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            if (data[i][primaryKeys] === record[primaryKeys]) {\n                data[i] = record;\n                break;\n            }\n        }\n        control.grid.setRowData(key, record);\n        var row = control.getRowByIndex(index_1);\n        if (control.editSettings.mode === 'Batch') {\n            row = control.getRows()[control.grid.getRowIndexByPrimaryKey(record[key])];\n        }\n        var movableRow = void 0;\n        if (control.frozenRows || control.getFrozenColumns()) {\n            movableRow = control.getMovableRowByIndex(index_1);\n        }\n        if (!control.enableVirtualization && !isNullOrUndefined(row) || !isNullOrUndefined(movableRow)) {\n            control.renderModule.cellRender({\n                data: record, cell: row.cells[control.treeColumnIndex] ? row.cells[control.treeColumnIndex]\n                    : movableRow.cells[control.treeColumnIndex - control.frozenColumns],\n                column: control.grid.getColumns()[control.treeColumnIndex],\n                requestType: action\n            });\n        }\n    }\n}\n","import { merge } from '@syncfusion/ej2-base';\n/**\n * Represents TreeGrid `Column` model class.\n */\nvar Column = /** @class */ (function () {\n    function Column(options) {\n        /**\n         * If `allowEditing` set to false, then it disables editing of a particular column.\n         * By default all columns are editable.\n         * @default true\n         */\n        this.allowEditing = true;\n        /**\n         * Defines the `IEditCell` object to customize default edit cell.\n         * @default {}\n         */\n        this.edit = {};\n        /**\n         * If `disableHtmlEncode` is set to true, it encodes the HTML of the header and content cells.\n         * @default true\n         */\n        this.disableHtmlEncode = true;\n        /**\n         * If `allowReordering` set to false, then it disables reorder of a particular column.\n         * By default all columns can be reorder.\n         * @default true\n         */\n        this.allowReordering = true;\n        /**\n         * If `showColumnMenu` set to false, then it disable the column menu of a particular column.\n         * By default column menu will show for all columns\n         * @default true\n         */\n        this.showColumnMenu = true;\n        /**\n         * If `allowFiltering` set to false, then it disables filtering option and filter bar element of a particular column.\n         * By default all columns are filterable.\n         * @default true\n         */\n        this.allowFiltering = true;\n        /**\n         * If `allowSorting` set to false, then it disables sorting option of a particular column.\n         * By default all columns are sortable.\n         * @default true\n         */\n        this.allowSorting = true;\n        /**\n         * If `allowResizing` is set to false, it disables resize option of a particular column.\n         * By default all the columns can be resized.\n         * @default true\n         */\n        this.allowResizing = true;\n        /**\n         *  It is used to customize the default filter options for a specific columns.\n         * * type -  Specifies the filter type as menu.\n         * * ui - to render custom component for specific column it has following functions.\n         * * ui.create – It is used for creating custom components.\n         * * ui.read -  It is used for read the value from the component.\n         * * ui.write - It is used to apply component model as dynamically.\n         *\n         *  @default null\n         */\n        this.filter = {};\n        merge(this, options);\n    }\n    return Column;\n}());\nexport { Column };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Collection, Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Represents the predicate for the filter column.\n */\nvar Predicate = /** @class */ (function (_super) {\n    __extends(Predicate, _super);\n    function Predicate() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"value\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"matchCase\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"predicate\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualFilterValue\", void 0);\n    __decorate([\n        Property({})\n    ], Predicate.prototype, \"actualOperator\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"ejpredicate\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"uid\", void 0);\n    __decorate([\n        Property()\n    ], Predicate.prototype, \"isForeignKey\", void 0);\n    return Predicate;\n}(ChildProperty));\nexport { Predicate };\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar FilterSettings = /** @class */ (function (_super) {\n    __extends(FilterSettings, _super);\n    function FilterSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], Predicate)\n    ], FilterSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property('FilterBar')\n    ], FilterSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property(true)\n    ], FilterSettings.prototype, \"showFilterBarStatus\", void 0);\n    __decorate([\n        Property(1500)\n    ], FilterSettings.prototype, \"immediateModeDelay\", void 0);\n    __decorate([\n        Property()\n    ], FilterSettings.prototype, \"operators\", void 0);\n    __decorate([\n        Property(false)\n    ], FilterSettings.prototype, \"ignoreAccent\", void 0);\n    __decorate([\n        Property('Parent')\n    ], FilterSettings.prototype, \"hierarchyMode\", void 0);\n    return FilterSettings;\n}(ChildProperty));\nexport { FilterSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the textwrap behavior of the TreeGrid.\n */\nvar TextWrapSettings = /** @class */ (function (_super) {\n    __extends(TextWrapSettings, _super);\n    function TextWrapSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Both')\n    ], TextWrapSettings.prototype, \"wrapMode\", void 0);\n    return TextWrapSettings;\n}(ChildProperty));\nexport { TextWrapSettings };\n","/**\n *  @hidden\n */\nexport var load = 'load';\n/** @hidden */\nexport var rowDataBound = 'rowDataBound';\n/** @hidden */\nexport var dataBound = 'dataBound';\n/** @hidden */\nexport var queryCellInfo = 'queryCellInfo';\n/** @hidden */\nexport var beforeDataBound = 'beforeDataBound';\n/** @hidden */\nexport var actionBegin = 'actionBegin';\n/** @hidden */\nexport var dataStateChange = 'dataStateChange';\n/** @hidden */\nexport var actionComplete = 'actionComplete';\n/** @hidden */\nexport var rowSelecting = 'rowSelecting';\n/** @hidden */\nexport var rowSelected = 'rowSelected';\n/** @hidden */\nexport var checkboxChange = 'checkboxChange';\n/** @hidden */\nexport var rowDeselected = 'rowDeselected';\n/** @hidden */\nexport var toolbarClick = 'toolbarClick';\n/** @hidden */\nexport var beforeExcelExport = 'beforeExcelExport';\n/** @hidden */\nexport var beforePdfExport = 'beforePdfExport';\n/** @hidden */\nexport var resizeStop = 'resizeStop';\n/** @hidden */\nexport var expanded = 'expanded';\n/** @hidden */\nexport var expanding = 'expanding';\n/** @hidden */\nexport var collapsed = 'collapsed';\n/** @hidden */\nexport var collapsing = 'collapsing';\n/** @hidden */\nexport var remoteExpand = 'remoteExpand';\n/** @hidden */\nexport var localPagedExpandCollapse = 'localPagedExpandCollapse';\n/** @hidden */\nexport var pagingActions = 'pagingActions';\n/** @hidden */\nexport var printGridInit = 'printGrid-Init';\n/** @hidden */\nexport var contextMenuOpen = 'contextMenuOpen';\n/** @hidden */\nexport var contextMenuClick = 'contextMenuClick';\n/** @hidden */\nexport var beforeCopy = 'beforeCopy';\n/** @hidden */\nexport var beforePaste = 'beforePaste';\n/** @hidden */\nexport var savePreviousRowPosition = 'savePreviousRowPosition';\n/** @hidden */\nexport var crudAction = 'crudAction';\n/** @hidden */\nexport var beginEdit = 'beginEdit';\n/** @hidden */\nexport var beginAdd = 'beginAdd';\n/** @hidden */\nexport var recordDoubleClick = 'recordDoubleClick';\n/** @hidden */\nexport var cellSave = 'cellSave';\n/** @hidden */\nexport var cellSaved = 'cellSaved';\n/** @hidden */\nexport var cellEdit = 'cellEdit';\n/** @hidden */\nexport var batchDelete = 'batchDelete';\n/** @hidden */\nexport var batchCancel = 'batchCancel';\n/** @hidden */\nexport var batchAdd = 'batchAdd';\n/** @hidden */\nexport var beforeBatchDelete = 'beforeBatchDelete';\n/** @hidden */\nexport var beforeBatchAdd = 'beforeBatchAdd';\n/** @hidden */\nexport var beforeBatchSave = 'beforeBatchSave';\n/** @hidden */\nexport var batchSave = 'batchSave';\n/** @hidden */\nexport var keyPressed = 'key-pressed';\n/** @hidden */\nexport var updateData = 'update-data';\n/** @hidden */\nexport var doubleTap = 'double-tap';\n/** @hidden */\nexport var virtualColumnIndex = 'virtualColumnIndex';\n/** @hidden */\nexport var virtualActionArgs = 'virtual-action-args';\n/** @hidden */\nexport var dataListener = 'data-listener';\n/** @hidden */\nexport var indexModifier = 'index-modifier';\n/** @hidden */\nexport var beforeStartEdit = 'edit-form';\n/** @hidden */\nexport var beforeBatchCancel = 'before-batch-cancel';\n/** @hidden */\nexport var batchEditFormRendered = 'batcheditform-rendered';\n/** @hidden */\nexport var detailDataBound = 'detailDataBound';\n/** @hidden */\nexport var rowDrag = 'rowDrag';\n/** @hidden */\nexport var rowDragStartHelper = 'rowDragStartHelper';\n/** @hidden */\nexport var rowDrop = 'rowDrop';\n/** @hidden */\nexport var rowDragStart = 'rowDragStart';\n/** @hidden */\nexport var rowsAdd = 'rows-add';\n/** @hidden */\nexport var rowsRemove = 'rows-remove';\n/** @hidden */\nexport var rowdraging = 'row-draging';\n/** @hidden */\nexport var rowDropped = 'row-dropped';\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, Browser } from '@syncfusion/ej2-base';\nimport { Clipboard as GridClipboard } from '@syncfusion/ej2-grids';\n/**\n * The `Clipboard` module is used to handle clipboard copy action.\n */\nvar TreeClipboard = /** @class */ (function (_super) {\n    __extends(TreeClipboard, _super);\n    function TreeClipboard(parent) {\n        var _this = _super.call(this, parent.grid) || this;\n        _this.treeCopyContent = '';\n        _this.copiedUniqueIdCollection = [];\n        _this.treeGridParent = parent;\n        return _this;\n    }\n    TreeClipboard.prototype.setCopyData = function (withHeader) {\n        var copyContent = 'copyContent';\n        var getCopyData = 'getCopyData';\n        var isSelect = 'isSelect';\n        var uniqueID = 'uniqueID';\n        var currentRecords = this.treeGridParent.getCurrentViewRecords();\n        if (window.getSelection().toString() === '') {\n            this.clipBoardTextArea.value = this[copyContent] = '';\n            var rows = this.treeGridParent.grid.getRows();\n            if (this.treeGridParent.selectionSettings.mode !== 'Cell') {\n                var selectedIndexes = this.treeGridParent.getSelectedRowIndexes().sort(function (a, b) {\n                    return a - b;\n                });\n                for (var i = 0; i < selectedIndexes.length; i++) {\n                    if (i > 0) {\n                        this.treeCopyContent += '\\n';\n                    }\n                    if (!rows[selectedIndexes[i]].classList.contains('e-summaryrow')) {\n                        var cells = [].slice.call(rows[selectedIndexes[i]].querySelectorAll('.e-rowcell'));\n                        var uniqueid = this.treeGridParent.getSelectedRecords()[i][uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            if (this.treeGridParent.copyHierarchyMode === 'Parent' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.parentContentData(currentRecords, selectedIndexes[i], rows, withHeader, i);\n                            }\n                            this[getCopyData](cells, false, '\\t', withHeader);\n                            this.treeCopyContent += this[copyContent];\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[copyContent] = '';\n                            if (this.treeGridParent.copyHierarchyMode === 'Child' || this.treeGridParent.copyHierarchyMode === 'Both') {\n                                this.childContentData(currentRecords, selectedIndexes[i], rows, withHeader);\n                            }\n                        }\n                    }\n                }\n                if (withHeader) {\n                    var headerTextArray = [];\n                    for (var i = 0; i < this.treeGridParent.getVisibleColumns().length; i++) {\n                        headerTextArray[i] = this.treeGridParent.getVisibleColumns()[i].headerText;\n                    }\n                    this[getCopyData](headerTextArray, false, '\\t', withHeader);\n                    this.treeCopyContent = this[copyContent] + '\\n' + this.treeCopyContent;\n                }\n                var args = {\n                    data: this.treeCopyContent,\n                    cancel: false,\n                };\n                this.treeGridParent.trigger(events.beforeCopy, args);\n                if (args.cancel) {\n                    return;\n                }\n                this.clipBoardTextArea.value = this[copyContent] = args.data;\n                if (!Browser.userAgent.match(/ipad|ipod|iphone/i)) {\n                    this.clipBoardTextArea.select();\n                }\n                else {\n                    this.clipBoardTextArea.setSelectionRange(0, this.clipBoardTextArea.value.length);\n                }\n                this[isSelect] = true;\n                this.copiedUniqueIdCollection = [];\n                this.treeCopyContent = '';\n            }\n            else {\n                _super.prototype.setCopyData.call(this, withHeader);\n            }\n        }\n    };\n    TreeClipboard.prototype.parentContentData = function (currentRecords, selectedIndex, rows, withHeader, index) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var parentItem = 'parentItem';\n        var uniqueID = 'uniqueID';\n        var level = 'level';\n        if (!isNullOrUndefined(currentRecords[selectedIndex][parentItem])) {\n            var treeLevel = currentRecords[selectedIndex][parentItem][level];\n            for (var i = 0; i < treeLevel + 1; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(currentRecords[selectedIndex][parentItem]) &&\n                        currentRecords[j][uniqueID] === currentRecords[selectedIndex][parentItem][uniqueID]) {\n                        selectedIndex = j;\n                        var cells = [].slice.call(rows[selectedIndex].querySelectorAll('.e-rowcell'));\n                        var uniqueid = currentRecords[j][uniqueID];\n                        if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                            this[getCopyData](cells, false, '\\t', withHeader);\n                            if (index > 0) {\n                                this.treeCopyContent = this.treeCopyContent + this[copyContent] + '\\n';\n                            }\n                            else {\n                                this.treeCopyContent = this[copyContent] + '\\n' + this.treeCopyContent;\n                            }\n                            this.copiedUniqueIdCollection.push(uniqueid);\n                            this[copyContent] = '';\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    };\n    TreeClipboard.prototype.copy = function (withHeader) {\n        _super.prototype.copy.call(this, withHeader);\n    };\n    TreeClipboard.prototype.paste = function (data, rowIndex, colIndex) {\n        _super.prototype.paste.call(this, data, rowIndex, colIndex);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    TreeClipboard.prototype.getModuleName = function () {\n        return 'clipboard';\n    };\n    ;\n    /**\n     * To destroy the clipboard\n     * @return {void}\n     * @hidden\n     */\n    TreeClipboard.prototype.destroy = function () {\n        _super.prototype.destroy.call(this);\n    };\n    TreeClipboard.prototype.childContentData = function (currentRecords, selectedIndex, rows, withHeader) {\n        var getCopyData = 'getCopyData';\n        var copyContent = 'copyContent';\n        var childRecords = 'childRecords';\n        var hasChildRecords = 'hasChildRecords';\n        var uniqueID = 'uniqueID';\n        if (currentRecords[selectedIndex][hasChildRecords]) {\n            var childData = currentRecords[selectedIndex][childRecords];\n            for (var i = 0; i < childData.length; i++) {\n                for (var j = 0; j < currentRecords.length; j++) {\n                    if (!isNullOrUndefined(childData[i][uniqueID]) && currentRecords[j][uniqueID] === childData[i][uniqueID]) {\n                        if ((!isNullOrUndefined(rows[j])) && !rows[j].classList.contains('e-summaryrow')) {\n                            var cells = [].slice.call(rows[j].querySelectorAll('.e-rowcell'));\n                            var uniqueid = currentRecords[j][uniqueID];\n                            if (this.copiedUniqueIdCollection.indexOf(uniqueid) === -1) {\n                                this[getCopyData](cells, false, '\\t', withHeader);\n                                this.treeCopyContent += ('\\n' + this[copyContent]);\n                                this[copyContent] = '';\n                                this.copiedUniqueIdCollection.push(uniqueid);\n                                this.childContentData(currentRecords, j, rows, withHeader);\n                            }\n                        }\n                        break;\n                    }\n                }\n            }\n        }\n    };\n    return TreeClipboard;\n}(GridClipboard));\nexport { TreeClipboard };\n","import { isNullOrUndefined, removeClass, isBlazor } from '@syncfusion/ej2-base';\nimport { createCheckBox } from '@syncfusion/ej2-buttons';\nimport { parentsUntil, getObject } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { getParentData, isRemoteData, isCheckboxcolumn } from '../utils';\n/**\n * TreeGrid Selection module\n * @hidden\n */\nvar Selection = /** @class */ (function () {\n    /**\n     * Constructor for Selection module\n     */\n    function Selection(parent) {\n        this.parent = parent;\n        this.selectedItems = [];\n        this.selectedIndexes = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Selection.prototype.getModuleName = function () {\n        return 'selection';\n    };\n    Selection.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.headerCheckbox, this);\n        this.parent.on('columnCheckbox', this.columnCheckbox, this);\n        this.parent.on('updateGridActions', this.updateGridActions, this);\n        this.parent.grid.on('colgroup-refresh', this.headerCheckbox, this);\n        this.parent.on('checkboxSelection', this.checkboxSelection, this);\n    };\n    Selection.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.headerCheckbox);\n        this.parent.off('columnCheckbox', this.columnCheckbox);\n        this.parent.grid.off('colgroup-refresh', this.headerCheckbox);\n        this.parent.off('checkboxSelection', this.checkboxSelection);\n        this.parent.off('updateGridActions', this.updateGridActions);\n    };\n    /**\n     * To destroy the Selection\n     * @return {void}\n     * @hidden\n     */\n    Selection.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Selection.prototype.checkboxSelection = function (args) {\n        var target = getObject('target', args);\n        var checkWrap = parentsUntil(target, 'e-checkbox-wrapper');\n        var checkBox;\n        if (checkWrap && checkWrap.querySelectorAll('.e-treecheckselect').length > 0) {\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            var rowIndex = void 0;\n            rowIndex = [];\n            rowIndex.push(target.closest('tr').rowIndex);\n            this.selectCheckboxes(rowIndex);\n            this.triggerChkChangeEvent(checkBox, checkBox.nextElementSibling.classList.contains('e-check'), target.closest('tr'));\n        }\n        else if (checkWrap && checkWrap.querySelectorAll('.e-treeselectall').length > 0 && this.parent.autoCheckHierarchy) {\n            var checkBoxvalue = !checkWrap.querySelector('.e-frame').classList.contains('e-check')\n                && !checkWrap.querySelector('.e-frame').classList.contains('e-stop');\n            this.headerSelection(checkBoxvalue);\n            checkBox = checkWrap.querySelector('input[type=\"checkbox\"]');\n            this.triggerChkChangeEvent(checkBox, checkBoxvalue, target.closest('tr'));\n        }\n    };\n    Selection.prototype.triggerChkChangeEvent = function (checkBox, checkState, rowElement) {\n        var data = this.parent.getCurrentViewRecords()[rowElement.rowIndex];\n        var args = { checked: checkState, target: checkBox, rowElement: rowElement,\n            rowData: checkBox.classList.contains('e-treeselectall')\n                ? this.parent.getCheckedRecords() : data };\n        this.parent.trigger(events.checkboxChange, args);\n    };\n    Selection.prototype.getCheckboxcolumnIndex = function () {\n        var mappingUid;\n        var columnIndex;\n        var columns = (this.parent.columns);\n        for (var col = 0; col < columns.length; col++) {\n            if (columns[col].showCheckbox) {\n                mappingUid = this.parent.columns[col].uid;\n            }\n        }\n        var headerCelllength = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv').length;\n        for (var j = 0; j < headerCelllength; j++) {\n            var headercell = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[j];\n            if (headercell.getAttribute('e-mappinguid') === mappingUid) {\n                columnIndex = j;\n            }\n        }\n        return columnIndex;\n    };\n    Selection.prototype.headerCheckbox = function () {\n        this.columnIndex = this.getCheckboxcolumnIndex();\n        if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length === 0) {\n            var headerElement = this.parent.getHeaderContent().querySelectorAll('.e-headercelldiv')[this.columnIndex];\n            var checkWrap = void 0;\n            var value = false;\n            var rowChkBox = this.parent.createElement('input', { className: 'e-treeselectall', attrs: { 'type': 'checkbox' } });\n            checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n            checkWrap.classList.add('e-hierarchycheckbox');\n            checkWrap.querySelector('.e-frame').style.width = '18px';\n            checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n            if (!isNullOrUndefined(headerElement)) {\n                headerElement.insertBefore(checkWrap, headerElement.firstChild);\n            }\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n        else if (this.columnIndex > -1 && this.parent.getHeaderContent().querySelectorAll('.e-treeselectall').length > 0) {\n            var checkWrap = this.parent.getHeaderContent().querySelectorAll('.e-checkbox-wrapper')[0];\n            var checkBoxvalue = checkWrap.querySelector('.e-frame').classList.contains('e-check');\n            if (this.parent.autoCheckHierarchy && checkBoxvalue) {\n                this.headerSelection(checkBoxvalue);\n            }\n        }\n    };\n    Selection.prototype.renderColumnCheckbox = function (args) {\n        var checkWrap;\n        var rowChkBox = this.parent.createElement('input', { className: 'e-treecheckselect', attrs: { 'type': 'checkbox' } });\n        var data = args.data;\n        args.cell.classList.add('e-treegridcheckbox');\n        args.cell.setAttribute('aria-label', 'checkbox');\n        var value = (isNullOrUndefined(data.checkboxState) || data.checkboxState === 'uncheck') ? false : true;\n        checkWrap = createCheckBox(this.parent.createElement, false, { checked: value, label: ' ' });\n        checkWrap.classList.add('e-hierarchycheckbox');\n        checkWrap.querySelector('.e-frame').style.width = '18px';\n        if (data.checkboxState === 'indeterminate') {\n            var checkbox = checkWrap.querySelectorAll('.e-frame')[0];\n            removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            checkWrap.querySelector('.e-frame').classList.add('e-stop');\n        }\n        checkWrap.insertBefore(rowChkBox.cloneNode(), checkWrap.firstChild);\n        return checkWrap;\n    };\n    Selection.prototype.columnCheckbox = function (container) {\n        var checkWrap = this.renderColumnCheckbox(container);\n        var containerELe = container.cell.querySelector('.e-treecolumn-container');\n        if (!isNullOrUndefined(containerELe)) {\n            if (!container.cell.querySelector('.e-hierarchycheckbox')) {\n                containerELe.insertBefore(checkWrap, containerELe.querySelectorAll('.e-treecell')[0]);\n            }\n        }\n        else {\n            var spanEle = this.parent.createElement('span', { className: 'e-treecheckbox' });\n            var data = container.cell.innerHTML;\n            container.cell.innerHTML = '';\n            spanEle.innerHTML = data;\n            var divEle = this.parent.createElement('div', { className: 'e-treecheckbox-container' });\n            divEle.appendChild(checkWrap);\n            divEle.appendChild(spanEle);\n            container.cell.appendChild(divEle);\n        }\n    };\n    Selection.prototype.selectCheckboxes = function (rowIndexes) {\n        var adaptorName = 'adaptorName';\n        for (var i = 0; i < rowIndexes.length; i++) {\n            var record = this.parent.getCurrentViewRecords()[rowIndexes[i]];\n            var flatRecord = getParentData(this.parent, record.uniqueID);\n            record = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n                record : flatRecord;\n            var checkboxState = (record.checkboxState === 'uncheck') ? 'check' : 'uncheck';\n            record.checkboxState = checkboxState;\n            var keys = Object.keys(record);\n            for (var j = 0; j < keys.length; j++) {\n                if (flatRecord.hasOwnProperty(keys[j])) {\n                    flatRecord[keys[j]] = record[keys[j]];\n                }\n            }\n            this.traverSelection(record, checkboxState, false);\n            if (this.parent.autoCheckHierarchy) {\n                this.headerSelection();\n            }\n        }\n    };\n    Selection.prototype.traverSelection = function (record, checkboxState, ischildItem) {\n        var length = 0;\n        this.updateSelectedItems(record, checkboxState);\n        if (!ischildItem && record.parentItem && this.parent.autoCheckHierarchy) {\n            this.updateParentSelection(record.parentItem);\n        }\n        if (record.childRecords && this.parent.autoCheckHierarchy) {\n            var childRecords = record.childRecords;\n            if (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n                childRecords = this.getFilteredChildRecords(childRecords);\n            }\n            length = childRecords.length;\n            for (var count = 0; count < length; count++) {\n                if (!childRecords[count].isSummaryRow) {\n                    if (childRecords[count].hasChildRecords) {\n                        this.traverSelection(childRecords[count], checkboxState, true);\n                    }\n                    else {\n                        this.updateSelectedItems(childRecords[count], checkboxState);\n                    }\n                }\n            }\n        }\n    };\n    Selection.prototype.getFilteredChildRecords = function (childRecords) {\n        var _this = this;\n        var filteredChildRecords = childRecords.filter(function (e) {\n            return _this.parent.filterModule.filteredResult.indexOf(e) > -1;\n        });\n        return filteredChildRecords;\n    };\n    Selection.prototype.updateParentSelection = function (parentRecord) {\n        var adaptorName = 'adaptorName';\n        var length = 0;\n        var childRecords = [];\n        var record = getParentData(this.parent, parentRecord.uniqueID);\n        if (record && record.childRecords) {\n            childRecords = record.childRecords;\n        }\n        if (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0 && this.parent.autoCheckHierarchy) {\n            childRecords = this.getFilteredChildRecords(childRecords);\n        }\n        length = childRecords && childRecords.length;\n        var indeter = 0;\n        var checkChildRecords = 0;\n        if (!isNullOrUndefined(record)) {\n            var _loop_1 = function (i) {\n                var childRecord = this_1.parent.getCurrentViewRecords().filter(function (e) {\n                    return e.uniqueID === childRecords[i].uniqueID;\n                });\n                var currentRecord = getParentData(this_1.parent, childRecords[i].uniqueID);\n                var checkBoxRecord = (isBlazor() && this_1.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n                    childRecord[0] : currentRecord;\n                if (!isNullOrUndefined(checkBoxRecord)) {\n                    if (checkBoxRecord.checkboxState === 'indeterminate') {\n                        indeter++;\n                    }\n                    else if (checkBoxRecord.checkboxState === 'check') {\n                        checkChildRecords++;\n                    }\n                }\n            };\n            var this_1 = this;\n            for (var i = 0; i < childRecords.length; i++) {\n                _loop_1(i);\n            }\n            if (indeter > 0 || (checkChildRecords > 0 && checkChildRecords !== length)) {\n                record.checkboxState = 'indeterminate';\n            }\n            else if (checkChildRecords === 0 && indeter === 0) {\n                record.checkboxState = 'uncheck';\n            }\n            else {\n                record.checkboxState = 'check';\n            }\n            this.updateSelectedItems(record, record.checkboxState);\n            if (record.parentItem) {\n                this.updateParentSelection(record.parentItem);\n            }\n        }\n    };\n    Selection.prototype.headerSelection = function (checkAll) {\n        var _this = this;\n        var adaptorName = 'adaptorName';\n        var index = -1;\n        var length = 0;\n        var data = (!isNullOrUndefined(this.parent.filterModule) &&\n            this.parent.filterModule.filteredResult.length > 0) ? this.parent.filterModule.filteredResult :\n            this.parent.flatData;\n        data = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') || isRemoteData(this.parent) ?\n            this.parent.getCurrentViewRecords() : data;\n        if (!isNullOrUndefined(checkAll)) {\n            for (var i = 0; i < data.length; i++) {\n                if (checkAll) {\n                    if (data[i].checkboxState === 'check') {\n                        continue;\n                    }\n                    data[i].checkboxState = 'check';\n                    this.updateSelectedItems(data[i], data[i].checkboxState);\n                }\n                else {\n                    index = this.selectedItems.indexOf(data[i]);\n                    if (index > -1) {\n                        data[i].checkboxState = 'uncheck';\n                        this.updateSelectedItems(data[i], data[i].checkboxState);\n                        if (this.parent.autoCheckHierarchy) {\n                            this.updateParentSelection(data[i]);\n                        }\n                    }\n                }\n            }\n        }\n        if (checkAll === false && this.parent.enableVirtualization) {\n            this.selectedItems = [];\n            this.selectedIndexes = [];\n            data.filter(function (rec) {\n                rec.checkboxState = 'uncheck';\n                _this.updateSelectedItems(rec, rec.checkboxState);\n            });\n        }\n        length = this.selectedItems.length;\n        var checkbox = this.parent.getHeaderContent().querySelectorAll('.e-frame')[0];\n        if (length > 0 && data.length > 0) {\n            if (length !== data.length && !checkAll) {\n                removeClass([checkbox], ['e-check']);\n                checkbox.classList.add('e-stop');\n            }\n            else {\n                removeClass([checkbox], ['e-stop']);\n                checkbox.classList.add('e-check');\n            }\n        }\n        else {\n            removeClass([checkbox], ['e-check', 'e-stop']);\n        }\n    };\n    Selection.prototype.updateSelectedItems = function (currentRecord, checkState, filter) {\n        var record = this.parent.getCurrentViewRecords().filter(function (e) {\n            return e.uniqueID === currentRecord.uniqueID;\n        });\n        var checkedRecord;\n        var adaptorName = 'adaptorName';\n        var recordIndex = this.parent.getCurrentViewRecords().indexOf(record[0]);\n        var checkboxRecord = getParentData(this.parent, currentRecord.uniqueID);\n        var checkbox;\n        if (recordIndex > -1) {\n            var tr = this.parent.getRows()[recordIndex];\n            var movableTr = void 0;\n            if (this.parent.frozenRows || this.parent.getFrozenColumns()) {\n                movableTr = this.parent.getMovableDataRows()[recordIndex];\n            }\n            checkbox = tr.querySelectorAll('.e-frame')[0] ? tr.querySelectorAll('.e-frame')[0]\n                : movableTr.querySelectorAll('.e-frame')[0];\n            if (!isNullOrUndefined(checkbox)) {\n                removeClass([checkbox], ['e-check', 'e-stop', 'e-uncheck']);\n            }\n        }\n        checkedRecord = (isBlazor() && this.parent.dataSource[adaptorName] === 'BlazorAdaptor') ?\n            record[0] : checkboxRecord;\n        if (isNullOrUndefined(checkedRecord)) {\n            checkedRecord = currentRecord;\n        }\n        checkedRecord.checkboxState = checkState;\n        if (checkState === 'check' && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            if (recordIndex !== -1 && this.selectedIndexes.indexOf(recordIndex) === -1) {\n                this.selectedIndexes.push(recordIndex);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (recordIndex !== -1 &&\n                (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0))) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && (!isNullOrUndefined(this.parent.filterModule) &&\n                this.parent.filterModule.filteredResult.length === 0)) {\n                this.selectedItems.push(checkedRecord);\n            }\n            if (this.selectedItems.indexOf(checkedRecord) === -1 && isNullOrUndefined(this.parent.filterModule)) {\n                this.selectedItems.push(checkedRecord);\n            }\n        }\n        else if ((checkState === 'uncheck' || checkState === 'indeterminate') && isNullOrUndefined(currentRecord.isSummaryRow)) {\n            var index = this.selectedItems.indexOf(checkedRecord);\n            if (index !== -1) {\n                this.selectedItems.splice(index, 1);\n            }\n            if (this.selectedIndexes.indexOf(recordIndex) !== -1) {\n                var checkedIndex = this.selectedIndexes.indexOf(recordIndex);\n                this.selectedIndexes.splice(checkedIndex, 1);\n            }\n        }\n        var checkBoxclass = checkState === 'indeterminate' ? 'e-stop' : 'e-' + checkState;\n        if (recordIndex > -1) {\n            if (!isNullOrUndefined(checkbox)) {\n                checkbox.classList.add(checkBoxclass);\n            }\n        }\n    };\n    Selection.prototype.updateGridActions = function (args) {\n        var _this = this;\n        var requestType = args.requestType;\n        var childData;\n        var childLength;\n        if (isCheckboxcolumn(this.parent)) {\n            if (this.parent.autoCheckHierarchy) {\n                if ((requestType === 'sorting' || requestType === 'paging')) {\n                    var rows = this.parent.grid.getRows();\n                    childData = this.parent.getCurrentViewRecords();\n                    childLength = childData.length;\n                    this.selectedIndexes = [];\n                    for (var i = 0; i < childLength; i++) {\n                        if (!rows[i].classList.contains('e-summaryrow')) {\n                            this.updateSelectedItems(childData[i], childData[i].checkboxState, true);\n                        }\n                    }\n                }\n                else if (requestType === 'delete' || args.action === 'add') {\n                    var updatedData = [];\n                    if (requestType === 'delete') {\n                        updatedData = args.data;\n                    }\n                    else {\n                        updatedData.push(args.data);\n                    }\n                    for (var i = 0; i < updatedData.length; i++) {\n                        if (requestType === 'delete') {\n                            var index = this.parent.flatData.indexOf(updatedData[i]);\n                            var checkedIndex = this.selectedIndexes.indexOf(index);\n                            this.selectedIndexes.splice(checkedIndex, 1);\n                            this.updateSelectedItems(updatedData[i], 'uncheck');\n                        }\n                        if (!isNullOrUndefined(updatedData[i].parentItem)) {\n                            this.updateParentSelection(updatedData[i].parentItem);\n                        }\n                    }\n                }\n                else if (args.requestType === 'add' && this.parent.autoCheckHierarchy) {\n                    args.data.checkboxState = 'uncheck';\n                }\n                else if (requestType === 'filtering' || requestType === 'searching' || requestType === 'refresh'\n                    && !isRemoteData(this.parent)) {\n                    this.selectedItems = [];\n                    this.selectedIndexes = [];\n                    childData = (!isNullOrUndefined(this.parent.filterModule) && this.parent.filterModule.filteredResult.length > 0) ?\n                        this.parent.getCurrentViewRecords() : this.parent.flatData;\n                    childData.forEach(function (record) {\n                        if (record.hasChildRecords) {\n                            _this.updateParentSelection(record);\n                        }\n                        else {\n                            _this.updateSelectedItems(record, record.checkboxState);\n                        }\n                    });\n                    this.headerSelection();\n                }\n            }\n        }\n    };\n    Selection.prototype.getCheckedrecords = function () {\n        return this.selectedItems;\n    };\n    Selection.prototype.getCheckedRowIndexes = function () {\n        return this.selectedIndexes;\n    };\n    return Selection;\n}());\nexport { Selection };\n","import * as events from '../base/constant';\nimport { Grid, getObject, Print as GridPrint } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Print module\n * @hidden\n */\nvar Print = /** @class */ (function () {\n    /**\n     * Constructor for Print module\n     */\n    function Print(parent) {\n        this.parent = parent;\n        Grid.Inject(GridPrint);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Print.prototype.getModuleName = function () {\n        return 'print';\n    };\n    /**\n     * @hidden\n     */\n    Print.prototype.addEventListener = function () {\n        this.parent.grid.on(events.printGridInit, this.printTreeGrid, this);\n    };\n    Print.prototype.removeEventListener = function () {\n        this.parent.grid.off(events.printGridInit, this.printTreeGrid);\n    };\n    Print.prototype.printTreeGrid = function (printGrid) {\n        var grid = getObject('printgrid', printGrid);\n        var gridElement = getObject('element', printGrid);\n        grid.addEventListener(events.queryCellInfo, this.parent.grid.queryCellInfo);\n        grid.addEventListener(events.rowDataBound, this.parent.grid.rowDataBound);\n        grid.addEventListener(events.beforeDataBound, this.parent.grid.beforeDataBound);\n        addClass([gridElement], 'e-treegrid');\n    };\n    Print.prototype.print = function () {\n        this.parent.grid.print();\n    };\n    /**\n     * To destroy the Print\n     * @return {void}\n     * @hidden\n     */\n    Print.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Print;\n}());\nexport { Print };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the filtering behavior of the TreeGrid.\n */\nvar SearchSettings = /** @class */ (function (_super) {\n    __extends(SearchSettings, _super);\n    function SearchSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"fields\", void 0);\n    __decorate([\n        Property(false)\n    ], SearchSettings.prototype, \"ignoreCase\", void 0);\n    __decorate([\n        Property('contains')\n    ], SearchSettings.prototype, \"operator\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"key\", void 0);\n    __decorate([\n        Property()\n    ], SearchSettings.prototype, \"hierarchyMode\", void 0);\n    return SearchSettings;\n}(ChildProperty));\nexport { SearchSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the selection behavior of the TreeGrid.\n */\nvar SelectionSettings = /** @class */ (function (_super) {\n    __extends(SelectionSettings, _super);\n    function SelectionSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property('Row')\n    ], SelectionSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Flow')\n    ], SelectionSettings.prototype, \"cellSelectionMode\", void 0);\n    __decorate([\n        Property('Single')\n    ], SelectionSettings.prototype, \"type\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"persistSelection\", void 0);\n    __decorate([\n        Property('Default')\n    ], SelectionSettings.prototype, \"checkboxMode\", void 0);\n    __decorate([\n        Property(false)\n    ], SelectionSettings.prototype, \"checkboxOnly\", void 0);\n    __decorate([\n        Property(true)\n    ], SelectionSettings.prototype, \"enableToggle\", void 0);\n    return SelectionSettings;\n}(ChildProperty));\nexport { SelectionSettings };\n","import { getObject, appendChildren } from '@syncfusion/ej2-grids';\nimport { addClass, createElement, isNullOrUndefined, getValue } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { isRemoteData, isOffline, getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * TreeGrid render module\n * @hidden\n */\nvar Render = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Render(parent) {\n        this.parent = parent;\n        this.templateResult = null;\n        this.parent.grid.on('template-result', this.columnTemplateResult, this);\n    }\n    /**\n     * Updated row elements for TreeGrid\n     */\n    Render.prototype.RowModifier = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var data = args.data;\n        var parentData = data.parentItem;\n        var index;\n        if (!isNullOrUndefined(data.parentItem) && !isFilterChildHierarchy(this.parent) &&\n            (!(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root')) ||\n                (isRemoteData(this.parent) && !isOffline(this.parent)))) {\n            index = data.parentItem.index;\n            var collapsed = (this.parent.initialRender && (!(isNullOrUndefined(parentData[this.parent.expandStateMapping]) ||\n                parentData[this.parent.expandStateMapping]) || this.parent.enableCollapseAll)) ||\n                !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n            if (collapsed) {\n                args.row.style.display = 'none';\n            }\n        }\n        else {\n            index = +args.row.getAttribute('aria-rowindex');\n        }\n        if (isRemoteData(this.parent) && !isOffline(this.parent)) {\n            var proxy_1 = this.parent;\n            var parentrec = this.parent.getCurrentViewRecords().filter(function (rec) {\n                return getValue(proxy_1.idMapping, rec) === getValue(proxy_1.parentIdMapping, data);\n            });\n            if (parentrec.length > 0) {\n                var display = parentrec[0].expanded ? 'table-row' : 'none';\n                args.row.setAttribute('style', 'display: ' + display + ';');\n            }\n        }\n        //addClass([args.row], 'e-gridrowindex' + index + 'level' + (<ITreeData>args.data).level);\n        var summaryRow = getObject('isSummaryRow', args.data);\n        if (summaryRow) {\n            addClass([args.row], 'e-summaryrow');\n        }\n        if (args.row.querySelector('.e-treegridexpand')) {\n            args.row.setAttribute('aria-expanded', 'true');\n        }\n        else if (args.row.querySelector('.e-treegridcollapse')) {\n            args.row.setAttribute('aria-expanded', 'false');\n        }\n        if (this.parent.enableCollapseAll && this.parent.initialRender) {\n            if (!isNullOrUndefined(data.parentItem)) {\n                args.row.style.display = 'none';\n            }\n        }\n        this.parent.trigger(events.rowDataBound, args);\n    };\n    /**\n     * cell renderer for tree column index cell\n     */\n    Render.prototype.cellRender = function (args) {\n        if (!args.data) {\n            return;\n        }\n        var grid = this.parent.grid;\n        var data = args.data;\n        var index;\n        var ispadfilter = isNullOrUndefined(data.filterLevel);\n        var pad = ispadfilter ? data.level : data.filterLevel;\n        var totalIconsWidth = 0;\n        var cellElement;\n        var column = this.parent.getColumnByField(args.column.field);\n        var summaryRow = data.isSummaryRow;\n        if (!isNullOrUndefined(data.parentItem)) {\n            index = data.parentItem.index;\n        }\n        else {\n            index = data.index;\n        }\n        if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex\n            && (args.requestType === 'add' || args.requestType === 'delete' || isNullOrUndefined(args.cell.querySelector('.e-treecell')))) {\n            var container = createElement('div', { className: 'e-treecolumn-container' });\n            var emptyExpandIcon = createElement('span', {\n                className: 'e-icons e-none',\n                styles: 'width: 10px; display: inline-block'\n            });\n            for (var n = 0; n < pad; n++) {\n                totalIconsWidth += 10;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            var iconRequired = !isNullOrUndefined(data.hasFilteredChildRecords)\n                ? data.hasFilteredChildRecords : data.hasChildRecords;\n            if (iconRequired && !isNullOrUndefined(data.childRecords)) {\n                iconRequired = !(data.childRecords.length === 0);\n            }\n            if (iconRequired) {\n                addClass([args.cell], 'e-treerowcell');\n                var expandIcon = createElement('span', { className: 'e-icons' });\n                var expand = void 0;\n                if (this.parent.initialRender) {\n                    expand = data.expanded &&\n                        (isNullOrUndefined(data[this.parent.expandStateMapping]) || data[this.parent.expandStateMapping]) &&\n                        !this.parent.enableCollapseAll;\n                }\n                else {\n                    expand = !(!data.expanded || !getExpandStatus(this.parent, data, this.parent.grid.getCurrentViewRecords()));\n                }\n                var collapsed = true;\n                if (!isNullOrUndefined(data.parentItem) && (!isNullOrUndefined(data[this.parent.expandStateMapping])\n                    && data[this.parent.expandStateMapping])\n                    && !(this.parent.allowPaging && !(this.parent.pageSettings.pageSizeMode === 'Root'))) {\n                    collapsed = !getExpandStatus(this.parent, args.data, this.parent.grid.getCurrentViewRecords());\n                }\n                addClass([expandIcon], (expand && collapsed) ? 'e-treegridexpand' : 'e-treegridcollapse');\n                totalIconsWidth += 18;\n                container.appendChild(expandIcon);\n                emptyExpandIcon.style.width = '7px';\n                totalIconsWidth += 7;\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            else if (pad || !pad && !data.level) {\n                // icons width\n                totalIconsWidth += 20;\n                container.appendChild(emptyExpandIcon.cloneNode());\n                container.appendChild(emptyExpandIcon.cloneNode());\n            }\n            //should add below code when paging funcitonality implemented\n            // if (data.hasChildRecords) {\n            //     addClass([expandIcon], data.expanded ? 'e-treegridexpand' : 'e-treegridcollapse');\n            // }\n            cellElement = createElement('span', { className: 'e-treecell' });\n            if (this.parent.allowTextWrap) {\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n            this.updateTreeCell(args, cellElement, container);\n            container.appendChild(cellElement);\n            args.cell.appendChild(container);\n        }\n        if (this.parent.frozenColumns > this.parent.treeColumnIndex &&\n            grid.getColumnIndexByUid(args.column.uid) === this.parent.frozenColumns + 1) {\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n        }\n        else if (this.parent.frozenColumns <= this.parent.treeColumnIndex &&\n            grid.getColumnIndexByUid(args.column.uid) === this.parent.frozenColumns - 1) {\n            addClass([args.cell], 'e-gridrowindex' + index + 'level' + data.level);\n        }\n        if (!isNullOrUndefined(column) && column.showCheckbox) {\n            this.parent.notify('columnCheckbox', args);\n            if (this.parent.allowTextWrap) {\n                var checkboxElement = args.cell.querySelectorAll('.e-frame')[0];\n                var width = parseInt(checkboxElement.style.width, 16);\n                totalIconsWidth += width;\n                totalIconsWidth += 10;\n                if (grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n                    cellElement = args.cell.querySelector('.e-treecell');\n                }\n                else {\n                    cellElement = args.cell.querySelector('.e-treecheckbox');\n                }\n                cellElement.style.width = 'Calc(100% - ' + totalIconsWidth + 'px)';\n            }\n        }\n        if (summaryRow) {\n            addClass([args.cell], 'e-summarycell');\n            var summaryData = getObject(args.column.field, args.data);\n            args.cell.querySelector('.e-treecell') != null ?\n                args.cell.querySelector('.e-treecell').innerHTML = summaryData : args.cell.innerHTML = summaryData;\n        }\n        if (isNullOrUndefined(this.parent.rowTemplate)) {\n            this.parent.trigger(events.queryCellInfo, args);\n        }\n    };\n    Render.prototype.updateTreeCell = function (args, cellElement, container) {\n        var textContent = args.cell.querySelector('.e-treecell') != null ?\n            args.cell.querySelector('.e-treecell').innerHTML : args.cell.innerHTML;\n        if (typeof (args.column.template) === 'object' && this.templateResult) {\n            appendChildren(cellElement, this.templateResult);\n            this.templateResult = null;\n            args.cell.innerHTML = '';\n        }\n        else if (args.cell.classList.contains('e-templatecell')) {\n            var len = args.cell.children.length;\n            for (var i = 0; i < len; len = args.cell.children.length) {\n                cellElement.appendChild(args.cell.children[i]);\n            }\n        }\n        else {\n            cellElement.innerHTML = textContent;\n            args.cell.innerHTML = '';\n        }\n    };\n    Render.prototype.columnTemplateResult = function (args) {\n        this.templateResult = args.template;\n    };\n    Render.prototype.destroy = function () {\n        this.parent.grid.off('template-result', this.columnTemplateResult);\n    };\n    return Render;\n}());\nexport { Render };\n","import { extend, isNullOrUndefined, setValue, getValue, isBlazor, addClass, removeClass } from '@syncfusion/ej2-base';\nimport { DataManager, Query, DataUtil } from '@syncfusion/ej2-data';\nimport { showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\nimport { getObject, getUid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, isCountRequired } from '../utils';\nimport * as events from './constant';\n/**\n * Internal dataoperations for tree grid\n * @hidden\n */\nvar DataManipulation = /** @class */ (function () {\n    function DataManipulation(grid) {\n        this.addedRecords = 'addedRecords';\n        this.parent = grid;\n        this.parentItems = [];\n        this.taskIds = [];\n        this.hierarchyData = [];\n        this.storedIndex = -1;\n        this.sortedData = [];\n        this.isSortAction = false;\n        this.addEventListener();\n        this.dataResults = {};\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n    }\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.addEventListener = function () {\n        this.parent.on('updateRemoteLevel', this.updateParentRemoteData, this);\n        this.parent.grid.on('sorting-begin', this.beginSorting, this);\n        this.parent.on('updateAction', this.updateData, this);\n        this.parent.on(events.remoteExpand, this.collectExpandingRecs, this);\n        this.parent.on('dataProcessor', this.dataProcessor, this);\n    };\n    /**\n     * @hidden\n     */\n    DataManipulation.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.remoteExpand, this.collectExpandingRecs);\n        this.parent.off('updateRemoteLevel', this.updateParentRemoteData);\n        this.parent.off('updateAction', this.updateData);\n        this.parent.off('dataProcessor', this.dataProcessor);\n        this.parent.grid.off('sorting-begin', this.beginSorting);\n    };\n    /**\n     * To destroy the dataModule\n     * @return {void}\n     * @hidden\n     */\n    DataManipulation.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /** @hidden */\n    DataManipulation.prototype.isRemote = function () {\n        if (!(this.parent.dataSource instanceof DataManager)) {\n            return false;\n        }\n        return true;\n        // let gridData:  DataManager = <DataManager>this.parent.dataSource;\n        // return gridData.dataSource.offline !== true && gridData.dataSource.url !== undefined;\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.convertToFlatData = function (data) {\n        var _this = this;\n        this.parent.flatData = (Object.keys(data).length === 0 && !(this.parent.dataSource instanceof DataManager) ?\n            this.parent.dataSource : []);\n        this.parent.parentData = [];\n        var adaptorName = 'adaptorName';\n        if ((isRemoteData(this.parent) && !isOffline(this.parent)) && data instanceof DataManager && !(data instanceof Array)) {\n            var dm = this.parent.dataSource;\n            if (this.parent.parentIdMapping) {\n                this.parent.query = isNullOrUndefined(this.parent.query) ?\n                    new Query() : this.parent.query;\n                if (this.parent.parentIdMapping) {\n                    var filterKey = this.parent.query.params.filter(function (param) { return param.key === 'IdMapping'; });\n                    if (this.parent.initialRender && !filterKey.length) {\n                        this.parent.query.where(this.parent.parentIdMapping, 'equal', null);\n                        this.parent.query.addParams('IdMapping', this.parent.idMapping);\n                    }\n                }\n                var clientRender = 'isClientRender';\n                if (!this.parent.hasChildMapping && !(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender])) {\n                    var qry = this.parent.query.clone();\n                    qry.queries = [];\n                    qry = qry.select([this.parent.parentIdMapping]);\n                    qry.isCountRequired = true;\n                    dm.executeQuery(qry).then(function (e) {\n                        _this.parentItems = DataUtil.distinct(e.result, _this.parent.parentIdMapping, false);\n                        var req = getObject('dataSource.requests', _this.parent).filter(function (e) {\n                            return e.httpRequest.statusText !== 'OK';\n                        }).length;\n                        if (req === 0) {\n                            setValue('grid.contentModule.isLoaded', true, _this.parent);\n                            if (!isNullOrUndefined(_this.zerothLevelData)) {\n                                setValue('cancel', false, _this.zerothLevelData);\n                                getValue('grid.renderModule', _this.parent).dataManagerSuccess(_this.zerothLevelData);\n                                _this.zerothLevelData = null;\n                            }\n                            _this.parent.grid.hideSpinner();\n                        }\n                    });\n                }\n            }\n        }\n        else if (data instanceof Array) {\n            this.convertJSONData(data);\n        }\n    };\n    DataManipulation.prototype.convertJSONData = function (data) {\n        this.hierarchyData = [];\n        this.taskIds = [];\n        for (var i = 0; i < Object.keys(data).length; i++) {\n            var tempData = data[i];\n            this.hierarchyData.push(extend({}, tempData));\n            if (!isNullOrUndefined(tempData[this.parent.idMapping])) {\n                this.taskIds.push(tempData[this.parent.idMapping]);\n            }\n        }\n        if (this.isSelfReference) {\n            var selfData = [];\n            var mappingData = new DataManager(this.hierarchyData).executeLocal(new Query()\n                .group(this.parent.parentIdMapping));\n            for (var i = 0; i < mappingData.length; i++) {\n                var groupData = mappingData[i];\n                var index = this.taskIds.indexOf(groupData.key);\n                if (!isNullOrUndefined(groupData.key)) {\n                    if (index > -1) {\n                        var childData = (groupData.items);\n                        this.hierarchyData[index][this.parent.childMapping] = childData;\n                        continue;\n                    }\n                }\n                selfData.push.apply(selfData, groupData.items);\n            }\n            this.hierarchyData = this.selfReferenceUpdate(selfData);\n        }\n        if (!Object.keys(this.hierarchyData).length) {\n            var isGantt = 'isGantt';\n            var referenceData = !(this.parent.dataSource instanceof DataManager) && this.parent[isGantt];\n            this.parent.flatData = referenceData ? (this.parent.dataSource) : [];\n        }\n        else {\n            this.createRecords(this.hierarchyData);\n        }\n        this.storedIndex = -1;\n    };\n    // private crudActions(): void {\n    //   if (this.parent.dataSource instanceof DataManager && (this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor)) {\n    //     let oldUpdate: Function = this.parent.dataSource.adaptor.update;\n    //     this.parent.dataSource.adaptor.update =\n    //         function (dm: DataManager, keyField: string, value: Object, tableName?: string, query?: Query, original?: Object): Object {\n    //                value = getPlainData(value);\n    //                return oldUpdate.apply(this, [dm, keyField, value, tableName, query, original]);\n    //              }\n    //   }\n    // }\n    DataManipulation.prototype.selfReferenceUpdate = function (selfData) {\n        var result = [];\n        while (this.hierarchyData.length > 0 && selfData.length > 0) {\n            var index = selfData.indexOf(this.hierarchyData[0]);\n            if (index === -1) {\n                this.hierarchyData.shift();\n            }\n            else {\n                result.push(this.hierarchyData.shift());\n                selfData.splice(index, 1);\n            }\n        }\n        return result;\n    };\n    /**\n     * Function to update the zeroth level parent records in remote binding\n     * @hidden\n     */\n    DataManipulation.prototype.updateParentRemoteData = function (args) {\n        var records = args.result;\n        var adaptorName = 'adaptorName';\n        var clientRender = 'isClientRender';\n        if (!this.parent.hasChildMapping && !this.parentItems.length &&\n            (!(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]) && !this.parent.loadChildOnDemand)) {\n            this.zerothLevelData = args;\n            setValue('cancel', true, args);\n        }\n        else {\n            if (!(this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]) && !this.parent.loadChildOnDemand) {\n                for (var rec = 0; rec < records.length; rec++) {\n                    if (isNullOrUndefined(records[rec].index)) {\n                        records[rec].taskData = extend({}, records[rec]);\n                        records[rec].uniqueID = getUid(this.parent.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + records[rec].uniqueID, records[rec], this.parent);\n                        records[rec].level = 0;\n                        records[rec].index = Math.ceil(Math.random() * 1000);\n                        if ((records[rec][this.parent.hasChildMapping] || this.parentItems.indexOf(records[rec][this.parent.idMapping]) !== -1)) {\n                            records[rec].hasChildRecords = true;\n                        }\n                        records[rec].checkboxState = 'uncheck';\n                    }\n                }\n            }\n            else {\n                if (!isNullOrUndefined(records)) {\n                    this.convertToFlatData(records);\n                }\n            }\n        }\n        args.result = (this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender] && !isNullOrUndefined(records))\n            || this.parent.loadChildOnDemand ? this.parent.flatData : records;\n        this.parent.notify('updateResults', args);\n    };\n    /**\n     * Function to manipulate datasource\n     * @hidden\n     */\n    DataManipulation.prototype.collectExpandingRecs = function (rowDetails, isChild) {\n        var gridRows = this.parent.getRows();\n        if (this.parent.rowTemplate) {\n            var rows = this.parent.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var childRecord;\n        var adaptorName = 'adaptorName';\n        var clientRender = 'isClientRender';\n        if (rowDetails.rows.length > 0) {\n            if (!isChild) {\n                rowDetails.record.expanded = true;\n            }\n            for (var i = 0; i < rowDetails.rows.length; i++) {\n                if (isBlazor() && this.parent.isServerRendered) {\n                    removeClass([rowDetails.rows[i]], 'e-treerowcollapsed');\n                    addClass([rowDetails.rows[i]], 'e-treerowexpanded');\n                }\n                else {\n                    rowDetails.rows[i].style.display = 'table-row';\n                }\n                if ((isBlazor() && (this.parent.dataSource[adaptorName] === 'BlazorAdaptor' && !this.parent[clientRender]))\n                    || this.parent.loadChildOnDemand) {\n                    var targetEle = rowDetails.rows[i].getElementsByClassName('e-treegridcollapse')[0];\n                    childRecord = this.parent.rowTemplate ? this.parent.grid.getCurrentViewRecords()[rowDetails.rows[i].rowIndex] :\n                        this.parent.grid.getRowObjectFromUID(rowDetails.rows[i].getAttribute('data-Uid')).data;\n                    if (!isNullOrUndefined(targetEle) && childRecord.expanded) {\n                        addClass([targetEle], 'e-treegridexpand');\n                        removeClass([targetEle], 'e-treegridcollapse');\n                    }\n                    var childRows = [];\n                    childRows = gridRows.filter(function (r) {\n                        return r.querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1));\n                    });\n                    if (childRows.length && childRecord.expanded) {\n                        this.collectExpandingRecs({ record: childRecord, rows: childRows, parentRow: rowDetails.parentRow }, true);\n                    }\n                }\n                var expandingTd = rowDetails.rows[i].querySelector('.e-detailrowcollapse');\n                if (!isNullOrUndefined(expandingTd)) {\n                    this.parent.grid.detailRowModule.expand(expandingTd);\n                }\n            }\n        }\n        else {\n            this.fetchRemoteChildData({ record: rowDetails.record, rows: rowDetails.rows, parentRow: rowDetails.parentRow });\n        }\n    };\n    DataManipulation.prototype.fetchRemoteChildData = function (rowDetails, isChild) {\n        var _this = this;\n        var args = { row: rowDetails.parentRow, data: rowDetails.record };\n        var dm = this.parent.dataSource;\n        var qry = this.parent.grid.getDataModule().generateQuery();\n        var clonequries = qry.queries.filter(function (e) { return e.fn !== 'onPage' && e.fn !== 'onWhere'; });\n        qry.queries = clonequries;\n        qry.isCountRequired = true;\n        qry.where(this.parent.parentIdMapping, 'equal', rowDetails.record[this.parent.idMapping]);\n        showSpinner(this.parent.element);\n        dm.executeQuery(qry).then(function (e) {\n            var datas = _this.parent.grid.currentViewData;\n            var inx = datas.indexOf(rowDetails.record);\n            var haveChild = getObject('actual.nextLevel', e);\n            var result = e.result;\n            rowDetails.record.childRecords = result;\n            for (var r = 0; r < result.length; r++) {\n                result[r].taskData = extend({}, result[r]);\n                result[r].level = rowDetails.record.level + 1;\n                result[r].index = Math.ceil(Math.random() * 1000);\n                var parentData = extend({}, rowDetails.record);\n                delete parentData.childRecords;\n                result[r].parentItem = parentData;\n                result[r].parentUniqueID = rowDetails.record.uniqueID;\n                result[r].uniqueID = getUid(_this.parent.element.id + '_data_');\n                result[r].checkboxState = 'uncheck';\n                setValue('uniqueIDCollection.' + result[r].uniqueID, result[r], _this.parent);\n                // delete result[r].parentItem.childRecords;\n                if ((result[r][_this.parent.hasChildMapping] || _this.parentItems.indexOf(result[r][_this.parent.idMapping]) !== -1)\n                    && !(haveChild && !haveChild[r])) {\n                    result[r].hasChildRecords = true;\n                    result[r].expanded = false;\n                }\n                datas.splice(inx + r + 1, 0, result[r]);\n            }\n            setValue('result', datas, e);\n            setValue('action', 'beforecontentrender', e);\n            _this.parent.trigger(events.actionComplete, e);\n            hideSpinner(_this.parent.element);\n            if (_this.parent.grid.aggregates.length > 0 && !_this.parent.enableVirtualization) {\n                var gridQuery = getObject('query', e);\n                var result_1 = 'result';\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', _this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(gridQuery)) {\n                    var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    e[result_1] = _this.parent.summaryModule.calculateSummaryValue(summaryQuery, e[result_1], true);\n                }\n            }\n            e.count = _this.parent.grid.pageSettings.totalRecordsCount;\n            var virtualArgs = {};\n            if (_this.parent.enableVirtualization) {\n                _this.remoteVirtualAction(virtualArgs);\n            }\n            getValue('grid.renderModule', _this.parent).dataManagerSuccess(e, virtualArgs);\n            _this.parent.trigger(events.expanded, args);\n        });\n    };\n    DataManipulation.prototype.remoteVirtualAction = function (virtualArgs) {\n        virtualArgs.requestType = 'refresh';\n        setValue('isExpandCollapse', true, virtualArgs);\n        var contentModule = getValue('grid.contentModule', this.parent);\n        var currentInfo = getValue('currentInfo', contentModule);\n        var prevInfo = getValue('prevInfo', contentModule);\n        if (currentInfo.loadNext && this.parent.grid.pageSettings.currentPage === currentInfo.nextInfo.page) {\n            this.parent.grid.pageSettings.currentPage = prevInfo.page;\n        }\n    };\n    DataManipulation.prototype.beginSorting = function () {\n        this.isSortAction = true;\n    };\n    DataManipulation.prototype.createRecords = function (data, parentRecords) {\n        var treeGridData = [];\n        for (var i = 0, len = Object.keys(data).length; i < len; i++) {\n            var currentData = extend({}, data[i]);\n            currentData.taskData = data[i];\n            var level = 0;\n            this.storedIndex++;\n            if (!currentData.hasOwnProperty('index')) {\n                currentData.index = this.storedIndex;\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping]) ||\n                (currentData[this.parent.hasChildMapping] && isCountRequired(this.parent))) {\n                currentData.hasChildRecords = true;\n                if (this.parent.enableCollapseAll || !isNullOrUndefined(this.parent.dataStateChange)\n                    && isNullOrUndefined(currentData[this.parent.childMapping])) {\n                    currentData.expanded = false;\n                }\n                else {\n                    currentData.expanded = !isNullOrUndefined(currentData[this.parent.expandStateMapping])\n                        ? currentData[this.parent.expandStateMapping] : true;\n                }\n            }\n            if (!currentData.hasOwnProperty('index')) {\n                currentData.index = currentData.hasChildRecords ? this.storedIndex : this.storedIndex;\n            }\n            if (this.isSelfReference && isNullOrUndefined(currentData[this.parent.parentIdMapping])) {\n                this.parent.parentData.push(currentData);\n            }\n            currentData.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + currentData.uniqueID, currentData, this.parent);\n            if (!isNullOrUndefined(parentRecords)) {\n                var parentData = extend({}, parentRecords);\n                delete parentData.childRecords;\n                delete parentData[this.parent.childMapping];\n                if (this.isSelfReference) {\n                    delete parentData.taskData[this.parent.childMapping];\n                }\n                currentData.parentItem = parentData;\n                currentData.parentUniqueID = parentData.uniqueID;\n                level = parentRecords.level + 1;\n            }\n            if (!currentData.hasOwnProperty('level')) {\n                currentData.level = level;\n            }\n            currentData.checkboxState = 'uncheck';\n            if (isNullOrUndefined(currentData[this.parent.parentIdMapping]) || currentData.parentItem) {\n                this.parent.flatData.push(currentData);\n            }\n            if (!this.isSelfReference && currentData.level === 0) {\n                this.parent.parentData.push(currentData);\n            }\n            if (!isNullOrUndefined(currentData[this.parent.childMapping] && currentData[this.parent.childMapping].length)) {\n                var record = this.createRecords(currentData[this.parent.childMapping], currentData);\n                currentData.childRecords = record;\n            }\n            treeGridData.push(currentData);\n        }\n        return treeGridData;\n    };\n    /**\n     * Function to perform filtering/sorting action for local data\n     * @hidden\n     */\n    DataManipulation.prototype.dataProcessor = function (args) {\n        var isExport = getObject('isExport', args);\n        var expresults = getObject('expresults', args);\n        var exportType = getObject('exportType', args);\n        var isPrinting = getObject('isPrinting', args);\n        var dataObj;\n        var actionArgs = getObject('actionArgs', args);\n        var requestType = getObject('requestType', args);\n        var actionData = getObject('data', args);\n        var action = getObject('action', args);\n        var actionAddArgs = actionArgs;\n        var primaryKeyColumnName = this.parent.getPrimaryKeyFieldNames()[0];\n        var dataValue = getObject('data', actionAddArgs);\n        if ((!isNullOrUndefined(actionAddArgs)) && (!isNullOrUndefined(actionAddArgs.action)) && (actionAddArgs.action === 'add')\n            && (!isNullOrUndefined(actionAddArgs.data)) && isNullOrUndefined(actionAddArgs.data[primaryKeyColumnName])) {\n            actionAddArgs.data[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n            dataValue.taskData[primaryKeyColumnName] = args.result[actionAddArgs.index][primaryKeyColumnName];\n        }\n        if ((!isNullOrUndefined(actionArgs) && Object.keys(actionArgs).length) || requestType === 'save') {\n            requestType = requestType ? requestType : actionArgs.requestType;\n            actionData = actionData ? actionData : getObject('data', actionArgs);\n            action = action ? action : getObject('action', actionArgs);\n            if (this.parent.editSettings.mode === 'Batch') {\n                this.batchChanges = this.parent.grid.editModule.getBatchChanges();\n            }\n            if (action === 'add' || (requestType === 'batchsave' && (this.parent.editSettings.mode === 'Batch'\n                && this.batchChanges[this.addedRecords].length))) {\n                this.parent.grid.currentViewData = args.result;\n            }\n            if (this.parent.isLocalData) {\n                this.updateAction(actionData, action, requestType);\n            }\n        }\n        if (isExport && !isNullOrUndefined(expresults)) {\n            dataObj = expresults;\n        }\n        else {\n            dataObj = isCountRequired(this.parent) ? getValue('result', this.parent.grid.dataSource)\n                : this.parent.grid.dataSource;\n        }\n        var results = dataObj instanceof DataManager ? dataObj.dataSource.json : dataObj;\n        var count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        if ((this.parent.grid.allowFiltering && this.parent.grid.filterSettings.columns.length) ||\n            (this.parent.grid.searchSettings.key.length > 0)) {\n            var qry = new Query();\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = new Query();\n                gridQuery = getValue('grid.renderModule.data', this.parent).filterQuery(gridQuery);\n                gridQuery = getValue('grid.renderModule.data', this.parent).searchQuery(gridQuery);\n            }\n            var fltrQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onWhere'; });\n            var srchQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onSearch'; });\n            qry.queries = fltrQuery.concat(srchQuery);\n            var filteredData = new DataManager(results).executeLocal(qry);\n            this.parent.notify('updateFilterRecs', { data: filteredData });\n            results = this.dataResults.result;\n            this.dataResults.result = null;\n            if (this.parent.grid.aggregates.length > 0) {\n                var query = getObject('query', args);\n                if (isNullOrUndefined(gridQuery)) {\n                    gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n                }\n                if (!isNullOrUndefined(query)) {\n                    var summaryQuery = query.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                    results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, results, true);\n                }\n            }\n        }\n        if (this.parent.grid.aggregates.length && this.parent.grid.sortSettings.columns.length === 0\n            && this.parent.grid.filterSettings.columns.length === 0 && !this.parent.grid.searchSettings.key.length) {\n            var gridQuery = getObject('query', args);\n            if (isNullOrUndefined(gridQuery)) {\n                gridQuery = getValue('grid.renderModule.data', this.parent).aggregateQuery(new Query());\n            }\n            var summaryQuery = gridQuery.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n            results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.parent.flatData, true);\n        }\n        if (this.parent.grid.sortSettings.columns.length > 0 || this.isSortAction) {\n            this.isSortAction = false;\n            var parentData = void 0;\n            var action_1 = 'action';\n            var collpasedIndexes = [];\n            parentData = this.parent.parentData;\n            var sortedData = void 0;\n            var query = getObject('query', args);\n            var srtQry = new Query();\n            for (var srt = this.parent.grid.sortSettings.columns.length - 1; srt >= 0; srt--) {\n                var col = this.parent.getColumnByField(this.parent.grid.sortSettings.columns[srt].field);\n                var compFun = col.sortComparer && !this.isRemote() ?\n                    col.sortComparer.bind(col) :\n                    this.parent.grid.sortSettings.columns[srt].direction;\n                srtQry.sortBy(this.parent.grid.sortSettings.columns[srt].field, compFun);\n            }\n            var modifiedData = new DataManager(parentData).executeLocal(srtQry);\n            sortedData = modifiedData;\n            var sortArgs = { modifiedData: modifiedData, filteredData: results, srtQry: srtQry };\n            this.parent.notify('createSort', sortArgs);\n            results = sortArgs.modifiedData;\n            this.dataResults.result = null;\n            this.sortedData = results;\n            this.parent.notify('updateModel', {});\n            if (this.parent.grid.aggregates.length > 0 && !isNullOrUndefined(query)) {\n                var isSort = false;\n                var query_1 = getObject('query', args);\n                var summaryQuery = query_1.queries.filter(function (q) { return q.fn === 'onAggregates'; });\n                results = this.parent.summaryModule.calculateSummaryValue(summaryQuery, this.sortedData, isSort);\n            }\n        }\n        count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n            : results.length;\n        var temp = this.paging(results, count, isExport, isPrinting, exportType, args);\n        results = temp.result;\n        count = temp.count;\n        args.result = results;\n        args.count = count;\n        this.parent.notify('updateResults', args);\n    };\n    DataManipulation.prototype.paging = function (results, count, isExport, isPrinting, exportType, args) {\n        if (this.parent.allowPaging && (!isExport || exportType === 'CurrentPage')\n            && (!isPrinting || this.parent.printMode === 'CurrentPage')) {\n            this.parent.notify(events.pagingActions, { result: results, count: count });\n            results = this.dataResults.result;\n            count = isCountRequired(this.parent) ? getValue('count', this.parent.dataSource)\n                : this.dataResults.count;\n        }\n        else if (this.parent.enableVirtualization && (!isExport || exportType === 'CurrentPage')\n            && getValue('requestType', args) !== 'save') {\n            this.parent.notify(events.pagingActions, { result: results, count: count, actionArgs: getValue('actionArgs', args) });\n            results = this.dataResults.result;\n            count = this.dataResults.count;\n        }\n        var value = { result: results, count: count };\n        return value;\n    };\n    /**\n     * update for datasource\n     */\n    DataManipulation.prototype.updateData = function (dataResult) {\n        this.dataResults = dataResult;\n    };\n    DataManipulation.prototype.updateAction = function (actionData, action, requestType) {\n        if ((requestType === 'delete' || requestType === 'save')) {\n            this.parent.notify(events.crudAction, { value: actionData, action: action || requestType });\n        }\n        if (requestType === 'batchsave' && this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify(events.batchSave, {});\n        }\n    };\n    return DataManipulation;\n}());\nexport { DataManipulation };\n","/**\n * Defines Predefined toolbar items.\n * @hidden\n */\nexport var ToolbarItem;\n(function (ToolbarItem) {\n    ToolbarItem[ToolbarItem[\"Add\"] = 0] = \"Add\";\n    ToolbarItem[ToolbarItem[\"Edit\"] = 1] = \"Edit\";\n    ToolbarItem[ToolbarItem[\"Update\"] = 2] = \"Update\";\n    ToolbarItem[ToolbarItem[\"Delete\"] = 3] = \"Delete\";\n    ToolbarItem[ToolbarItem[\"Cancel\"] = 4] = \"Cancel\";\n    ToolbarItem[ToolbarItem[\"Search\"] = 5] = \"Search\";\n    ToolbarItem[ToolbarItem[\"ExpandAll\"] = 6] = \"ExpandAll\";\n    ToolbarItem[ToolbarItem[\"CollapseAll\"] = 7] = \"CollapseAll\";\n    ToolbarItem[ToolbarItem[\"ExcelExport\"] = 8] = \"ExcelExport\";\n    ToolbarItem[ToolbarItem[\"PdfExport\"] = 9] = \"PdfExport\";\n    ToolbarItem[ToolbarItem[\"CsvExport\"] = 10] = \"CsvExport\";\n    ToolbarItem[ToolbarItem[\"Print\"] = 11] = \"Print\";\n    ToolbarItem[ToolbarItem[\"RowIndent\"] = 12] = \"RowIndent\";\n    ToolbarItem[ToolbarItem[\"RowOutdent\"] = 13] = \"RowOutdent\";\n})(ToolbarItem || (ToolbarItem = {}));\n/**\n * Defines predefined contextmenu items.\n * @hidden\n */\nexport var ContextMenuItems;\n(function (ContextMenuItems) {\n    ContextMenuItems[ContextMenuItems[\"AutoFit\"] = 0] = \"AutoFit\";\n    ContextMenuItems[ContextMenuItems[\"AutoFitAll\"] = 1] = \"AutoFitAll\";\n    ContextMenuItems[ContextMenuItems[\"SortAscending\"] = 2] = \"SortAscending\";\n    ContextMenuItems[ContextMenuItems[\"SortDescending\"] = 3] = \"SortDescending\";\n    ContextMenuItems[ContextMenuItems[\"Edit\"] = 4] = \"Edit\";\n    ContextMenuItems[ContextMenuItems[\"Delete\"] = 5] = \"Delete\";\n    ContextMenuItems[ContextMenuItems[\"Save\"] = 6] = \"Save\";\n    ContextMenuItems[ContextMenuItems[\"Cancel\"] = 7] = \"Cancel\";\n    ContextMenuItems[ContextMenuItems[\"PdfExport\"] = 8] = \"PdfExport\";\n    ContextMenuItems[ContextMenuItems[\"ExcelExport\"] = 9] = \"ExcelExport\";\n    ContextMenuItems[ContextMenuItems[\"CsvExport\"] = 10] = \"CsvExport\";\n    ContextMenuItems[ContextMenuItems[\"FirstPage\"] = 11] = \"FirstPage\";\n    ContextMenuItems[ContextMenuItems[\"PrevPage\"] = 12] = \"PrevPage\";\n    ContextMenuItems[ContextMenuItems[\"LastPage\"] = 13] = \"LastPage\";\n    ContextMenuItems[ContextMenuItems[\"NextPage\"] = 14] = \"NextPage\";\n    ContextMenuItems[ContextMenuItems[\"AddRow\"] = 15] = \"AddRow\";\n})(ContextMenuItems || (ContextMenuItems = {}));\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the paging behavior of the TreeGrid.\n */\nvar PageSettings = /** @class */ (function (_super) {\n    __extends(PageSettings, _super);\n    function PageSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(12)\n    ], PageSettings.prototype, \"pageSize\", void 0);\n    __decorate([\n        Property(8)\n    ], PageSettings.prototype, \"pageCount\", void 0);\n    __decorate([\n        Property(1)\n    ], PageSettings.prototype, \"currentPage\", void 0);\n    __decorate([\n        Property()\n    ], PageSettings.prototype, \"totalRecordsCount\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"enableQueryString\", void 0);\n    __decorate([\n        Property(false)\n    ], PageSettings.prototype, \"pageSizes\", void 0);\n    __decorate([\n        Property(null)\n    ], PageSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property('All')\n    ], PageSettings.prototype, \"pageSizeMode\", void 0);\n    return PageSettings;\n}(ChildProperty));\nexport { PageSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty, Collection, getEnumValue, compile } from '@syncfusion/ej2-base';\nimport { Internationalization } from '@syncfusion/ej2-base';\nimport { CellType } from '@syncfusion/ej2-grids';\n/**\n * Configures the TreeGrid's aggregate column.\n */\nvar AggregateColumn = /** @class */ (function (_super) {\n    __extends(AggregateColumn, _super);\n    function AggregateColumn() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.intl = new Internationalization();\n        _this.templateFn = {};\n        return _this;\n    }\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setFormatter = function (cultureName) {\n        if (this.format && (this.format.skeleton || this.format.format)) {\n            this.formatFn = this.getFormatFunction(this.format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatFunction = function (format) {\n        if (format.type) {\n            return this.intl.getDateFormat(format);\n        }\n        else {\n            return this.intl.getNumberFormat(format);\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getFormatter = function () {\n        return this.formatFn;\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setTemplate = function (helper) {\n        if (helper === void 0) { helper = {}; }\n        if (this.footerTemplate !== undefined) {\n            this.templateFn[getEnumValue(CellType, CellType.Summary)] = { fn: compile(this.footerTemplate, helper),\n                property: 'footerTemplate' };\n        }\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.getTemplate = function (type) {\n        return this.templateFn[getEnumValue(CellType, type)];\n    };\n    /**\n     * @hidden\n     */\n    AggregateColumn.prototype.setPropertiesSilent = function (prop) {\n        this.setProperties(prop, true);\n    };\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"type\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"footerTemplate\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"format\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"columnName\", void 0);\n    __decorate([\n        Property()\n    ], AggregateColumn.prototype, \"customAggregate\", void 0);\n    return AggregateColumn;\n}(ChildProperty));\nexport { AggregateColumn };\nvar AggregateRow = /** @class */ (function (_super) {\n    __extends(AggregateRow, _super);\n    function AggregateRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], AggregateColumn)\n    ], AggregateRow.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], AggregateRow.prototype, \"showChildSummary\", void 0);\n    return AggregateRow;\n}(ChildProperty));\nexport { AggregateRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property } from '@syncfusion/ej2-base';\n/**\n * Configures the edit behavior of the TreeGrid.\n */\nvar EditSettings = /** @class */ (function (_super) {\n    __extends(EditSettings, _super);\n    function EditSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowAdding\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowEditing\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"allowDeleting\", void 0);\n    __decorate([\n        Property('Cell')\n    ], EditSettings.prototype, \"mode\", void 0);\n    __decorate([\n        Property('Top')\n    ], EditSettings.prototype, \"newRowPosition\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"allowEditOnDblClick\", void 0);\n    __decorate([\n        Property(true)\n    ], EditSettings.prototype, \"showConfirmDialog\", void 0);\n    __decorate([\n        Property(false)\n    ], EditSettings.prototype, \"showDeleteConfirmDialog\", void 0);\n    __decorate([\n        Property('')\n    ], EditSettings.prototype, \"template\", void 0);\n    __decorate([\n        Property({})\n    ], EditSettings.prototype, \"dialog\", void 0);\n    return EditSettings;\n}(ChildProperty));\nexport { EditSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { ChildProperty, Property, Collection } from '@syncfusion/ej2-base';\n/**\n * Represents the field name and direction of sort column.\n */\nvar SortDescriptor = /** @class */ (function (_super) {\n    __extends(SortDescriptor, _super);\n    function SortDescriptor() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"field\", void 0);\n    __decorate([\n        Property()\n    ], SortDescriptor.prototype, \"direction\", void 0);\n    return SortDescriptor;\n}(ChildProperty));\nexport { SortDescriptor };\n/**\n * Configures the sorting behavior of TreeGrid.\n */\nvar SortSettings = /** @class */ (function (_super) {\n    __extends(SortSettings, _super);\n    function SortSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Collection([], SortDescriptor)\n    ], SortSettings.prototype, \"columns\", void 0);\n    __decorate([\n        Property(true)\n    ], SortSettings.prototype, \"allowUnsort\", void 0);\n    return SortSettings;\n}(ChildProperty));\nexport { SortSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component, addClass, createElement, EventHandler, isNullOrUndefined, extend } from '@syncfusion/ej2-base';\nimport { removeClass, Complex, Collection, isBlazor, getElement, getValue } from '@syncfusion/ej2-base';\nimport { Event, Property, NotifyPropertyChanges, setValue, KeyboardEvents, L10n } from '@syncfusion/ej2-base';\nimport { Column } from '../models/column';\nimport { RowDropSettings, getUid } from '@syncfusion/ej2-grids';\nimport { FilterSettings } from '../models/filter-settings';\nimport { TextWrapSettings } from '../models/textwrap-settings';\nimport { gridObserver } from '@syncfusion/ej2-grids';\nimport { TreeClipboard } from '../actions/clipboard';\nimport { Selection as TreeGridSelection } from '../actions/selection';\nimport { Print } from '../actions/print';\nimport * as events from '../base/constant';\nimport { SearchSettings } from '../models/search-settings';\nimport { SelectionSettings } from '../models/selection-settings';\nimport { getActualProperties, getObject } from '@syncfusion/ej2-grids';\nimport { DataManager, RemoteSaveAdaptor, JsonAdaptor, Deferred } from '@syncfusion/ej2-data';\nimport { createSpinner, hideSpinner, showSpinner } from '@syncfusion/ej2-popups';\nimport { isRemoteData, isOffline, extendArray, isCountRequired } from '../utils';\nimport { Grid } from '@syncfusion/ej2-grids';\nimport { Render } from '../renderer/render';\nimport { DataManipulation } from './data';\nimport { iterateArrayOrObject } from '@syncfusion/ej2-grids';\nimport { ToolbarItem, ContextMenuItems } from '../enum';\nimport { PageSettings } from '../models/page-settings';\nimport { AggregateRow } from '../models/summary';\nimport { EditSettings } from '../models/edit-settings';\nimport { SortSettings } from '../models/sort-settings';\n/**\n * Represents the TreeGrid component.\n * ```html\n * <div id='treegrid'></div>\n * <script>\n *  var treegridObj = new TreeGrid({ allowPaging: true });\n *  treegridObj.appendTo('#treegrid');\n * </script>\n * ```\n */\nvar TreeGrid = /** @class */ (function (_super) {\n    __extends(TreeGrid, _super);\n    function TreeGrid(options, element) {\n        var _this = _super.call(this, options, element) || this;\n        _this.dataResults = {};\n        _this.uniqueIDCollection = {};\n        _this.uniqueIDFilterCollection = {};\n        _this.changedRecords = 'changedRecords';\n        _this.deletedRecords = 'deletedRecords';\n        _this.addedRecords = 'addedRecords';\n        TreeGrid_1.Inject(TreeGridSelection);\n        setValue('mergePersistData', _this.mergePersistTreeGridData, _this);\n        _this.grid = new Grid();\n        return _this;\n    }\n    TreeGrid_1 = TreeGrid;\n    /**\n     * Export TreeGrid data to Excel file(.xlsx).\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    TreeGrid.prototype.excelExport = function (excelExportProperties, isMultipleExport, \n    /* tslint:disable-next-line:no-any */\n    workbook, isBlob) {\n        if (isBlazor()) {\n            this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n            return null;\n        }\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, false);\n    };\n    /**\n     * Export TreeGrid data to CSV file.\n     * @param  {ExcelExportProperties} excelExportProperties - Defines the export properties of the TreeGrid.\n     * @param  {boolean} isMultipleExport - Define to enable multiple export.\n     * @param  {workbook} workbook - Defines the Workbook if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    TreeGrid.prototype.csvExport = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob) {\n        if (isBlazor()) {\n            this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n            return null;\n        }\n        return this.excelExportModule.Map(excelExportProperties, isMultipleExport, workbook, isBlob, true);\n    };\n    /**\n     * Export TreeGrid data to PDF document.\n     * @param  {pdfExportProperties} PdfExportProperties - Defines the export properties of the Grid.\n     * @param  {isMultipleExport} isMultipleExport - Define to enable multiple export.\n     * @param  {pdfDoc} pdfDoc - Defined the Pdf Document if multiple export is enabled.\n     * @param  {boolean} isBlob - If 'isBlob' set to true, then it will be returned as blob data.\n     * @return {Promise<any>}\n     * @blazorType void\n     */\n    TreeGrid.prototype.pdfExport = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        if (isBlazor()) {\n            this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n            return null;\n        }\n        return this.pdfExportModule.Map(pdfExportProperties, isMultipleExport, pdfDoc, isBlob);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    TreeGrid.prototype.getModuleName = function () {\n        return 'treegrid';\n    };\n    /**\n     * For internal use only - Initialize the event handler;\n     * @private\n     */\n    TreeGrid.prototype.preRender = function () {\n        this.TreeGridLocale();\n        this.initProperties();\n        this.defaultLocale = {\n            Above: 'Above',\n            Below: 'Below',\n            AddRow: 'Add Row',\n            ExpandAll: 'Expand All',\n            CollapseAll: 'Collapse All',\n            RowIndent: 'Indent',\n            RowOutdent: 'Outdent'\n        };\n        this.l10n = new L10n('treegrid', this.defaultLocale, this.locale);\n        if (this.isSelfReference && isNullOrUndefined(this.childMapping)) {\n            this.childMapping = 'Children';\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    TreeGrid.prototype.sortByColumn = function (columnName, direction, isMultiSort) {\n        this.sortModule.sortColumn(columnName, direction, isMultiSort);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSorting = function () {\n        if (this.sortModule) {\n            this.sortModule.clearSorting();\n        }\n    };\n    /**\n     * Remove sorted column by field name.\n     * @param {string} field - Defines the column field name to remove sort.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeSortColumn = function (field) {\n        this.sortModule.removeSortColumn(field);\n    };\n    /**\n     * Searches TreeGrid records using the given key.\n     * You can customize the default search option by using the\n     * [`searchSettings`](./#searchsettings/).\n     * @param  {string} searchString - Defines the key.\n     * @return {void}\n     */\n    TreeGrid.prototype.search = function (searchString) {\n        this.grid.search(searchString);\n    };\n    /**\n     * Changes the column width to automatically fit its content to ensure that the width shows the content without wrapping/hiding.\n     * > * This method ignores the hidden columns.\n     * > * Uses the `autoFitColumns` method in the `dataBound` event to resize at initial rendering.\n     * @param  {string |string[]} fieldNames - Defines the column names.\n     * @return {void}\n     *\n     *\n     *\n     */\n    TreeGrid.prototype.autoFitColumns = function (fieldNames) {\n        this.resizeModule.autoFitColumns(fieldNames);\n        this.updateColumnModel();\n    };\n    /**\n     * Changes the TreeGrid column positions by field names.\n     * @param  {string} fromFName - Defines the origin field name.\n     * @param  {string} toFName - Defines the destination field name.\n     * @return {void}\n     */\n    TreeGrid.prototype.reorderColumns = function (fromFName, toFName) {\n        this.grid.reorderColumns(fromFName, toFName);\n    };\n    TreeGrid.prototype.TreeGridLocale = function () {\n        /* tslint:disable-next-line:no-any */\n        var locale = L10n.locale;\n        var localeObject;\n        localeObject = {};\n        setValue(this.locale, {}, localeObject);\n        var gridLocale;\n        gridLocale = {};\n        gridLocale = getObject(this.locale, locale);\n        var treeGridLocale;\n        treeGridLocale = {};\n        treeGridLocale = getObject(this.getModuleName(), gridLocale);\n        setValue('grid', treeGridLocale, getObject(this.locale, localeObject));\n        L10n.load(localeObject);\n    };\n    /**\n     * By default, prints all the pages of the TreeGrid and hides the pager.\n     * > You can customize print options using the\n     * [`printMode`](./#printmode).\n     * @return {void}\n     */\n    TreeGrid.prototype.print = function () {\n        this.printModule.print();\n    };\n    TreeGrid.prototype.treeGridkeyActionHandler = function (e) {\n        if (this.allowKeyboard) {\n            switch (e.action) {\n                case 'ctrlDownArrow':\n                    this.expandAll();\n                    break;\n                case 'ctrlUpArrow':\n                    this.collapseAll();\n                    break;\n                case 'ctrlShiftUpArrow':\n                    var collapsetarget = e.target;\n                    var collapsecolumn = collapsetarget.closest('.e-rowcell');\n                    var collapserow = collapsecolumn.closest('tr');\n                    var collapseRow = collapserow.querySelector('.e-treegridexpand');\n                    if (collapseRow !== null && collapseRow !== undefined) {\n                        this.expandCollapseRequest(collapserow.querySelector('.e-treegridexpand'));\n                    }\n                    break;\n                case 'ctrlShiftDownArrow':\n                    var expandtarget = e.target;\n                    var expandcolumn = expandtarget.closest('.e-rowcell');\n                    var expandrow = expandcolumn.closest('tr');\n                    var expandRow = expandrow.querySelector('.e-treegridcollapse');\n                    if (expandRow !== null && expandRow !== undefined) {\n                        this.expandCollapseRequest(expandrow.querySelector('.e-treegridcollapse'));\n                    }\n                    break;\n                case 'downArrow':\n                    var target = e.target.parentElement;\n                    var summaryElement = this.findnextRowElement(target);\n                    if (summaryElement !== null) {\n                        var rowIndex = summaryElement.rowIndex;\n                        this.selectRow(rowIndex);\n                        var cellIndex = e.target.cellIndex;\n                        var row = summaryElement.children[cellIndex];\n                        addClass([row], 'e-focused');\n                        addClass([row], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n                    break;\n                case 'upArrow':\n                    var targetRow = e.target.parentElement;\n                    var summaryRowElement = this.findPreviousRowElement(targetRow);\n                    if (summaryRowElement !== null) {\n                        var rIndex = summaryRowElement.rowIndex;\n                        this.selectRow(rIndex);\n                        var cIndex = e.target.cellIndex;\n                        var rows = summaryRowElement.children[cIndex];\n                        addClass([rows], 'e-focused');\n                        addClass([rows], 'e-focus');\n                    }\n                    else {\n                        this.clearSelection();\n                    }\n            }\n        }\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findnextRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.nextElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findnextRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    // Get Proper Row Element from the summary \n    TreeGrid.prototype.findPreviousRowElement = function (summaryRowElement) {\n        var rowElement = summaryRowElement.previousElementSibling;\n        if (rowElement !== null && (rowElement.className.indexOf('e-summaryrow') !== -1 ||\n            rowElement.style.display === 'none')) {\n            rowElement = this.findPreviousRowElement(rowElement);\n        }\n        return rowElement;\n    };\n    TreeGrid.prototype.initProperties = function () {\n        this.defaultLocale = {};\n        this.flatData = [];\n        this.parentData = [];\n        this.columnModel = [];\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n        this.keyConfigs = {\n            ctrlDownArrow: 'ctrl+downarrow',\n            ctrlUpArrow: 'ctrl+uparrow',\n            ctrlShiftUpArrow: 'ctrl+shift+uparrow',\n            ctrlShiftDownArrow: 'ctrl+shift+downarrow',\n            downArrow: 'downArrow',\n            upArrow: 'upArrow'\n        };\n        this.isLocalData = (!(this.dataSource instanceof DataManager) || this.dataSource.dataSource.offline\n            || (!isNullOrUndefined(this.dataSource.ready)) || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n        this.isSelfReference = !isNullOrUndefined(this.parentIdMapping);\n    };\n    /**\n     * Binding events to the element while component creation.\n     * @hidden\n     */\n    TreeGrid.prototype.wireEvents = function () {\n        EventHandler.add(this.grid.element, 'click', this.mouseClickHandler, this);\n        EventHandler.add(this.element, 'touchend', this.mouseClickHandler, this);\n        this.keyboardModule = new KeyboardEvents(this.element, {\n            keyAction: this.treeGridkeyActionHandler.bind(this),\n            keyConfigs: this.keyConfigs,\n            eventName: 'keydown'\n        });\n        if (this.allowKeyboard) {\n            this.element.tabIndex = this.element.tabIndex === -1 ? 0 : this.element.tabIndex;\n        }\n    };\n    /**\n     * To provide the array of modules needed for component rendering\n     * @return {ModuleDeclaration[]}\n     * @hidden\n     */\n    TreeGrid.prototype.requiredModules = function () {\n        var modules = [];\n        if (this.isDestroyed) {\n            return modules;\n        }\n        modules.push({\n            member: 'filter', args: [this, this.filterSettings]\n        });\n        if (!isNullOrUndefined(this.toolbar)) {\n            modules.push({\n                member: 'toolbar',\n                args: [this]\n            });\n        }\n        if (this.contextMenuItems) {\n            modules.push({\n                member: 'contextMenu',\n                args: [this]\n            });\n        }\n        if (this.allowPaging) {\n            modules.push({\n                member: 'pager',\n                args: [this, this.pageSettings]\n            });\n        }\n        if (this.allowReordering) {\n            modules.push({\n                member: 'reorder',\n                args: [this]\n            });\n        }\n        if (this.allowSorting) {\n            modules.push({\n                member: 'sort',\n                args: [this]\n            });\n        }\n        if (this.aggregates.length > 0) {\n            modules.push({\n                member: 'summary', args: [this]\n            });\n        }\n        modules.push({\n            member: 'resize', args: [this]\n        });\n        if (this.allowExcelExport) {\n            modules.push({\n                member: 'ExcelExport', args: [this]\n            });\n        }\n        if (this.frozenColumns || this.frozenRows || this.getFrozenColumns()) {\n            modules.push({\n                member: 'freeze', args: [this]\n            });\n        }\n        if (this.detailTemplate) {\n            modules.push({\n                member: 'detailRow', args: [this]\n            });\n        }\n        if (this.allowPdfExport) {\n            modules.push({\n                member: 'PdfExport', args: [this]\n            });\n        }\n        if (this.showColumnMenu) {\n            modules.push({\n                member: 'columnMenu', args: [this]\n            });\n        }\n        if (this.showColumnChooser) {\n            modules.push({\n                member: 'ColumnChooser', args: [this]\n            });\n        }\n        this.extendRequiredModules(modules);\n        return modules;\n    };\n    TreeGrid.prototype.extendRequiredModules = function (modules) {\n        if (this.allowRowDragAndDrop) {\n            modules.push({\n                member: 'rowDragAndDrop',\n                args: [this]\n            });\n        }\n        if (this.editSettings.allowAdding || this.editSettings.allowDeleting || this.editSettings.allowEditing) {\n            modules.push({\n                member: 'edit',\n                args: [this]\n            });\n        }\n        if (this.isCommandColumn(this.columns)) {\n            modules.push({\n                member: 'commandColumn',\n                args: [this]\n            });\n        }\n        if (this.allowSelection) {\n            modules.push({\n                member: 'selection',\n                args: [this]\n            });\n        }\n        if (this.enableVirtualization) {\n            modules.push({\n                member: 'virtualScroll',\n                args: [this]\n            });\n        }\n    };\n    TreeGrid.prototype.isCommandColumn = function (columns) {\n        var _this = this;\n        return columns.some(function (col) {\n            if (col.columns) {\n                return _this.isCommandColumn(col.columns);\n            }\n            return !!(col.commands || col.commandsTemplate);\n        });\n    };\n    /**\n     * Unbinding events from the element while component destroy.\n     * @hidden\n     */\n    TreeGrid.prototype.unwireEvents = function () {\n        if (this.grid && this.grid.element) {\n            EventHandler.remove(this.grid.element, 'click', this.mouseClickHandler);\n        }\n    };\n    /**\n     * For internal use only - To Initialize the component rendering.\n     * @private\n     */\n    TreeGrid.prototype.render = function () {\n        var _this = this;\n        createSpinner({ target: this.element }, this.createElement);\n        this.renderModule = new Render(this);\n        this.dataModule = new DataManipulation(this);\n        this.printModule = new Print(this);\n        var clientRender = 'isClientRender';\n        if (this[clientRender]) {\n            this.isServerRendered = false;\n        }\n        this.trigger(events.load);\n        this.autoGenerateColumns();\n        this.initialRender = true;\n        if (!isNullOrUndefined(this.dataSource)) {\n            this.convertTreeData(this.dataSource);\n        }\n        if (!isBlazor() || !this.isServerRendered) {\n            this.loadGrid();\n            if (this.element.classList.contains('e-treegrid') && this.rowDropSettings.targetID) {\n                this.grid.rowDropSettings.targetID += '_gridcontrol';\n            }\n            this.addListener();\n            var gridContainer = createElement('div', { id: this.element.id + '_gridcontrol' });\n            addClass([this.element], 'e-treegrid');\n            if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                this.element.style.height = this.height;\n            }\n            if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                this.element.style.width = this.width;\n            }\n            this.element.appendChild(gridContainer);\n            this.grid.appendTo(gridContainer);\n            this.wireEvents();\n        }\n        this.renderComplete();\n        var destroyTemplate = 'destroyTemplate';\n        var destroyTemplateFn = this.grid[destroyTemplate];\n        //tslint:disable-next-line:no-any\n        this.grid[destroyTemplate] = function (args, index) {\n            destroyTemplateFn.apply(_this.grid);\n            _this.clearTemplate(args, index);\n        };\n        if (isBlazor() && this.isServerRendered) {\n            var fn_1 = function (args) { return _this.gridRendered(args, fn_1); };\n            gridObserver.on('component-rendered', fn_1, this);\n        }\n    };\n    TreeGrid.prototype.afterGridRender = function () {\n        if (!isNullOrUndefined(this.grid.clipboardModule)) {\n            this.grid.clipboardModule.destroy();\n        }\n        this.clipboardModule = this.grid.clipboardModule = new TreeClipboard(this);\n    };\n    TreeGrid.prototype.gridRendered = function (args, fn) {\n        if (args.id === this.element.id + '_gridcontrol') {\n            this.grid = args.grid;\n        }\n        else {\n            return;\n        }\n        this.grid.query.queries = [];\n        var isJsComponent = 'isJsComponent';\n        var isHybrid = 'isHybrid';\n        if (!this.isServerRendered) {\n            this.grid[isJsComponent] = true;\n        }\n        else {\n            this.grid[isHybrid] = true;\n        }\n        this.setBlazorGUID();\n        this.setColIndex(this.grid.columns);\n        this.bindGridEvents();\n        var headerCheckbox = 'headerCheckbox';\n        if (!isNullOrUndefined(this.selectionModule)) {\n            this.grid.on('colgroup-refresh', this.selectionModule[headerCheckbox], this.selectionModule);\n        }\n        for (var i = 0; i < this.columns.length; i++) {\n            this.columns[i].uid = this.grid.columns[i].uid;\n        }\n        this.wireEvents();\n        this.afterGridRender();\n        var processModel = 'processModel';\n        this.grid[processModel]();\n        gridObserver.off('component-rendered', this.gridRendered);\n    };\n    TreeGrid.prototype.setColIndex = function (columnModel, ind) {\n        if (ind === void 0) { ind = 0; }\n        for (var i = 0, len = columnModel.length; i < len; i++) {\n            if (columnModel[i].columns) {\n                columnModel[i].index = isNullOrUndefined(columnModel[i].index) ? ind :\n                    columnModel[i].index;\n                ind++;\n                ind = this.setColIndex(columnModel[i].columns, ind);\n            }\n            else {\n                columnModel[i].index = isNullOrUndefined(columnModel[i].index) ? ind :\n                    columnModel[i].index;\n                ind++;\n            }\n        }\n        return ind;\n    };\n    TreeGrid.prototype.setBlazorGUID = function () {\n        var guid = 'guid';\n        if (this.editSettings) {\n            this.grid.editSettings[guid] = this.editSettings[guid];\n            this.grid.editSettings.template = this.editSettings.template;\n        }\n        for (var i = 0; i < this.aggregates.length; i++) {\n            for (var j = 0; j < this.aggregates[i].columns.length; j++) {\n                this.grid.aggregates[i].columns[j][guid] = this.aggregates[i].columns[j][guid];\n            }\n        }\n        for (var i = 0; i < this.columns.length; i++) {\n            this.grid.columns[i][guid] = this.columns[i][guid];\n        }\n    };\n    ;\n    TreeGrid.prototype.convertTreeData = function (data) {\n        var _this = this;\n        if (data instanceof Array && data.length > 0 && data[0].hasOwnProperty('level')) {\n            this.flatData = isCountRequired(this) ? getValue('result', data) : data;\n            this.flatData.filter(function (e) {\n                setValue('uniqueIDCollection.' + e.uniqueID, e, _this);\n                if (e.level === 0) {\n                    _this.parentData.push(e);\n                }\n            });\n        }\n        else {\n            if (isCountRequired(this)) {\n                var griddata = getValue('result', this.dataSource);\n                this.dataModule.convertToFlatData(griddata);\n            }\n            else {\n                this.dataModule.convertToFlatData(data);\n            }\n        }\n    };\n    // private getGridData(): Object {\n    //   if (isRemoteData(this)) {\n    //     return this.dataSource;\n    //   } else if (this.isLocalData && this.dataSource instanceof DataManager) {\n    //     this.dataSource.dataSource.json = this.flatData;\n    //     return this.dataSource;\n    //   }\n    //   return this.flatData;\n    // }\n    TreeGrid.prototype.bindGridProperties = function () {\n        var edit = {};\n        this.bindedDataSource();\n        this.grid.enableRtl = this.enableRtl;\n        this.grid.allowKeyboard = this.allowKeyboard;\n        this.grid.columns = this.getGridColumns(this.columns);\n        this.grid.allowExcelExport = this.allowExcelExport;\n        this.grid.allowPdfExport = this.allowPdfExport;\n        this.grid.query = this.query;\n        this.grid.columnQueryMode = this.columnQueryMode;\n        this.grid.allowPaging = this.allowPaging;\n        this.grid.pageSettings = getActualProperties(this.pageSettings);\n        this.grid.pagerTemplate = this.pagerTemplate;\n        this.grid.showColumnMenu = this.showColumnMenu;\n        this.grid.allowSorting = this.allowSorting;\n        this.grid.allowFiltering = this.allowFiltering;\n        this.grid.enableVirtualization = this.enableVirtualization;\n        this.grid.width = this.width;\n        this.grid.height = this.height;\n        this.grid.enableAltRow = this.enableAltRow;\n        this.grid.allowReordering = this.allowReordering;\n        this.grid.allowTextWrap = this.allowTextWrap;\n        this.grid.allowResizing = this.allowResizing;\n        this.grid.enableHover = this.enableHover;\n        this.grid.enableAutoFill = this.enableAutoFill;\n        this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n        this.grid.rowDropSettings = getActualProperties(this.rowDropSettings);\n        this.grid.rowHeight = this.rowHeight;\n        this.grid.gridLines = this.gridLines;\n        this.grid.allowSelection = this.allowSelection;\n        this.grid.toolbar = getActualProperties(this.getGridToolbar());\n        this.grid.toolbarTemplate = this.toolbarTemplate;\n        this.grid.showColumnChooser = this.showColumnChooser;\n        this.grid.filterSettings = getActualProperties(this.filterSettings);\n        this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n        this.grid.sortSettings = getActualProperties(this.sortSettings);\n        this.grid.searchSettings = getActualProperties(this.searchSettings);\n        this.grid.aggregates = getActualProperties(this.aggregates);\n        this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n        this.grid.printMode = getActualProperties(this.printMode);\n        this.grid.locale = getActualProperties(this.locale);\n        this.grid.selectedRowIndex = this.selectedRowIndex;\n        this.grid.contextMenuItems = getActualProperties(this.getContextMenu());\n        this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n        this.grid.editSettings = this.getGridEditSettings();\n        this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n        this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n        this.grid.frozenRows = this.frozenRows;\n        this.grid.frozenColumns = this.frozenColumns;\n        var templateInstance = 'templateDotnetInstance';\n        this.grid[templateInstance] = this[templateInstance];\n        var isJsComponent = 'isJsComponent';\n        this.grid[isJsComponent] = true;\n    };\n    TreeGrid.prototype.triggerEvents = function (args) {\n        this.trigger(getObject('name', args), args);\n    };\n    TreeGrid.prototype.bindGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.rowSelecting = this.triggerEvents.bind(this);\n        this.grid.rowSelected = function (args) {\n            if (!isBlazor()) {\n                _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            }\n            else if (isBlazor() && _this.isServerRendered) {\n                _this.allowServerDataBinding = false;\n                _this.setProperties({ selectedRowIndex: _this.grid.selectedRowIndex }, true);\n                _this.allowServerDataBinding = true;\n            }\n            treeGrid.notify(events.rowSelected, args);\n            _this.trigger(events.rowSelected, args);\n        };\n        this.grid.rowDeselected = function (args) {\n            _this.selectedRowIndex = _this.grid.selectedRowIndex;\n            _this.trigger(events.rowDeselected, args);\n        };\n        this.grid.resizeStop = function (args) {\n            _this.updateColumnModel();\n            _this.trigger(events.resizeStop, args);\n        };\n        this.grid.excelQueryCellInfo = function (args) {\n            _this.notify('excelCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.pdfQueryCellInfo = function (args) {\n            _this.notify('pdfCellInfo', args);\n            args = _this.dataResults;\n        };\n        this.grid.checkBoxChange = function (args) {\n            _this.trigger(events.checkboxChange, args);\n        };\n        this.grid.pdfExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelExportComplete = this.triggerEvents.bind(this);\n        this.grid.excelHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.pdfHeaderQueryCellInfo = this.triggerEvents.bind(this);\n        this.grid.dataSourceChanged = this.triggerEvents.bind(this);\n        this.grid.recordDoubleClick = this.triggerEvents.bind(this);\n        this.grid.rowDeselecting = this.triggerEvents.bind(this);\n        this.grid.cellDeselected = this.triggerEvents.bind(this);\n        this.grid.cellDeselecting = this.triggerEvents.bind(this);\n        this.grid.columnMenuOpen = this.triggerEvents.bind(this);\n        this.grid.columnMenuClick = this.triggerEvents.bind(this);\n        this.grid.cellSelected = this.triggerEvents.bind(this);\n        this.grid.headerCellInfo = this.triggerEvents.bind(this);\n        this.grid.resizeStart = this.triggerEvents.bind(this);\n        this.grid.resizing = this.triggerEvents.bind(this);\n        this.grid.columnDrag = this.triggerEvents.bind(this);\n        this.grid.columnDragStart = this.triggerEvents.bind(this);\n        this.grid.columnDrop = this.triggerEvents.bind(this);\n        this.grid.beforePrint = this.triggerEvents.bind(this);\n        this.grid.beforeCopy = this.triggerEvents.bind(this);\n        this.grid.beforePaste = function (args) {\n            var rows = _this.getRows();\n            var rowIndex = 'rowIndex';\n            while (rows[args[rowIndex]].classList.contains('e-summaryrow')) {\n                args[rowIndex]++;\n            }\n            _this.trigger(events.beforePaste, args);\n        };\n        this.grid.load = function () {\n            treeGrid.grid.on('initial-end', treeGrid.afterGridRender, treeGrid);\n        };\n        this.grid.printComplete = this.triggerEvents.bind(this);\n        this.grid.actionFailure = this.triggerEvents.bind(this);\n        this.extendedGridDataBoundEvent();\n        this.extendedGridEvents();\n        this.extendedGridActionEvents();\n        this.extendedGridEditEvents();\n        this.bindGridDragEvents();\n        this.bindCallBackEvents();\n    };\n    TreeGrid.prototype.extendedGridDataBoundEvent = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.dataBound = function (args) {\n            _this.updateRowTemplate(args);\n            _this.updateColumnModel();\n            _this.updateAltRow(_this.getRows());\n            _this.notify('dataBoundArg', args);\n            _this.trigger(events.dataBound, args);\n            if (isRemoteData(_this) && !isOffline(_this) && !_this.hasChildMapping) {\n                var req = getObject('dataSource.requests', _this).filter(function (e) {\n                    return e.httpRequest.statusText !== 'OK';\n                }).length;\n                setValue('grid.contentModule.isLoaded', !(req > 0), _this);\n            }\n            _this.initialRender = false;\n        };\n        this.grid.beforeDataBound = function (args) {\n            var dataSource = 'dataSource';\n            var requestType = getObject('action', args);\n            if (isRemoteData(treeGrid) && !isOffline(treeGrid) && requestType !== 'edit') {\n                treeGrid.notify('updateRemoteLevel', args);\n                args = (treeGrid.dataResults);\n            }\n            else if (treeGrid.flatData.length === 0 && isOffline(treeGrid) && treeGrid.dataSource instanceof DataManager) {\n                var dm = treeGrid.dataSource;\n                treeGrid.dataModule.convertToFlatData(dm.dataSource.json);\n                args.result = treeGrid.grid.dataSource[dataSource].json = treeGrid.flatData;\n            }\n            if (!isRemoteData(treeGrid) && !isCountRequired(this) && !isNullOrUndefined(treeGrid.dataSource)) {\n                if (this.isPrinting) {\n                    setValue('isPrinting', true, args);\n                }\n                treeGrid.notify('dataProcessor', args);\n                //args = this.dataModule.dataProcessor(args);\n            }\n            extend(args, treeGrid.dataResults);\n            // this.notify(events.beforeDataBound, args);\n            if (!this.isPrinting) {\n                var callBackPromise_1 = new Deferred();\n                treeGrid.trigger(events.beforeDataBound, args, function (beforeDataBoundArgs) {\n                    callBackPromise_1.resolve(beforeDataBoundArgs);\n                });\n                return callBackPromise_1;\n            }\n        };\n    };\n    TreeGrid.prototype.bindCallBackEvents = function () {\n        var _this = this;\n        var beginEdit;\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.beginEdit)) {\n                beginEdit = this.grid.beginEdit;\n            }\n        }\n        this.grid.toolbarClick = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(events.toolbarClick, args, function (toolbarargs) {\n                if (!toolbarargs.cancel) {\n                    _this.notify(events.toolbarClick, args);\n                }\n                callBackPromise.resolve(toolbarargs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSelecting = function (args) {\n            var callBackPromise = new Deferred();\n            _this.trigger(getObject('name', args), args, function (cellselectingArgs) {\n                callBackPromise.resolve(cellselectingArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.beginEdit = function (args) {\n            if (isBlazor() && _this.isServerRendered) {\n                if (beginEdit && typeof beginEdit === 'function') {\n                    beginEdit.apply(_this, [args]);\n                }\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.beginEdit, args, function (begineditArgs) {\n                callBackPromise.resolve(begineditArgs);\n            });\n            return callBackPromise;\n        };\n    };\n    TreeGrid.prototype.extendedGridEditEvents = function () {\n        var _this = this;\n        var keypressed = 'key-pressed';\n        var editKeyPress = 'keyPressed';\n        var localobserver = 'localObserver';\n        var cellEdit;\n        var cellSave;\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.cellEdit)) {\n                cellEdit = this.grid.cellEdit;\n            }\n            if (!isNullOrUndefined(this.grid.cellSave)) {\n                cellSave = this.grid.cellSave;\n            }\n        }\n        if (this.editModule && isBlazor() && this.isServerRendered) {\n            this.grid.on(keypressed, this.editModule[editKeyPress], this.editModule);\n            var events_1 = this.grid[localobserver].boundedEvents['key-pressed'];\n            events_1.splice(0, 0, events_1.pop());\n        }\n        this.grid.dataStateChange = function (args) {\n            if (_this.isExpandRefresh) {\n                _this.isExpandRefresh = false;\n                _this.grid.dataSource = { result: _this.flatData, count: getValue('count', _this.grid.dataSource) };\n            }\n            else {\n                _this.trigger(events.dataStateChange, args);\n            }\n        };\n        this.grid.cellSave = function (args) {\n            if (isBlazor() && _this.isServerRendered) {\n                if (cellSave && typeof cellSave === 'function') {\n                    cellSave.apply(_this, [args]);\n                }\n            }\n            if (_this.grid.isContextMenuOpen()) {\n                var contextitems = void 0;\n                contextitems = _this.grid.contextMenuModule.contextMenu.element.getElementsByClassName('e-selected')[0];\n                if ((isNullOrUndefined(contextitems) || contextitems.id !== _this.element.id + '_gridcontrol_cmenu_Save')) {\n                    args.cancel = true;\n                }\n            }\n            var callBackPromise = new Deferred();\n            _this.trigger(events.cellSave, args, function (cellsaveArgs) {\n                if (isBlazor() && !_this.isServerRendered) {\n                    cellsaveArgs.cell = getElement(cellsaveArgs.cell);\n                }\n                if (!cellsaveArgs.cancel) {\n                    _this.notify(events.cellSave, cellsaveArgs);\n                }\n                callBackPromise.resolve(cellsaveArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.cellSaved = function (args) {\n            _this.trigger(events.cellSaved, args);\n            _this.notify(events.cellSaved, args);\n        };\n        this.grid.cellEdit = function (args) {\n            if (isBlazor() && _this.isServerRendered) {\n                if (cellEdit && typeof cellEdit === 'function') {\n                    cellEdit.apply(_this, [args]);\n                }\n            }\n            var prom = 'promise';\n            var promise = new Deferred();\n            args[prom] = promise;\n            _this.notify(events.cellEdit, args);\n            return promise;\n        };\n        this.grid.batchAdd = function (args) {\n            _this.trigger(events.batchAdd, args);\n            _this.notify(events.batchAdd, args);\n        };\n        this.grid.beforeBatchSave = function (args) {\n            _this.trigger(events.beforeBatchSave, args);\n            _this.notify(events.beforeBatchSave, args);\n        };\n        this.grid.beforeBatchAdd = function (args) {\n            _this.trigger(events.beforeBatchAdd, args);\n            _this.notify(events.beforeBatchAdd, args);\n        };\n        this.grid.batchDelete = function (args) {\n            _this.trigger(events.batchDelete, args);\n            _this.notify(events.batchDelete, args);\n        };\n        this.grid.beforeBatchDelete = function (args) {\n            _this.trigger(events.beforeBatchDelete, args);\n            _this.notify(events.beforeBatchDelete, args);\n        };\n        this.grid.batchCancel = function (args) {\n            if (_this.editSettings.mode !== 'Cell') {\n                _this.trigger(events.batchCancel, args);\n            }\n            _this.notify(events.batchCancel, args);\n        };\n    };\n    TreeGrid.prototype.updateRowTemplate = function (args) {\n        var _this = this;\n        if (isBlazor() && !this.isServerRendered) {\n            setTimeout(function () {\n                _this.treeColumnRowTemplate(args);\n            }, 1000);\n        }\n        else {\n            this.treeColumnRowTemplate(args);\n        }\n    };\n    TreeGrid.prototype.bindedDataSource = function () {\n        var dataSource = 'dataSource';\n        var isDataAvailable = 'isDataAvailable';\n        var adaptor = 'adaptor';\n        var ready = 'ready';\n        var adaptorName = 'adaptorName';\n        var dotnetInstance = 'dotnetInstance';\n        var key = 'key';\n        if (this.dataSource && isCountRequired(this)) {\n            var data = this.flatData;\n            var datacount = getValue('count', this.dataSource);\n            this.grid.dataSource = { result: data, count: datacount };\n        }\n        else {\n            this.grid.dataSource = !(this.dataSource instanceof DataManager) ?\n                this.flatData : new DataManager(this.dataSource.dataSource, this.dataSource.defaultQuery, this.dataSource.adaptor);\n        }\n        if (isBlazor() && this.dataSource instanceof DataManager) {\n            this.grid.dataSource[adaptorName] = this.dataSource[adaptorName];\n            this.grid.dataSource[dotnetInstance] = this.dataSource[dotnetInstance];\n            this.grid.dataSource[key] = this.dataSource[key];\n        }\n        if (this.dataSource instanceof DataManager && (this.dataSource.dataSource.offline || this.dataSource.ready)) {\n            this.grid.dataSource[dataSource].json = extendArray(this.dataSource[dataSource].json);\n            this.grid.dataSource[ready] = this.dataSource.ready;\n            var dm_1 = this.grid.dataSource;\n            if (!isNullOrUndefined(this.grid.dataSource[ready])) {\n                this.grid.dataSource[ready].then(function (e) {\n                    dm_1[dataSource].offline = true;\n                    dm_1[isDataAvailable] = true;\n                    dm_1[dataSource].json = e.result;\n                    dm_1[adaptor] = new JsonAdaptor();\n                });\n            }\n        }\n    };\n    TreeGrid.prototype.extendedGridActionEvents = function () {\n        var _this = this;\n        var actionComplete;\n        if (isBlazor() && this.isServerRendered) {\n            if (!isNullOrUndefined(this.grid.actionComplete)) {\n                actionComplete = this.grid.actionComplete;\n            }\n        }\n        this.grid.actionBegin = function (args) {\n            if (args.requestType === 'sorting' && args.target && args.target.parentElement &&\n                args.target.parentElement.classList.contains('e-hierarchycheckbox')) {\n                args.cancel = true;\n            }\n            var requestType = getObject('requestType', args);\n            if (requestType === 'reorder') {\n                _this.notify('getColumnIndex', {});\n            }\n            _this.notify('actionBegin', { editAction: args });\n            if (!isRemoteData(_this) && !isNullOrUndefined(_this.filterModule) && !isCountRequired(_this)\n                && (_this.grid.filterSettings.columns.length === 0 || _this.grid.searchSettings.key.length === 0)) {\n                _this.notify('clearFilters', { flatData: _this.grid.dataSource });\n                _this.grid.dataSource = _this.dataResults.result;\n            }\n            var callBackPromise = new Deferred();\n            if (isBlazor() && args.requestType === 'delete' && !_this.isServerRendered) {\n                var data = 'data';\n                args[data] = args[data][0];\n            }\n            _this.trigger(events.actionBegin, args, function (actionArgs) {\n                if (isBlazor() && actionArgs.requestType === 'delete' && !_this.isServerRendered) {\n                    var data = 'data';\n                    actionArgs[data] = [actionArgs[data]];\n                }\n                if (!actionArgs.cancel) {\n                    _this.notify(events.beginEdit, actionArgs);\n                }\n                if (isBlazor() && actionArgs.requestType === 'beginEdit' && !_this.isServerRendered) {\n                    actionArgs.row = getElement(actionArgs.row);\n                }\n                callBackPromise.resolve(actionArgs);\n            });\n            return callBackPromise;\n        };\n        this.grid.actionComplete = function (args) {\n            if (isBlazor() && _this.isServerRendered && args.requestType !== 'filterAfterOpen') {\n                var rows = _this.getRows();\n                for (var i = 0; i < rows.length; i++) {\n                    if (rows[i].classList.contains('e-treerowcollapsed') || rows[i].classList.contains('e-treerowexpanded')) {\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? removeClass([rows[i]], 'e-treerowexpanded') :\n                            removeClass([rows[i]], 'e-treerowcollapsed');\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? addClass([rows[i]], 'e-treerowcollapsed') :\n                            addClass([rows[i]], 'e-treerowexpanded');\n                    }\n                    var cells = rows[i].querySelectorAll('.e-rowcell');\n                    var expandicon = cells[_this.treeColumnIndex].getElementsByClassName('e-treegridcollapse')[0] ||\n                        cells[_this.treeColumnIndex].getElementsByClassName('e-treegridexpand')[0];\n                    if (expandicon) {\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? removeClass([expandicon], 'e-treegridexpand') :\n                            removeClass([expandicon], 'e-treegridcollapse');\n                        (_this.enableCollapseAll && args.requestType === 'paging') ? addClass([expandicon], 'e-treegridcollapse') :\n                            addClass([expandicon], 'e-treegridexpand');\n                    }\n                }\n                if (actionComplete && typeof actionComplete === 'function') {\n                    actionComplete.apply(_this, [args]);\n                }\n            }\n            _this.notify('actioncomplete', args);\n            _this.updateColumnModel();\n            _this.updateTreeGridModel();\n            if (args.requestType === 'reorder') {\n                _this.notify('setColumnIndex', {});\n            }\n            _this.notify('actionComplete', { editAction: args });\n            if (args.requestType === 'add' && (_this.editSettings.newRowPosition !== 'Top' && _this.editSettings.newRowPosition !== 'Bottom')) {\n                _this.notify(events.beginAdd, args);\n            }\n            if (args.requestType === 'batchsave') {\n                _this.notify(events.batchSave, args);\n            }\n            _this.notify('updateGridActions', args);\n            if (isBlazor() && args.requestType === 'delete' && !_this.isServerRendered) {\n                var data = 'data';\n                args[data] = args[data][0];\n            }\n            _this.trigger(events.actionComplete, args);\n        };\n    };\n    TreeGrid.prototype.extendedGridEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.recordDoubleClick = function (args) {\n            _this.trigger(events.recordDoubleClick, args);\n            _this.notify(events.recordDoubleClick, args);\n        };\n        this.grid.detailDataBound = function (args) {\n            _this.notify('detaildataBound', args);\n            _this.trigger(events.detailDataBound, args);\n        };\n        this.grid.rowDataBound = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.RowModifier(args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            if (isNullOrUndefined(this.isPrinting)) {\n                setValue('isPrinting', false, args);\n            }\n            else {\n                setValue('isPrinting', this.isPrinting, args);\n            }\n            treeGrid.renderModule.cellRender(args);\n        };\n        this.grid.contextMenuClick = function (args) {\n            _this.notify(events.contextMenuClick, args);\n            _this.trigger(events.contextMenuClick, args);\n        };\n        this.grid.contextMenuOpen = function (args) {\n            _this.notify(events.contextMenuOpen, args);\n            _this.trigger(events.contextMenuOpen, args);\n        };\n        this.grid.queryCellInfo = function (args) {\n            _this.renderModule.cellRender(args);\n        };\n    };\n    TreeGrid.prototype.bindGridDragEvents = function () {\n        var _this = this;\n        var treeGrid = this;\n        this.grid.rowDragStartHelper = function (args) {\n            treeGrid.trigger(events.rowDragStartHelper, args);\n        };\n        this.grid.rowDragStart = function (args) {\n            treeGrid.trigger(events.rowDragStart, args);\n        };\n        this.grid.rowDrag = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            treeGrid.notify(events.rowdraging, args);\n            treeGrid.trigger(events.rowDrag, args);\n        };\n        this.grid.rowDrop = function (args) {\n            if (_this.grid.isEdit) {\n                args.cancel = true;\n                return;\n            }\n            treeGrid.notify(events.rowDropped, args);\n            args.cancel = true;\n        };\n    };\n    /**\n     * Renders TreeGrid component\n     * @private\n     */\n    TreeGrid.prototype.loadGrid = function () {\n        this.bindGridProperties();\n        this.bindGridEvents();\n        setValue('registeredTemplate', this.registeredTemplate, this.grid);\n        var ref = 'viewContainerRef';\n        setValue('viewContainerRef', this[ref], this.grid);\n    };\n    /**\n     * AutoGenerate TreeGrid columns from first record\n     * @hidden\n     */\n    TreeGrid.prototype.autoGenerateColumns = function () {\n        if (!this.columns.length && (!this.dataModule.isRemote() && Object.keys(this.dataSource).length)) {\n            this.columns = [];\n            var record = void 0;\n            // if (this.dataSource instanceof DataManager) {\n            //   record = (<DataManager>this.dataSource).dataSource.json[0];\n            // } else {\n            record = this.dataSource[0];\n            // }\n            var keys = Object.keys(record);\n            for (var i = 0; i < keys.length; i++) {\n                if ([this.childMapping, this.parentIdMapping].indexOf(keys[i]) === -1) {\n                    this.columns.push(keys[i]);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.getGridEditSettings = function () {\n        var edit = {};\n        var guid = 'guid';\n        edit.allowAdding = this.editSettings.allowAdding;\n        edit.allowEditing = this.editSettings.allowEditing;\n        edit.allowDeleting = this.editSettings.allowDeleting;\n        edit.newRowPosition = this.editSettings.newRowPosition === 'Bottom' ? 'Bottom' : 'Top';\n        edit.allowEditOnDblClick = this.editSettings.allowEditOnDblClick;\n        edit.showConfirmDialog = this.editSettings.showConfirmDialog;\n        edit.template = this.editSettings.template;\n        edit.showDeleteConfirmDialog = this.editSettings.showDeleteConfirmDialog;\n        edit[guid] = this.editSettings[guid];\n        edit.dialog = this.editSettings.dialog;\n        switch (this.editSettings.mode) {\n            case 'Dialog':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Batch':\n                edit.mode = this.editSettings.mode;\n                break;\n            case 'Row':\n                edit.mode = 'Normal';\n                break;\n            case 'Cell':\n                edit.mode = 'Normal';\n                edit.showConfirmDialog = false;\n                break;\n        }\n        return edit;\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getContextMenu = function () {\n        if (this.contextMenuItems) {\n            var items = [];\n            for (var i = 0; i < this.contextMenuItems.length; i++) {\n                var item = void 0;\n                switch (this.contextMenuItems[i]) {\n                    case 'AddRow':\n                    case ContextMenuItems.AddRow:\n                        items.push({ text: this.l10n.getConstant('AddRow'),\n                            target: '.e-content', id: this.element.id + '_gridcontrol_cmenu_AddRow',\n                            items: [{ text: this.l10n.getConstant('Above'), id: 'Above' }, { text: this.l10n.getConstant('Below'), id: 'Below' }] });\n                        break;\n                    default:\n                        items.push(this.contextMenuItems[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Defines grid toolbar from treegrid toolbar model\n     * @hidden\n     */\n    TreeGrid.prototype.getGridToolbar = function () {\n        if (this.toolbar) {\n            var items = [];\n            for (var i = 0; i < this.toolbar.length; i++) {\n                var item = void 0;\n                switch (this.toolbar[i]) {\n                    case 'Search':\n                    case ToolbarItem.Search:\n                        items.push('Search');\n                        break;\n                    case 'Print':\n                    case ToolbarItem.Print:\n                        items.push('Print');\n                        break;\n                    case 'ExpandAll':\n                    case ToolbarItem.ExpandAll:\n                        var tooltipText = this.l10n.getConstant('ExpandAll');\n                        items.push({ text: tooltipText, tooltipText: tooltipText,\n                            prefixIcon: 'e-expand', id: this.element.id + '_gridcontrol_expandall' });\n                        break;\n                    case 'CollapseAll':\n                    case ToolbarItem.CollapseAll:\n                        var tooltip = this.l10n.getConstant('CollapseAll');\n                        items.push({ text: tooltip,\n                            tooltipText: tooltip, prefixIcon: 'e-collapse', id: this.element.id + '_gridcontrol_collapseall'\n                        });\n                        break;\n                    case 'Indent':\n                    case ToolbarItem.RowIndent:\n                        var tooltipindent = this.l10n.getConstant('RowIndent');\n                        items.push({\n                            text: tooltipindent, tooltipText: tooltipindent,\n                            prefixIcon: 'e-indent', id: this.element.id + '_gridcontrol_indent'\n                        });\n                        break;\n                    case 'Outdent':\n                    case ToolbarItem.RowOutdent:\n                        var tooltipoutdent = this.l10n.getConstant('RowOutdent');\n                        items.push({\n                            text: tooltipoutdent, tooltipText: tooltipoutdent,\n                            prefixIcon: 'e-outdent', id: this.element.id + '_gridcontrol_outdent'\n                        });\n                        break;\n                    default:\n                        items.push(this.toolbar[i]);\n                }\n            }\n            return items;\n        }\n        else {\n            return null;\n        }\n    };\n    /**\n     * Convert TreeGrid ColumnModel to Grid Column\n     * @hidden\n     */\n    TreeGrid.prototype.getGridColumns = function (columns) {\n        var column = columns;\n        this.columnModel = [];\n        var treeGridColumn;\n        var gridColumn;\n        var gridColumnCollection = [];\n        for (var i = 0; i < column.length; i++) {\n            var treeColumn = this.grid.getColumnByUid(column[i].uid);\n            gridColumn = treeColumn ? treeColumn : {};\n            treeGridColumn = {};\n            if (typeof this.columns[i] === 'string') {\n                gridColumn.field = treeGridColumn.field = this.columns[i];\n            }\n            else {\n                for (var _i = 0, _a = Object.keys(column[i]); _i < _a.length; _i++) {\n                    var prop = _a[_i];\n                    gridColumn[prop] = treeGridColumn[prop] = column[i][prop];\n                }\n            }\n            if (column[i].columns) {\n                this.getGridColumns(columns[i].columns);\n            }\n            else {\n                this.columnModel.push(new Column(treeGridColumn));\n            }\n            gridColumnCollection.push(gridColumn);\n        }\n        return gridColumnCollection;\n    };\n    /**\n     * Called internally if any of the property value changed.\n     * @hidden\n     */\n    /* tslint:disable-next-line:max-line-length */\n    // tslint:disable-next-line:max-func-body-length\n    TreeGrid.prototype.onPropertyChanged = function (newProp, oldProp) {\n        var properties = Object.keys(newProp);\n        var requireRefresh = false;\n        var preventUpdate = 'preventUpdate';\n        for (var _i = 0, properties_1 = properties; _i < properties_1.length; _i++) {\n            var prop = properties_1[_i];\n            switch (prop) {\n                case 'columns':\n                    if (!(isBlazor() && this.isServerRendered && this[preventUpdate])) {\n                        this.grid.columns = this.getGridColumns(this.columns);\n                    }\n                    break;\n                case 'treeColumnIndex':\n                    this.grid.refreshColumns();\n                    break;\n                case 'allowPaging':\n                    this.grid.allowPaging = this.allowPaging;\n                    break;\n                case 'pageSettings':\n                    this.grid.pageSettings = getActualProperties(this.pageSettings);\n                    requireRefresh = true;\n                    break;\n                case 'enableVirtualization':\n                    this.grid.enableVirtualization = this.enableVirtualization;\n                    break;\n                case 'toolbar':\n                    this.grid.toolbar = this.getGridToolbar();\n                    break;\n                case 'allowSelection':\n                    this.grid.allowSelection = this.allowSelection;\n                    break;\n                case 'selectionSettings':\n                    this.grid.selectionSettings = getActualProperties(this.selectionSettings);\n                    break;\n                case 'allowSorting':\n                    this.grid.allowSorting = this.allowSorting;\n                    break;\n                case 'allowMultiSorting':\n                    this.grid.allowMultiSorting = this.allowMultiSorting;\n                    break;\n                case 'sortSettings':\n                    this.grid.sortSettings = getActualProperties(this.sortSettings);\n                    break;\n                case 'searchSettings':\n                    this.grid.searchSettings = getActualProperties(this.searchSettings);\n                    break;\n                case 'allowFiltering':\n                    this.grid.allowFiltering = this.allowFiltering;\n                    break;\n                case 'filterSettings':\n                    this.grid.filterSettings = getActualProperties(this.filterSettings);\n                    break;\n                case 'showColumnMenu':\n                    this.grid.showColumnMenu = this.showColumnMenu;\n                    break;\n                case 'allowRowDragAndDrop':\n                    this.grid.allowRowDragAndDrop = this.allowRowDragAndDrop;\n                    break;\n                case 'aggregates':\n                    this.grid.aggregates = getActualProperties(this.aggregates);\n                    break;\n                case 'dataSource':\n                    this.isLocalData = (!(this.dataSource instanceof DataManager) || (!isNullOrUndefined(this.dataSource.ready))\n                        || this.dataSource.adaptor instanceof RemoteSaveAdaptor);\n                    this.convertTreeData(this.dataSource);\n                    if (this.isLocalData) {\n                        if (isCountRequired(this)) {\n                            var count = getValue('count', this.dataSource);\n                            this.grid.dataSource = { result: this.flatData, count: count };\n                        }\n                        else {\n                            this.grid.dataSource = this.flatData;\n                        }\n                    }\n                    else {\n                        this.bindedDataSource();\n                        if (this.enableVirtualization) {\n                            this.grid.contentModule.removeEventListener();\n                            this.grid.contentModule.eventListener('on');\n                            this.grid.contentModule.renderTable();\n                        }\n                    }\n                    break;\n                case 'query':\n                    this.grid.query = this.query;\n                    break;\n                case 'enableCollapseAll':\n                    if (newProp[prop]) {\n                        this.collapseAll();\n                    }\n                    else {\n                        this.expandAll();\n                    }\n                    break;\n                case 'expandStateMapping':\n                    this.refresh();\n                    break;\n                case 'gridLines':\n                    this.grid.gridLines = this.gridLines;\n                    break;\n                case 'rowTemplate':\n                    this.grid.rowTemplate = getActualProperties(this.rowTemplate);\n                    break;\n                case 'frozenRows':\n                    this.grid.frozenRows = this.frozenRows;\n                    break;\n                case 'frozenColumns':\n                    this.grid.frozenColumns = this.frozenColumns;\n                    break;\n                case 'rowHeight':\n                    this.grid.rowHeight = this.rowHeight;\n                    break;\n                case 'height':\n                    if (!isNullOrUndefined(this.height) && typeof (this.height) === 'string' && this.height.indexOf('%') !== -1) {\n                        this.element.style.height = this.height;\n                    }\n                    this.grid.height = this.height;\n                    break;\n                case 'width':\n                    if (!isNullOrUndefined(this.width) && typeof (this.width) === 'string' && this.width.indexOf('%') !== -1) {\n                        this.element.style.width = this.width;\n                    }\n                    this.grid.width = this.width;\n                    break;\n                case 'locale':\n                    this.grid.locale = this.locale;\n                    break;\n                case 'selectedRowIndex':\n                    this.grid.selectedRowIndex = this.selectedRowIndex;\n                    break;\n                case 'enableAltRow':\n                    this.grid.enableAltRow = this.enableAltRow;\n                    break;\n                case 'enableHover':\n                    this.grid.enableHover = this.enableHover;\n                    break;\n                case 'enableAutoFill':\n                    this.grid.enableAutoFill = this.enableAutoFill;\n                    break;\n                case 'allowExcelExport':\n                    this.grid.allowExcelExport = this.allowExcelExport;\n                    break;\n                case 'allowPdfExport':\n                    this.grid.allowPdfExport = this.allowPdfExport;\n                    break;\n                case 'enableRtl':\n                    this.grid.enableRtl = this.enableRtl;\n                    break;\n                case 'allowReordering':\n                    this.grid.allowReordering = this.allowReordering;\n                    break;\n                case 'allowResizing':\n                    this.grid.allowResizing = this.allowResizing;\n                    break;\n                case 'textWrapSettings':\n                    this.grid.textWrapSettings = getActualProperties(this.textWrapSettings);\n                    break;\n                case 'allowTextWrap':\n                    this.grid.allowTextWrap = getActualProperties(this.allowTextWrap);\n                    this.refresh();\n                    break;\n                case 'contextMenuItems':\n                    this.grid.contextMenuItems = this.getContextMenu();\n                    break;\n                case 'showColumnChooser':\n                    this.grid.showColumnChooser = this.showColumnChooser;\n                    break;\n                case 'detailTemplate':\n                    this.grid.detailTemplate = getActualProperties(this.detailTemplate);\n                    break;\n                case 'columnMenuItems':\n                    this.grid.columnMenuItems = getActualProperties(this.columnMenuItems);\n                    break;\n                case 'editSettings':\n                    if (this.grid.isEdit && this.grid.editSettings.mode === 'Normal' && newProp[prop].mode &&\n                        (newProp[prop].mode === 'Cell' || newProp[prop].mode === 'Row')) {\n                        this.grid.closeEdit();\n                    }\n                    this.grid.editSettings = this.getGridEditSettings();\n                    break;\n            }\n            if (requireRefresh) {\n                this.refresh();\n            }\n        }\n    };\n    /**\n     * Destroys the component (detaches/removes all event handlers, attributes, classes, and empties the component element).\n     * @method destroy\n     * @return {void}\n     */\n    TreeGrid.prototype.destroy = function () {\n        this.removeListener();\n        this.unwireEvents();\n        _super.prototype.destroy.call(this);\n        if (this.grid) {\n            this.grid.destroy();\n        }\n        if (this.dataModule) {\n            this.dataModule.destroy();\n        }\n        var modules = ['dataModule', 'sortModule', 'renderModule', 'filterModule', 'printModule', 'clipboardModule',\n            'excelExportModule', 'pdfExportModule', 'toolbarModule', 'summaryModule', 'reorderModule', 'resizeModule',\n            'pagerModule', 'keyboardModule', 'columnMenuModule', 'contextMenuModule', 'editModule', 'virtualScrollModule',\n            'selectionModule', 'detailRow', 'rowDragAndDropModule', 'freezeModule'];\n        for (var i = 0; i < modules.length; i++) {\n            if (this[modules[i]]) {\n                this[modules[i]] = null;\n            }\n        }\n        this.element.innerHTML = '';\n        this.grid = null;\n    };\n    /**\n     * Update the TreeGrid model\n     * @method dataBind\n     * @return {void}\n     * @private\n     */\n    TreeGrid.prototype.dataBind = function () {\n        _super.prototype.dataBind.call(this);\n        if (!(isBlazor() && this.isServerRendered) || getValue('isRendered', this.grid) && !this.initialRender) {\n            this.grid.dataBind();\n        }\n    };\n    /**\n     * Get the properties to be maintained in the persisted state.\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.getPersistData = function () {\n        var keyEntity = ['pageSettings', 'sortSettings',\n            'filterSettings', 'columns', 'searchSettings', 'selectedRowIndex'];\n        var ignoreOnPersist = {\n            pageSettings: ['template', 'pageSizes', 'pageSizeMode', 'enableQueryString', 'totalRecordsCount', 'pageCount'],\n            filterSettings: ['type', 'mode', 'showFilterBarStatus', 'immediateModeDelay', 'ignoreAccent', 'hierarchyMode'],\n            searchSettings: ['fields', 'operator', 'ignoreCase'],\n            sortSettings: [], columns: [], selectedRowIndex: []\n        };\n        var ignoreOnColumn = ['filter', 'edit', 'filterBarTemplate', 'headerTemplate', 'template',\n            'commandTemplate', 'commands', 'dataSource'];\n        for (var i = 0; i < keyEntity.length; i++) {\n            var currentObject = this[keyEntity[i]];\n            for (var _i = 0, _a = ignoreOnPersist[keyEntity[i]]; _i < _a.length; _i++) {\n                var val = _a[_i];\n                delete currentObject[val];\n            }\n        }\n        this.ignoreInArrays(ignoreOnColumn, this.columns);\n        return this.addOnPersist(keyEntity);\n    };\n    TreeGrid.prototype.ignoreInArrays = function (ignoreOnColumn, columns) {\n        for (var i = 0; i < columns.length; i++) {\n            if (columns[i].columns) {\n                this.ignoreInColumn(ignoreOnColumn, columns[i]);\n                this.ignoreInArrays(ignoreOnColumn, columns[i].columns);\n            }\n            else {\n                this.ignoreInColumn(ignoreOnColumn, columns[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.ignoreInColumn = function (ignoreOnColumn, column) {\n        for (var i = 0; i < ignoreOnColumn.length; i++) {\n            delete column[ignoreOnColumn[i]];\n            column.filter = {};\n        }\n    };\n    TreeGrid.prototype.mouseClickHandler = function (e) {\n        if (!isNullOrUndefined(e.touches)) {\n            return;\n        }\n        var target = e.target;\n        if ((target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && (!this.isEditCollapse && !this.grid.isEdit)) {\n            this.expandCollapseRequest(target);\n        }\n        this.isEditCollapse = false;\n        this.notify('checkboxSelection', { target: target });\n    };\n    /**\n     * Returns TreeGrid rows\n     * @return {HTMLTableRowElement[]}\n     */\n    TreeGrid.prototype.getRows = function () {\n        return this.grid.getRows();\n    };\n    /**\n     * Gets the pager of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getPager = function () {\n        return this.grid.getPager(); //get element from pager\n    };\n    /**\n     * Adds a new record to the TreeGrid. Without passing parameters, it adds empty rows.\n     * > `editSettings.allowEditing` should be true.\n     * @param {Object} data - Defines the new add record data.\n     * @param {number} index - Defines the row index to be added.\n     * @param {RowPosition} position - Defines the new row position to be added.\n     */\n    TreeGrid.prototype.addRecord = function (data, index, position) {\n        if (this.editModule) {\n            this.editModule.addRecord(data, index, position);\n        }\n    };\n    /**\n     * Cancels edited state.\n     */\n    TreeGrid.prototype.closeEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.closeEdit();\n        }\n    };\n    /**\n     * Saves the cell that is currently edited. It does not save the value to the DataSource.\n     */\n    TreeGrid.prototype.saveCell = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.saveCell();\n        }\n    };\n    /**\n     * To update the specified cell by given value without changing into edited state.\n     * @param {number} rowIndex Defines the row index.\n     * @param {string} field Defines the column field.\n     * @param {string | number | boolean | Date} value - Defines the value to be changed.\n     */\n    TreeGrid.prototype.updateCell = function (rowIndex, field, value) {\n        if (this.grid.editModule) {\n            this.grid.editModule.updateCell(rowIndex, field, value);\n        }\n    };\n    /**\n     * To update the specified row by given values without changing into edited state.\n     * @param {number} index Defines the row index.\n     * @param {Object} data Defines the data object to be updated.\n     */\n    TreeGrid.prototype.updateRow = function (index, data) {\n        if (this.grid.editModule) {\n            var griddata = this.grid.getCurrentViewRecords()[index];\n            extend(griddata, data);\n            this.grid.editModule.updateRow(index, griddata);\n        }\n    };\n    /**\n     * Delete a record with Given options. If fieldName and data is not given then TreeGrid will delete the selected record.\n     * > `editSettings.allowDeleting` should be true.\n     * @param {string} fieldName - Defines the primary key field, 'Name of the column'.\n     * @param {Object} data - Defines the JSON data of the record to be deleted.\n     */\n    TreeGrid.prototype.deleteRecord = function (fieldName, data) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRecord(fieldName, data);\n        }\n    };\n    /**\n     * To edit any particular row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row to be edited.\n     */\n    TreeGrid.prototype.startEdit = function (row) {\n        if (this.grid.editModule) {\n            this.grid.editModule.startEdit(row);\n        }\n    };\n    /**\n     * To edit any particular cell using row index and cell index.\n     * @param {number} rowIndex - Defines row index to edit a particular cell.\n     * @param {string} field - Defines the field name of the column to perform cell edit.\n     */\n    TreeGrid.prototype.editCell = function (rowIndex, field) {\n        if (this.editModule) {\n            this.editModule.editCell(rowIndex, field);\n        }\n    };\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     */\n    TreeGrid.prototype.enableToolbarItems = function (items, isEnable) {\n        if (this.grid.toolbarModule) {\n            this.grid.toolbarModule.enableItems(items, isEnable);\n        }\n    };\n    /**\n     * If TreeGrid is in editable state, you can save a record by invoking endEdit.\n     */\n    TreeGrid.prototype.endEdit = function () {\n        if (this.grid.editModule) {\n            this.grid.editModule.endEdit();\n        }\n    };\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     * @param  {number} X - Defines the X axis.\n     * @param  {number} Y - Defines the Y axis.\n     * @return {void}\n     */\n    TreeGrid.prototype.openColumnChooser = function (x, y) {\n        if (this.columnChooserModule) {\n            this.columnChooserModule.openColumnChooser(x, y);\n        }\n    };\n    /**\n     * Delete any visible row by TR element.\n     * @param {HTMLTableRowElement} tr - Defines the table row element.\n     */\n    TreeGrid.prototype.deleteRow = function (tr) {\n        if (this.grid.editModule) {\n            this.grid.editModule.deleteRow(tr);\n        }\n    };\n    /**\n     * Get the names of the primary key columns of the TreeGrid.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getPrimaryKeyFieldNames = function () {\n        return this.grid.getPrimaryKeyFieldNames();\n    };\n    /**\n     * Updates particular cell value based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     * @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     * @param {string } field - Specifies the field name which you want to update.\n     * @param {string | number | boolean | Date} value - To update new value for the particular cell.\n     */\n    TreeGrid.prototype.setCellValue = function (key, field, value) {\n        this.grid.setCellValue(key, field, value);\n    };\n    /**\n     * Updates and refresh the particular row values based on the given primary key value.\n     * > Primary key column must be specified using `columns.isPrimaryKey` property.\n     *  @param {string| number} key - Specifies the PrimaryKey value of dataSource.\n     *  @param {Object} rowData - To update new data for the particular row.\n     */\n    TreeGrid.prototype.setRowData = function (key, rowData) {\n        var currentRecords = this.getCurrentViewRecords();\n        var primaryKey = this.grid.getPrimaryKeyFieldNames()[0];\n        var level = 0;\n        var record = {};\n        currentRecords.some(function (value, i, e) {\n            if (value[primaryKey] === key) {\n                record = value;\n                return true;\n            }\n            else {\n                return false;\n            }\n        });\n        level = record.level;\n        rowData.level = level;\n        rowData.index = record.index;\n        rowData.childRecords = record.childRecords;\n        rowData.taskData = record.taskData;\n        rowData.uniqueID = record.uniqueID;\n        rowData.parentItem = record.parentItem;\n        rowData.checkboxState = record.checkboxState;\n        rowData.hasChildRecords = record.hasChildRecords;\n        rowData.parentUniqueID = record.parentUniqueID;\n        rowData.expanded = record.expanded;\n        this.grid.setRowData(key, rowData);\n    };\n    /**\n     * Navigates to the specified target page.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    TreeGrid.prototype.goToPage = function (pageNo) {\n        if (this.grid.pagerModule) {\n            this.grid.pagerModule.goToPage(pageNo);\n        }\n    };\n    /**\n     * Defines the text of external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    TreeGrid.prototype.updateExternalMessage = function (message) {\n        if (this.pagerModule) {\n            this.grid.pagerModule.updateExternalMessage(message);\n        }\n    };\n    /**\n     * Gets a cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets a Column by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByField = function (field) {\n        if (isBlazor() && this.isServerRendered) {\n            return iterateArrayOrObject(this.grid.columns, function (item, index) {\n                if (item.field === field) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n        else {\n            return iterateArrayOrObject(this.columnModel, function (item, index) {\n                if (item.field === field) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n    };\n    /**\n     * Gets a column by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {Column}\n     */\n    TreeGrid.prototype.getColumnByUid = function (uid) {\n        if (isBlazor() && this.isServerRendered) {\n            return iterateArrayOrObject(this.grid.columns, function (item, index) {\n                if (item.uid === uid) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n        else {\n            return iterateArrayOrObject(this.columnModel, function (item, index) {\n                if (item.uid === uid) {\n                    return item;\n                }\n                return undefined;\n            })[0];\n        }\n    };\n    /**\n     * Gets the collection of column fields.\n     * @return {string[]}\n     */\n    TreeGrid.prototype.getColumnFieldNames = function () {\n        return this.grid.getColumnFieldNames();\n    };\n    /**\n     * Gets the footer div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContent = function () {\n        return this.grid.getFooterContent();\n    };\n    /**\n     * Gets the footer table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getFooterContentTable = function () {\n        return this.grid.getFooterContentTable();\n    };\n    /**\n     * Shows a column by its column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} showBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.showColumns = function (keys, showBy) {\n        this.grid.showColumns(keys, showBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Hides a column by column name.\n     * @param  {string|string[]} keys - Defines a single or collection of column names.\n     * @param  {string} hideBy - Defines the column key either as field name or header text.\n     * @return {void}\n     */\n    TreeGrid.prototype.hideColumns = function (keys, hideBy) {\n        this.grid.hideColumns(keys, hideBy);\n        this.updateColumnModel();\n    };\n    /**\n     * Gets a column header by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByField = function (field) {\n        return this.grid.getColumnHeaderByField(field);\n    };\n    /**\n     * Gets a column header by column index.\n     * @param  {number} index - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByIndex = function (index) {\n        return this.grid.getColumnHeaderByIndex(index);\n    };\n    /**\n     * Gets a column header by UID.\n     * @param  {string} field - Specifies the column uid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getColumnHeaderByUid = function (uid) {\n        return this.grid.getColumnHeaderByUid(uid);\n    };\n    /**\n     * Gets a column index by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByField = function (field) {\n        return this.grid.getColumnIndexByField(field);\n    };\n    /**\n     * Gets a column index by UID.\n     * @param  {string} uid - Specifies the column UID.\n     * @return {number}\n     */\n    TreeGrid.prototype.getColumnIndexByUid = function (uid) {\n        return this.grid.getColumnIndexByUid(uid);\n    };\n    /**\n     * Gets the columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getColumns = function (isRefresh) {\n        if (isBlazor() && this.isServerRendered) {\n            return this.grid.columns;\n        }\n        else {\n            this.updateColumnModel(this.grid.getColumns(isRefresh));\n            return this.columnModel;\n        }\n    };\n    TreeGrid.prototype.updateColumnModel = function (column) {\n        this.columnModel = [];\n        var stackedHeader = false;\n        var gridColumns = isNullOrUndefined(column) ? this.grid.getColumns() : column;\n        var gridColumn;\n        for (var i = 0; i < gridColumns.length; i++) {\n            gridColumn = {};\n            for (var _i = 0, _a = Object.keys(gridColumns[i]); _i < _a.length; _i++) {\n                var prop = _a[_i];\n                if (!isBlazor() || prop !== 'edit') {\n                    gridColumn[prop] = gridColumns[i][prop];\n                }\n            }\n            this.columnModel.push(new Column(gridColumn));\n        }\n        if (!isBlazor() || !this.isServerRendered) {\n            var merge = 'deepMerge';\n            this[merge] = ['columns']; // Workaround for blazor updateModel\n            if (this.grid.columns.length !== this.columnModel.length) {\n                stackedHeader = true;\n            }\n            if (!stackedHeader) {\n                this.setProperties({ columns: this.columnModel }, true);\n            }\n            this[merge] = undefined; // Workaround for blazor updateModel\n        }\n        return this.columnModel;\n    };\n    /**\n     * Gets the content div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContent = function () {\n        return this.grid.getContent();\n    };\n    TreeGrid.prototype.mergePersistTreeGridData = function () {\n        var persist1 = 'mergePersistGridData';\n        this.grid[persist1].apply(this);\n    };\n    TreeGrid.prototype.mergeColumns = function (storedColumn, columns) {\n        var persist2 = 'mergeColumns';\n        this.grid[persist2].apply(this, [storedColumn, columns]);\n    };\n    TreeGrid.prototype.updateTreeGridModel = function () {\n        this.setProperties({ filterSettings: getObject('properties', this.grid.filterSettings) }, true);\n        this.setProperties({ pageSettings: getObject('properties', this.grid.pageSettings) }, true);\n        this.setProperties({ searchSettings: getObject('properties', this.grid.searchSettings) }, true);\n        this.setProperties({ sortSettings: getObject('properties', this.grid.sortSettings) }, true);\n    };\n    /**\n     * Gets the content table of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getContentTable = function () {\n        return this.grid.getContentTable();\n    };\n    /**\n     * Gets all the TreeGrid's data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getDataRows = function () {\n        var dRows = [];\n        var rows = this.grid.getDataRows();\n        for (var i = 0, len = rows.length; i < len; i++) {\n            if (!rows[i].classList.contains('e-summaryrow')) {\n                dRows.push(rows[i]);\n            }\n        }\n        return dRows;\n    };\n    /**\n     * Get current visible data of TreeGrid.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCurrentViewRecords = function () {\n        return this.grid.currentViewData;\n    };\n    /**\n     * Gets the added, edited,and deleted data before bulk save to the DataSource in batch mode.\n     * @return {Object}\n     */\n    TreeGrid.prototype.getBatchChanges = function () {\n        return this.grid.editModule.getBatchChanges();\n    };\n    /**\n     * Gets the header div of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderContent = function () {\n        return this.grid.getHeaderContent();\n    };\n    /**\n     * Gets the header table element of the TreeGrid.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getHeaderTable = function () {\n        return this.grid.getHeaderTable();\n    };\n    /**\n     * Gets a row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getRowByIndex = function (index) {\n        return this.grid.getRowByIndex(index);\n    };\n    /**\n     * Get a row information based on cell\n     * @param {Element}\n     * @return RowInfo\n     */\n    TreeGrid.prototype.getRowInfo = function (target) {\n        return this.grid.getRowInfo(target);\n    };\n    /**\n     * Gets UID by column name.\n     * @param  {string} field - Specifies the column name.\n     * @return {string}\n     */\n    TreeGrid.prototype.getUidByColumnField = function (field) {\n        return this.grid.getUidByColumnField(field);\n    };\n    /**\n     * Gets the visible columns from the TreeGrid.\n     * @return {Column[]}\n     */\n    TreeGrid.prototype.getVisibleColumns = function () {\n        var cols = [];\n        for (var _i = 0, _a = this.columnModel; _i < _a.length; _i++) {\n            var col = _a[_i];\n            if (col.visible) {\n                cols.push(col);\n            }\n        }\n        return cols;\n    };\n    /**\n     * By default, TreeGrid shows the spinner for all its actions. You can use this method to show spinner at your needed time.\n     */\n    TreeGrid.prototype.showSpinner = function () {\n        showSpinner(this.element);\n    };\n    /**\n     * Manually shown spinner needs to hide by `hideSpinnner`.\n     */\n    TreeGrid.prototype.hideSpinner = function () {\n        hideSpinner(this.element);\n    };\n    /**\n     * Refreshes the TreeGrid header and content.\n     */\n    TreeGrid.prototype.refresh = function () {\n        this.grid.refresh();\n    };\n    /**\n     * Get the records of checked rows.\n     * @return {Object[]}\n     * @isGenericType true\n     */\n    TreeGrid.prototype.getCheckedRecords = function () {\n        return this.selectionModule.getCheckedrecords();\n    };\n    /**\n     * Get the indexes of checked rows.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getCheckedRowIndexes = function () {\n        return this.selectionModule.getCheckedRowIndexes();\n    };\n    /**\n     * Checked the checkboxes using rowIndexes.\n     */\n    TreeGrid.prototype.selectCheckboxes = function (indexes) {\n        this.selectionModule.selectCheckboxes(indexes);\n    };\n    /**\n     * Refreshes the TreeGrid column changes.\n     */\n    TreeGrid.prototype.refreshColumns = function (refreshUI) {\n        if (isNullOrUndefined(refreshUI) || refreshUI) {\n            this.grid.columns = this.getGridColumns(this.columns);\n            this.grid.refreshColumns();\n        }\n        else {\n            this.grid.setProperties({ columns: this.getGridColumns(this.columns) }, true);\n        }\n    };\n    /**\n     * Refreshes the TreeGrid header.\n     */\n    TreeGrid.prototype.refreshHeader = function () {\n        this.grid.refreshHeader();\n    };\n    /**\n     * Expands or collapse child records\n     * @return {string}\n     * @hidden\n     */\n    TreeGrid.prototype.expandCollapseRequest = function (target) {\n        if (this.editSettings.mode === 'Batch') {\n            var obj = 'dialogObj';\n            var showDialog = 'showDialog';\n            if (this.getBatchChanges()[this.changedRecords].length ||\n                this.getBatchChanges()[this.deletedRecords].length || this.getBatchChanges()[this.addedRecords].length) {\n                var dialogObj = this.grid.editModule[obj];\n                this.grid.editModule[showDialog]('CancelEdit', dialogObj);\n                this.targetElement = target;\n                return;\n            }\n        }\n        if (this.rowTemplate) {\n            var rowInfo = target.closest('.e-treerowcell').parentElement;\n            var record = this.getCurrentViewRecords()[rowInfo.rowIndex];\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo, record);\n            }\n            else {\n                this.expandRow(rowInfo, record);\n            }\n        }\n        else {\n            var rowInfo = this.grid.getRowInfo(target);\n            var record = rowInfo.rowData;\n            if (target.classList.contains('e-treegridexpand')) {\n                this.collapseRow(rowInfo.row, record);\n            }\n            else {\n                this.expandRow(rowInfo.row, record);\n            }\n        }\n    };\n    /**\n     * Expands child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.expanding, args, function (expandingArgs) {\n            if (!expandingArgs.cancel) {\n                _this.expandCollapse('expand', row, record);\n                if (!(isRemoteData(_this) && !isOffline(_this)) && !isCountRequired(_this)) {\n                    var collapseArgs = { data: record, row: row };\n                    _this.trigger(events.expanded, collapseArgs);\n                }\n            }\n        });\n    };\n    TreeGrid.prototype.getCollapseExpandRecords = function (row, record) {\n        if (this.allowPaging && this.pageSettings.pageSizeMode === 'All' && this.isExpandAll && isNullOrUndefined(record) &&\n            !isRemoteData(this)) {\n            record = this.flatData.filter(function (e) {\n                return e.hasChildRecords;\n            });\n        }\n        else if (isNullOrUndefined(record)) {\n            record = this.grid.getCurrentViewRecords()[row.rowIndex];\n        }\n        return record;\n    };\n    /**\n     * Collapses child rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseRow = function (row, record) {\n        var _this = this;\n        record = this.getCollapseExpandRecords(row, record);\n        var args = { data: record, row: row, cancel: false };\n        this.trigger(events.collapsing, args, function (collapsingArgs) {\n            if (!collapsingArgs.cancel) {\n                _this.expandCollapse('collapse', row, record);\n                var collapseArgs = { data: record, row: row };\n                if (!isRemoteData(_this)) {\n                    _this.trigger(events.collapsed, collapseArgs);\n                }\n            }\n        });\n    };\n    /**\n     * Expands the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var rec = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = true;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.expandRow(null, rec);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var row = getObject('rows', rec);\n            var record = getObject('records', rec);\n            for (var i = 0; i < record.length; i++) {\n                this.expandRow(row[i], record[i]);\n            }\n        }\n    };\n    TreeGrid.prototype.getRecordDetails = function (level) {\n        var rows = this.getRows().filter(function (e) {\n            return (e.className.indexOf('level' + level) !== -1\n                && (e.querySelector('.e-treegridcollapse') || e.querySelector('.e-treegridexpand')));\n        });\n        var records = this.getCurrentViewRecords().filter(function (e) { return e.level === level && e.hasChildRecords; });\n        var obj = { records: records, rows: rows };\n        return obj;\n    };\n    /**\n     * Collapses the records at specific hierarchical level\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAtLevel = function (level) {\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            var record = this.grid.dataSource.filter(function (e) {\n                if (e.hasChildRecords && e.level === level) {\n                    e.expanded = false;\n                }\n                return e.hasChildRecords && e.level === level;\n            });\n            this.collapseRow(null, record);\n        }\n        else {\n            var rec = this.getRecordDetails(level);\n            var rows = getObject('rows', rec);\n            var records = getObject('records', rec);\n            for (var i = 0; i < records.length; i++) {\n                this.collapseRow(rows[i], records[i]);\n            }\n        }\n    };\n    /**\n     * Expands All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.expandAll = function () {\n        this.expandCollapseAll('expand');\n    };\n    /**\n     * Collapses All the rows\n     * @return {void}\n     */\n    TreeGrid.prototype.collapseAll = function () {\n        this.expandCollapseAll('collapse');\n    };\n    TreeGrid.prototype.expandCollapseAll = function (action) {\n        var rows = this.getRows().filter(function (e) {\n            return e.querySelector('.e-treegrid' + (action === 'expand' ? 'collapse' : 'expand'));\n        });\n        this.isExpandAll = true;\n        this.isCollapseAll = true;\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)) {\n            this.flatData.filter(function (e) {\n                if (e.hasChildRecords) {\n                    e.expanded = action === 'collapse' ? false : true;\n                }\n            });\n            if (rows.length) {\n                action === 'collapse' ? this.collapseRow(rows[0]) : this.expandRow(rows[0]);\n            }\n            else {\n                var isExpandCollapseall = this.enableCollapseAll;\n                this.setProperties({ enableCollapseAll: true }, true);\n                this.grid.pagerModule.goToPage(1);\n                this.setProperties({ enableCollapseAll: isExpandCollapseall }, true);\n            }\n        }\n        else {\n            for (var i = 0; i < rows.length; i++) {\n                action === 'collapse' ? this.collapseRow(rows[i]) : this.expandRow(rows[i]);\n            }\n        }\n        this.isExpandAll = false;\n        this.isCollapseAll = false;\n    };\n    TreeGrid.prototype.expandCollapse = function (action, row, record, isChild) {\n        var expandingArgs = { row: row, data: record, childData: [], requestType: action };\n        if (!isRemoteData(this) && action === 'expand' && this.isSelfReference) {\n            this.updateChildOnDemand(expandingArgs);\n        }\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            gridRows = [].slice.call(rows);\n        }\n        var rowIndex;\n        if (isNullOrUndefined(row)) {\n            rowIndex = this.getCurrentViewRecords().indexOf(record);\n            row = gridRows[rowIndex];\n        }\n        else {\n            rowIndex = +row.getAttribute('aria-rowindex');\n        }\n        if (!isNullOrUndefined(row)) {\n            row.setAttribute('aria-expanded', action === 'expand' ? 'true' : 'false');\n        }\n        if (((this.allowPaging && this.pageSettings.pageSizeMode === 'All') || this.enableVirtualization) && !isRemoteData(this)\n            && !isCountRequired(this)) {\n            this.notify(events.localPagedExpandCollapse, { action: action, row: row, record: record });\n        }\n        else {\n            var displayAction = void 0;\n            if (action === 'expand') {\n                displayAction = 'table-row';\n                if (!isChild) {\n                    record.expanded = true;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridcollapse')[0];\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                addClass([targetEle], 'e-treegridexpand');\n                removeClass([targetEle], 'e-treegridcollapse');\n            }\n            else {\n                displayAction = 'none';\n                if (!isChild) {\n                    record.expanded = false;\n                    this.uniqueIDCollection[record.uniqueID].expanded = record.expanded;\n                }\n                var targetEle = row.getElementsByClassName('e-treegridexpand')[0];\n                if (isNullOrUndefined(targetEle)) {\n                    return;\n                }\n                addClass([targetEle], 'e-treegridcollapse');\n                removeClass([targetEle], 'e-treegridexpand');\n            }\n            var detailrows = gridRows.filter(function (r) {\n                return r.classList.contains('e-griddetailrowindex' + record.index + 'level' + (record.level + 1));\n            });\n            if (isRemoteData(this) && !isOffline(this)) {\n                this.remoteExpand(action, row, record, isChild);\n            }\n            else {\n                if (!isCountRequired(this) || action === 'collapse') {\n                    this.localExpand(action, row, record, isChild);\n                }\n            }\n            this.notify('rowExpandCollapse', { detailrows: detailrows, action: displayAction, record: record, row: row });\n            this.updateAltRow(gridRows);\n        }\n    };\n    TreeGrid.prototype.updateChildOnDemand = function (expandingArgs) {\n        var _this = this;\n        var deff = new Deferred();\n        var childDataBind = 'childDataBind';\n        expandingArgs[childDataBind] = deff.resolve;\n        var record = expandingArgs.data;\n        this.trigger(events.dataStateChange, expandingArgs);\n        deff.promise.then(function (e) {\n            if (expandingArgs.childData.length) {\n                var currentData = (_this.flatData);\n                var index = 0;\n                for (var i = 0; i < currentData.length; i++) {\n                    if (currentData[i].taskData === record.taskData) {\n                        index = i;\n                        break;\n                    }\n                }\n                var data_1 = getValue('result', _this.dataSource);\n                var childData = extendArray(expandingArgs.childData);\n                var length_1 = record[_this.childMapping] ?\n                    record[_this.childMapping].length > childData.length ? record[_this.childMapping].length : childData.length : childData.length;\n                for (var i = 0; i < length_1; i++) {\n                    if (record[_this.childMapping]) {\n                        data_1.filter(function (e, i) {\n                            if (e[_this.parentIdMapping] === record[_this.idMapping]) {\n                                data_1.splice(i, 1);\n                            }\n                        });\n                    }\n                    if (childData[i]) {\n                        childData[i].level = record.level + 1;\n                        childData[i].index = Math.ceil(Math.random() * 1000);\n                        childData[i].parentItem = extend({}, record);\n                        childData[i].taskData = extend({}, childData[i]);\n                        delete childData[i].parentItem.childRecords;\n                        delete childData[i].taskData.parentItem;\n                        childData[i].parentUniqueID = record.uniqueID;\n                        childData[i].uniqueID = getUid(_this.element.id + '_data_');\n                        setValue('uniqueIDCollection.' + childData[i].uniqueID, childData[i], _this);\n                        if (!isNullOrUndefined(childData[i][_this.childMapping]) ||\n                            (childData[i][_this.hasChildMapping] && isCountRequired(_this))) {\n                            childData[i].hasChildRecords = true;\n                        }\n                        currentData.splice(index + 1 + i, record[_this.childMapping] && record[_this.childMapping][i] ? 1 : 0, childData[i]);\n                    }\n                    else {\n                        currentData.splice(index + 1 + i, 1);\n                    }\n                }\n                currentData[index][_this.childMapping] = childData;\n                currentData[index].childRecords = childData;\n                currentData[index].expanded = true;\n                setValue('uniqueIDCollection.' + currentData[index].uniqueID, currentData[index], _this);\n                for (var j = 0; j < expandingArgs.childData.length; j++) {\n                    data_1.push(expandingArgs.childData[j]);\n                }\n            }\n            _this.isExpandRefresh = true;\n            _this.refresh();\n            _this.trigger(events.expanded, expandingArgs);\n        });\n    };\n    TreeGrid.prototype.remoteExpand = function (action, row, record, isChild) {\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_1 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_1);\n        }\n        var args = { data: record, row: row };\n        var rows = [];\n        rows = gridRows.filter(function (r) {\n            return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n        });\n        if (action === 'expand') {\n            this.notify(events.remoteExpand, { record: record, rows: rows, parentRow: row });\n            var args_1 = { row: row, data: record };\n            if (rows.length > 0) {\n                this.trigger(events.expanded, args_1);\n            }\n        }\n        else {\n            this.collapseRemoteChild({ record: record, rows: rows });\n            this.trigger(events.collapsed, args);\n        }\n    };\n    TreeGrid.prototype.localExpand = function (action, row, record, isChild) {\n        var childRecords = this.getCurrentViewRecords().filter(function (e) {\n            return e.parentUniqueID === record.uniqueID;\n        });\n        var movableRows;\n        var gridRows = this.getRows();\n        if (this.rowTemplate) {\n            var rows_2 = this.getContentTable().rows;\n            gridRows = [].slice.call(rows_2);\n        }\n        var displayAction = (action === 'expand') ? 'table-row' : 'none';\n        var index = childRecords[0].parentItem.index;\n        var rows = gridRows.filter(function (r) {\n            return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n        });\n        if (this.frozenRows || this.frozenColumns || this.getFrozenColumns()) {\n            movableRows = this.getMovableRows().filter(function (r) {\n                return r.querySelector('.e-gridrowindex' + record.index + 'level' + (record.level + 1));\n            });\n        }\n        for (var i = 0; i < rows.length; i++) {\n            rows[i].style.display = displayAction;\n            if (!isNullOrUndefined(movableRows)) {\n                movableRows[i].style.display = displayAction;\n            }\n            this.notify('childRowExpand', { row: rows[i] });\n            if (!isNullOrUndefined(childRecords[i].childRecords) && (action !== 'expand' ||\n                isNullOrUndefined(childRecords[i].expanded) || childRecords[i].expanded)) {\n                this.expandCollapse(action, rows[i], childRecords[i], true);\n                if (this.frozenColumns <= this.treeColumnIndex && !isNullOrUndefined(movableRows)) {\n                    this.expandCollapse(action, movableRows[i], childRecords[i], true);\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.updateAltRow = function (rows) {\n        if (this.enableAltRow && !this.rowTemplate) {\n            var visibleRowCount = 0;\n            for (var i = 0; rows && i < rows.length; i++) {\n                var gridRow = rows[i];\n                if (gridRow.style.display !== 'none') {\n                    if (gridRow.classList.contains('e-altrow')) {\n                        removeClass([gridRow], 'e-altrow');\n                    }\n                    if (visibleRowCount % 2 !== 0 && !gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        addClass([gridRow], 'e-altrow');\n                    }\n                    if (!gridRow.classList.contains('e-summaryrow') && !gridRow.classList.contains('e-detailrow')) {\n                        visibleRowCount++;\n                    }\n                }\n            }\n        }\n    };\n    TreeGrid.prototype.treeColumnRowTemplate = function (args) {\n        if (this.rowTemplate) {\n            var rows = this.getContentTable().rows;\n            rows = [].slice.call(rows);\n            for (var i = 0; i < rows.length; i++) {\n                var rcell = this.grid.getContentTable().rows[i].cells[this.treeColumnIndex];\n                var row = rows[i];\n                var rowData = this.grid.getRowsObject()[i].data;\n                var arg = { data: rowData, row: row, cell: rcell, column: this.getColumns()[this.treeColumnIndex] };\n                this.renderModule.cellRender(arg);\n            }\n        }\n    };\n    TreeGrid.prototype.collapseRemoteChild = function (rowDetails, isChild) {\n        if (!isChild) {\n            rowDetails.record.expanded = false;\n        }\n        var rows = rowDetails.rows;\n        var childRecord;\n        for (var i = 0; i < rows.length; i++) {\n            if (isBlazor() && this.isServerRendered) {\n                removeClass([rows[i]], 'e-treerowexpanded');\n                addClass([rows[i]], 'e-treerowcollapsed');\n            }\n            else {\n                rows[i].style.display = 'none';\n            }\n            var collapsingTd = rows[i].querySelector('.e-detailrowexpand');\n            if (!isNullOrUndefined(collapsingTd)) {\n                this.grid.detailRowModule.collapse(collapsingTd);\n            }\n            if (rows[i].querySelector('.e-treecolumn-container .e-treegridexpand')) {\n                var expandElement = rows[i].querySelector('.e-treecolumn-container .e-treegridexpand');\n                childRecord = this.rowTemplate ? this.grid.getCurrentViewRecords()[rows[i].rowIndex] :\n                    this.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n                if (!isNullOrUndefined(expandElement) && childRecord.expanded) {\n                    removeClass([expandElement], 'e-treegridexpand');\n                    addClass([expandElement], 'e-treegridcollapse');\n                }\n                var cRow = [];\n                var eRows = this.getRows();\n                for (var i_1 = 0; i_1 < eRows.length; i_1++) {\n                    if (eRows[i_1].querySelector('.e-gridrowindex' + childRecord.index + 'level' + (childRecord.level + 1))) {\n                        cRow.push(eRows[i_1]);\n                    }\n                }\n                if (cRow.length && childRecord.expanded) {\n                    this.collapseRemoteChild({ record: childRecord, rows: cRow }, true);\n                }\n            }\n        }\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.addListener = function () {\n        this.on('updateResults', this.updateResultModel, this);\n        this.grid.on('initial-end', this.afterGridRender, this);\n    };\n    TreeGrid.prototype.updateResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.removeListener = function () {\n        if (this.isDestroyed) {\n            return;\n        }\n        this.off('updateResults', this.updateResultModel);\n        this.grid.off('initial-end', this.afterGridRender);\n    };\n    /**\n     * Filters TreeGrid row by column name with the given options.\n     * @param  {string} fieldName - Defines the field name of the column.\n     * @param  {string} filterOperator - Defines the operator to filter records.\n     * @param  {string | number | Date | boolean} filterValue - Defines the value used to filter records.\n     * @param  {string} predicate - Defines the relationship between one filter query and another by using AND or OR predicate.\n     * @param  {boolean} matchCase - If match case is set to true, TreeGrid filters the records with exact match. if false, it filters case\n     * insensitive records (uppercase and lowercase letters treated the same).\n     * @param  {boolean} ignoreAccent - If ignoreAccent set to true,\n     * then filter ignores the diacritic characters or accents while filtering.\n     * @param  {string} actualFilterValue - Defines the actual filter value for the filter column.\n     * @param  {string} actualOperator - Defines the actual filter operator for the filter column.\n     * @return {void}\n     */\n    TreeGrid.prototype.filterByColumn = function (fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator) {\n        this.grid.filterByColumn(fieldName, filterOperator, filterValue, predicate, matchCase, ignoreAccent, actualFilterValue, actualOperator);\n    };\n    /**\n     * Clears all the filtered rows of the TreeGrid.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearFiltering = function () {\n        this.grid.clearFiltering();\n    };\n    /**\n     * Removes filtered column by field name.\n     * @param  {string} field - Defines column field name to remove filter.\n     * @param  {boolean} isClearFilterBar -  Specifies whether the filter bar value needs to be cleared.\n     * @return {void}\n     * @hidden\n     */\n    TreeGrid.prototype.removeFilteredColsByField = function (field, isClearFilterBar) {\n        this.grid.removeFilteredColsByField(field, isClearFilterBar);\n    };\n    /**\n     * Selects a row by given index.\n     * @param  {number} index - Defines the row index.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRow = function (index, isToggle) {\n        this.grid.selectRow(index, isToggle);\n    };\n    /**\n     * Selects a collection of rows by indexes.\n     * @param  {number[]} rowIndexes - Specifies the row indexes.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectRows = function (rowIndexes) {\n        this.grid.selectRows(rowIndexes);\n    };\n    /**\n     * Deselects the current selected rows and cells.\n     * @return {void}\n     */\n    TreeGrid.prototype.clearSelection = function () {\n        this.grid.clearSelection();\n    };\n    /**\n     * Copy the selected rows or cells data into clipboard.\n     * @param {boolean} withHeader - Specifies whether the column header text needs to be copied along with rows or cells.\n     */\n    TreeGrid.prototype.copy = function (withHeader) {\n        this.clipboardModule.copy(withHeader);\n    };\n    /**\n     * Paste data from clipboard to selected cells.\n     * @param {boolean} data - Specifies the date for paste.\n     * @param {boolean} rowIndex - Specifies the row index.\n     * @param {boolean} colIndex - Specifies the column index.\n     */\n    TreeGrid.prototype.paste = function (data, rowIndex, colIndex) {\n        this.clipboardModule.paste(data, rowIndex, colIndex);\n    };\n    /**\n     * Selects a cell by the given index.\n     * @param  {IIndex} cellIndex - Defines the row and column indexes.\n     * @param  {boolean} isToggle - If set to true, then it toggles the selection.\n     * @return {void}\n     */\n    TreeGrid.prototype.selectCell = function (cellIndex, isToggle) {\n        this.grid.selectCell(cellIndex, isToggle);\n    };\n    /**\n     * Gets the collection of selected rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getSelectedRows = function () {\n        return this.grid.getSelectedRows();\n    };\n    /**\n     * Gets a movable table cell by row and column index.\n     * @param  {number} rowIndex - Specifies the row index.\n     * @param  {number} columnIndex - Specifies the column index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getMovableCellFromIndex = function (rowIndex, columnIndex) {\n        return this.grid.getMovableCellFromIndex(rowIndex, columnIndex);\n    };\n    /**\n     * Gets all the TreeGrid's movable table data rows.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getMovableDataRows = function () {\n        return this.grid.getMovableDataRows();\n    };\n    /**\n     * Gets a movable tables row by index.\n     * @param  {number} index - Specifies the row index.\n     * @return {Element}\n     */\n    TreeGrid.prototype.getMovableRowByIndex = function (index) {\n        return this.grid.getMovableRowByIndex(index);\n    };\n    /**\n     * Gets the TreeGrid's movable content rows from frozen treegrid.\n     * @return {Element[]}\n     */\n    TreeGrid.prototype.getMovableRows = function () {\n        return this.grid.getMovableRows();\n    };\n    /**\n     * @hidden\n     */\n    TreeGrid.prototype.getFrozenColumns = function () {\n        return this.getFrozenCount(this.columns, 0);\n    };\n    TreeGrid.prototype.getFrozenCount = function (cols, cnt) {\n        for (var i = 0, len = cols.length; i < len; i++) {\n            if (cols[i].columns) {\n                cnt = this.getFrozenCount(cols[i].columns, cnt);\n            }\n            else {\n                if (cols[i].isFrozen) {\n                    cnt++;\n                }\n            }\n        }\n        return cnt;\n    };\n    /**\n     * Gets the collection of selected row indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowIndexes = function () {\n        return this.grid.getSelectedRowIndexes();\n    };\n    /**\n     * Gets the collection of selected row and cell indexes.\n     * @return {number[]}\n     */\n    TreeGrid.prototype.getSelectedRowCellIndexes = function () {\n        return this.grid.getSelectedRowCellIndexes();\n    };\n    /**\n     * Gets the collection of selected records.\n     * @isGenericType true\n     * @return {Object[]}\n     */\n    TreeGrid.prototype.getSelectedRecords = function () {\n        return this.grid.getSelectedRecords();\n    };\n    /**\n     * Gets the data module.\n     * @return {Data}\n     */\n    TreeGrid.prototype.getDataModule = function () {\n        return { baseModule: this.grid.getDataModule(), treeModule: this.dataModule };\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     */\n    TreeGrid.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        this.rowDragAndDropModule.reorderRows(fromIndexes, toIndex, position);\n    };\n    var TreeGrid_1;\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenRows\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"frozenColumns\", void 0);\n    __decorate([\n        Property('Ellipsis')\n    ], TreeGrid.prototype, \"clipMode\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"columns\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"childMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"hasChildMapping\", void 0);\n    __decorate([\n        Property(0)\n    ], TreeGrid.prototype, \"treeColumnIndex\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"idMapping\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"parentIdMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableCollapseAll\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"expandStateMapping\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowRowDragAndDrop\", void 0);\n    __decorate([\n        Property([])\n    ], TreeGrid.prototype, \"dataSource\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"query\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"cloneQuery\", void 0);\n    __decorate([\n        Property('AllPages')\n    ], TreeGrid.prototype, \"printMode\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPaging\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"loadChildOnDemand\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowTextWrap\", void 0);\n    __decorate([\n        Complex({}, TextWrapSettings)\n    ], TreeGrid.prototype, \"textWrapSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowReordering\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowResizing\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"autoCheckHierarchy\", void 0);\n    __decorate([\n        Complex({}, PageSettings)\n    ], TreeGrid.prototype, \"pageSettings\", void 0);\n    __decorate([\n        Complex({}, RowDropSettings)\n    ], TreeGrid.prototype, \"rowDropSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"pagerTemplate\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnMenu\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"showColumnChooser\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowSorting\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowMultiSorting\", void 0);\n    __decorate([\n        Complex({}, SortSettings)\n    ], TreeGrid.prototype, \"sortSettings\", void 0);\n    __decorate([\n        Collection([], AggregateRow)\n    ], TreeGrid.prototype, \"aggregates\", void 0);\n    __decorate([\n        Complex({}, EditSettings)\n    ], TreeGrid.prototype, \"editSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowFiltering\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"detailTemplate\", void 0);\n    __decorate([\n        Complex({}, FilterSettings)\n    ], TreeGrid.prototype, \"filterSettings\", void 0);\n    __decorate([\n        Complex({}, SearchSettings)\n    ], TreeGrid.prototype, \"searchSettings\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbar\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"toolbarTemplate\", void 0);\n    __decorate([\n        Property('Default')\n    ], TreeGrid.prototype, \"gridLines\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"contextMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"columnMenuItems\", void 0);\n    __decorate([\n        Property()\n    ], TreeGrid.prototype, \"rowTemplate\", void 0);\n    __decorate([\n        Property('Parent')\n    ], TreeGrid.prototype, \"copyHierarchyMode\", void 0);\n    __decorate([\n        Property(null)\n    ], TreeGrid.prototype, \"rowHeight\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"enableAltRow\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowKeyboard\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableHover\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableAutoFill\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"height\", void 0);\n    __decorate([\n        Property('auto')\n    ], TreeGrid.prototype, \"width\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"enableVirtualization\", void 0);\n    __decorate([\n        Property('All')\n    ], TreeGrid.prototype, \"columnQueryMode\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"created\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"load\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanding\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"expanded\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"collapsed\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSaved\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionBegin\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beginEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"batchCancel\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchAdd\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchDelete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeBatchSave\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellEdit\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"actionFailure\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataSourceChanged\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"dataStateChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"recordDoubleClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"detailDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"queryCellInfo\", void 0);\n    __decorate([\n        Property(true)\n    ], TreeGrid.prototype, \"allowSelection\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"headerCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellSelected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselecting\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"cellDeselected\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizing\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"resizeStop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"columnDrop\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"checkboxChange\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"printComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePrint\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"toolbarClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeDataBound\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuOpen\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"contextMenuClick\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeCopy\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePaste\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrag\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStart\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDragStartHelper\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"rowDrop\", void 0);\n    __decorate([\n        Property(-1)\n    ], TreeGrid.prototype, \"selectedRowIndex\", void 0);\n    __decorate([\n        Complex({}, SelectionSettings)\n    ], TreeGrid.prototype, \"selectionSettings\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowExcelExport\", void 0);\n    __decorate([\n        Property(false)\n    ], TreeGrid.prototype, \"allowPdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelHeaderQueryCellInfo\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforeExcelExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"excelExportComplete\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"beforePdfExport\", void 0);\n    __decorate([\n        Event()\n    ], TreeGrid.prototype, \"pdfExportComplete\", void 0);\n    TreeGrid = TreeGrid_1 = __decorate([\n        NotifyPropertyChanges\n    ], TreeGrid);\n    return TreeGrid;\n}(Component));\nexport { TreeGrid };\n","import { getObject, Grid, Reorder as GridReorder } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Reorder module\n * @hidden\n */\nvar Reorder = /** @class */ (function () {\n    /**\n     * Constructor for Reorder module\n     */\n    function Reorder(parent, treeColumn) {\n        Grid.Inject(GridReorder);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Reorder.prototype.getModuleName = function () {\n        return 'reorder';\n    };\n    /**\n     * @hidden\n     */\n    Reorder.prototype.addEventListener = function () {\n        this.parent.on('getColumnIndex', this.getTreeColumn, this);\n    };\n    Reorder.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('getColumnIndex', this.getTreeColumn);\n    };\n    /**\n     * To destroy the Reorder\n     * @return {void}\n     * @hidden\n     */\n    Reorder.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    Reorder.prototype.getTreeColumn = function () {\n        var columnModel = 'columnModel';\n        var treeColumn = this.parent[columnModel][this.parent.treeColumnIndex];\n        var treeIndex;\n        var updatedCols = this.parent.getColumns();\n        for (var f = 0; f < updatedCols.length; f++) {\n            var treeColumnfield = getObject('field', treeColumn);\n            var parentColumnfield = getObject('field', updatedCols[f]);\n            if (treeColumnfield === parentColumnfield) {\n                treeIndex = f;\n                break;\n            }\n        }\n        this.parent.setProperties({ treeColumnIndex: treeIndex }, true);\n    };\n    return Reorder;\n}());\nexport { Reorder };\n","import { Grid, Resize as GridResize } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid Resize module\n * @hidden\n */\nvar Resize = /** @class */ (function () {\n    /**\n     * Constructor for Resize module\n     */\n    function Resize(parent) {\n        Grid.Inject(GridResize);\n        this.parent = parent;\n    }\n    /**\n     * Resize by field names.\n     * @param  {string|string[]} fName - Defines the field name.\n     * @return {void}\n     */\n    Resize.prototype.autoFitColumns = function (fName) {\n        this.parent.grid.autoFitColumns(fName);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Resize.prototype.getModuleName = function () {\n        return 'resize';\n    };\n    /**\n     * Destroys the Resize.\n     * @method destroy\n     * @return {void}\n     */\n    Resize.prototype.destroy = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.grid.resizeModule.destroy();\n    };\n    return Resize;\n}());\nexport { Resize };\n","import { Grid, RowDD as GridDragDrop, parentsUntil } from '@syncfusion/ej2-grids';\nimport { getObject, Scroll } from '@syncfusion/ej2-grids';\nimport { closest, isNullOrUndefined, classList, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport * as events from '../base/constant';\nimport { editAction } from './crud-actions';\nimport { getParentData, findChildrenRecords, isRemoteData, isOffline, isCountRequired } from '../utils';\n/**\n * TreeGrid RowDragAndDrop module\n * @hidden\n */\nvar RowDD = /** @class */ (function () {\n    /**\n     *\n     * Constructor for render module\n     */\n    function RowDD(parent) {\n        /** @hidden */\n        this.canDrop = true;\n        /** @hidden */\n        this.isDraggedWithChild = false;\n        /** @hidden */\n        this.isaddtoBottom = false;\n        Grid.Inject(GridDragDrop);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    RowDD.prototype.getChildrecordsByParentID = function (id) {\n        var index;\n        var treeGridDataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            treeGridDataSource = this.parent.grid.dataSource.dataSource.json;\n        }\n        else {\n            treeGridDataSource = this.parent.grid.dataSource;\n        }\n        var record = treeGridDataSource.filter(function (e) {\n            return e.uniqueID === id;\n        });\n        return record;\n    };\n    /**\n     * @hidden\n     */\n    RowDD.prototype.addEventListener = function () {\n        this.parent.on(events.rowdraging, this.Rowdraging, this);\n        this.parent.on(events.rowDropped, this.rowDropped, this);\n        this.parent.on(events.rowsAdd, this.rowsAdded, this);\n        this.parent.on(events.rowsRemove, this.rowsRemoved, this);\n    };\n    /**\n     * Reorder the rows based on given indexes and position\n     */\n    RowDD.prototype.reorderRows = function (fromIndexes, toIndex, position) {\n        var tObj = this.parent;\n        if (fromIndexes[0] !== toIndex && position === 'above' || 'below' || 'child') {\n            if (position === 'above') {\n                this.dropPosition = 'topSegment';\n            }\n            if (position === 'below') {\n                this.dropPosition = 'bottomSegment';\n            }\n            if (position === 'child') {\n                this.dropPosition = 'middleSegment';\n            }\n            var data = [];\n            for (var i = 0; i < fromIndexes.length; i++) {\n                data[i] = this.parent.getCurrentViewRecords()[fromIndexes[i]];\n            }\n            var isByMethod = true;\n            var args = {\n                data: data,\n                dropIndex: toIndex\n            };\n            if (!isCountRequired(this.parent)) {\n                this.dropRows(args, isByMethod);\n            }\n            //this.refreshGridDataSource();\n            if (tObj.isLocalData) {\n                tObj.flatData = this.orderToIndex(tObj.flatData);\n            }\n            this.parent.refresh();\n        }\n        else {\n            return;\n        }\n    };\n    RowDD.prototype.orderToIndex = function (currentData) {\n        var _loop_1 = function (i) {\n            currentData[i].index = i;\n            if (!isNullOrUndefined(currentData[i].parentItem)) {\n                var updatedParent = currentData.filter(function (data) {\n                    return data.uniqueID === currentData[i].parentUniqueID;\n                })[0];\n                currentData[i].parentItem.index = updatedParent.index;\n            }\n        };\n        for (var i = 0; i < currentData.length; i++) {\n            _loop_1(i);\n        }\n        return currentData;\n    };\n    RowDD.prototype.rowsAdded = function (e) {\n        var draggedRecord;\n        var dragRecords = e.records;\n        for (var i = e.records.length - 1; i > -1; i--) {\n            draggedRecord = dragRecords[i];\n            if (draggedRecord.parentUniqueID) {\n                var record = dragRecords.filter(function (data) {\n                    return data.uniqueID === draggedRecord.parentUniqueID;\n                });\n                if (record.length) {\n                    var index = record[0].childRecords.indexOf(draggedRecord);\n                    var parentRecord = record[0];\n                    if (index !== -1) {\n                        parentRecord.childRecords.splice(index, 1);\n                        if (!parentRecord.childRecords.length) {\n                            parentRecord.hasChildRecords = false;\n                            parentRecord.hasFilteredChildRecords = false;\n                        }\n                        this.isDraggedWithChild = true;\n                    }\n                }\n            }\n        }\n        if (isNullOrUndefined(this.parent.dataSource) || !this.parent.dataSource.length) {\n            var tObj = this.parent;\n            var draggedRecord_1;\n            var dragRecords_1 = e.records;\n            var dragLength = e.records.length;\n            for (var i = dragLength - 1; i > -1; i--) {\n                draggedRecord_1 = dragRecords_1[i];\n                var recordIndex1 = 0;\n                if (!draggedRecord_1.taskData.hasOwnProperty(tObj.childMapping)) {\n                    draggedRecord_1.taskData[tObj.childMapping] = [];\n                }\n                if (isNullOrUndefined(tObj.dataSource)) {\n                    tObj.dataSource = [];\n                }\n                tObj.dataSource.splice(recordIndex1, 0, draggedRecord_1.taskData);\n                tObj.setProperties({ dataSource: tObj.dataSource }, false);\n            }\n        }\n        else {\n            for (var i = 0; i < dragRecords.length; i++) {\n                setValue('uniqueIDCollection.' + dragRecords[i].uniqueID, dragRecords[i], this.parent);\n            }\n            var args = { data: e.records, dropIndex: e.toIndex };\n            if (this.parent.dataSource instanceof DataManager) {\n                this.treeGridData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                this.treeGridData = this.parent.grid.dataSource;\n            }\n            this.dropRows(args);\n        }\n    };\n    RowDD.prototype.rowsRemoved = function (e) {\n        for (var i = 0; i < e.records.length; i++) {\n            this.draggedRecord = e.records[i];\n            if (this.draggedRecord.hasChildRecords || this.draggedRecord.parentItem &&\n                this.parent.grid.dataSource.\n                    indexOf(this.getChildrecordsByParentID(this.draggedRecord.parentUniqueID)[0]) !== -1 ||\n                this.draggedRecord.level === 0) {\n                this.deleteDragRow();\n            }\n        }\n    };\n    RowDD.prototype.refreshGridDataSource = function () {\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var proxy = this.parent;\n        var tempDataSource;\n        var idx;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            tempDataSource = proxy.dataSource.dataSource.json;\n        }\n        else {\n            tempDataSource = proxy.dataSource;\n        }\n        if (tempDataSource && (!isNullOrUndefined(droppedRecord) && !droppedRecord.parentItem)) {\n            for (var i = 0; i < Object.keys(tempDataSource).length; i++) {\n                if (tempDataSource[i][this.parent.childMapping] === droppedRecord.taskData[this.parent.childMapping]) {\n                    idx = i;\n                }\n            }\n            if (this.dropPosition === 'topSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx, 0, draggedRecord.taskData);\n                }\n            }\n            else if (this.dropPosition === 'bottomSegment') {\n                if (!this.parent.idMapping) {\n                    tempDataSource.splice(idx + 1, 0, draggedRecord.taskData);\n                }\n            }\n        }\n        else if (!this.parent.parentIdMapping && (!isNullOrUndefined(droppedRecord) && droppedRecord.parentItem)) {\n            if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                var record = this.getChildrecordsByParentID(droppedRecord.parentUniqueID)[0];\n                var childRecords = record.childRecords;\n                for (var i = 0; i < childRecords.length; i++) {\n                    droppedRecord.parentItem.taskData[this.parent.childMapping][i] = childRecords[i].taskData;\n                }\n            }\n        }\n        if (this.parent.parentIdMapping) {\n            if (draggedRecord.parentItem) {\n                if (this.dropPosition === 'topSegment' || this.dropPosition === 'bottomSegment') {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.parentIdMapping];\n                }\n                else {\n                    draggedRecord[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                    draggedRecord.taskData[this.parent.parentIdMapping] = droppedRecord[this.parent.idMapping];\n                }\n            }\n            else {\n                draggedRecord.taskData[this.parent.parentIdMapping] = null;\n                draggedRecord[this.parent.parentIdMapping] = null;\n            }\n        }\n    };\n    RowDD.prototype.removeFirstrowBorder = function (element, isRemove) {\n        var canremove = this.dropPosition === 'bottomSegment';\n        if (this.parent.element.getElementsByClassName('e-firstrow-border').length > 0 && element &&\n            (element.rowIndex !== 0 || canremove)) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.removeLastrowBorder = function (element, isRemove) {\n        var isEmptyRow = element && (element.classList.contains('e-emptyrow') || element.classList.contains('e-columnheader'));\n        var islastRowIndex = element && !isEmptyRow &&\n            this.parent.getRowByIndex(this.parent.getRows().length - 1).getAttribute('data-uid') !==\n                element.getAttribute('data-uid');\n        var canremove = islastRowIndex || this.dropPosition === 'topSegment';\n        if (this.parent.element.getElementsByClassName('e-lastrow-border').length > 0 && element && (islastRowIndex || canremove)) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.updateIcon = function (row, index, args) {\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        this.dropPosition = undefined;\n        var rowPositionHeight = 0;\n        this.removeFirstrowBorder(rowEle);\n        this.removeLastrowBorder(rowEle);\n        for (var i = 0; i < args.rows.length; i++) {\n            if (!isNullOrUndefined(rowEle) && rowEle.getAttribute('data-uid') === args.rows[i].getAttribute('data-uid')\n                || !parentsUntil(args.target, 'e-gridcontent')) {\n                this.dropPosition = 'Invalid';\n                this.addErrorElem();\n            }\n        }\n        // To get the corresponding drop position related to mouse position \n        var tObj = this.parent;\n        var rowTop = 0;\n        var roundOff = 0;\n        var toolHeight = tObj.toolbar && tObj.toolbar.length ?\n            document.getElementById(tObj.element.id + '_gridcontrol_toolbarItems').offsetHeight : 0;\n        // tObj.lastRow = tObj.getRowByIndex(tObj.getCurrentViewRecords().length - 1);\n        var positionOffSet = this.getOffset(tObj.element);\n        // let contentHeight1: number = (tObj.element.offsetHeight  - (tObj.getContent() as HTMLElement).offsetHeight) + positionOffSet.top;\n        var contentHeight = tObj.getHeaderContent().offsetHeight + positionOffSet.top + toolHeight;\n        var scrollTop = tObj.getContent().firstElementChild.scrollTop;\n        if (!isNullOrUndefined(rowEle)) {\n            rowPositionHeight = rowEle.offsetTop - scrollTop;\n        }\n        // let scrollTop = (tObj.grid.scrollModule as any).content.scrollTop;\n        if (tObj.allowTextWrap) {\n            rowTop = row[0].offsetHeight;\n        }\n        else {\n            rowTop = rowPositionHeight + contentHeight + roundOff;\n        }\n        var rowBottom = rowTop + row[0].offsetHeight;\n        var difference = rowBottom - rowTop;\n        var divide = difference / 3;\n        var topRowSegment = rowTop + divide;\n        var middleRowSegment = topRowSegment + divide;\n        var bottomRowSegment = middleRowSegment + divide;\n        var posx = positionOffSet.left;\n        var mouseEvent = getObject('originalEvent.event', args);\n        var posy = mouseEvent.pageY;\n        var isTopSegment = posy <= topRowSegment;\n        var isMiddleRowSegment = (posy > topRowSegment && posy <= middleRowSegment);\n        var isBottomRowSegment = (posy > middleRowSegment && posy <= bottomRowSegment);\n        if (isTopSegment || isMiddleRowSegment || isBottomRowSegment) {\n            if (isTopSegment && this.dropPosition !== 'Invalid') {\n                this.removeChildBorder();\n                this.dropPosition = 'topSegment';\n                this.removetopOrBottomBorder();\n                this.addFirstrowBorder(rowEle);\n                this.removeErrorElem();\n                this.removeLastrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n            if (isMiddleRowSegment && this.dropPosition !== 'Invalid') {\n                this.removetopOrBottomBorder();\n                var element = void 0;\n                var rowElement = [];\n                element = closest(args.target, 'tr');\n                rowElement = [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse'));\n                if (rowElement.length > 0) {\n                    this.addRemoveClasses(rowElement, true, 'e-childborder');\n                }\n                this.addLastRowborder(rowEle);\n                this.addFirstrowBorder(rowEle);\n                this.dropPosition = 'middleSegment';\n            }\n            if (isBottomRowSegment && this.dropPosition !== 'Invalid') {\n                this.removeErrorElem();\n                this.removetopOrBottomBorder();\n                this.removeChildBorder();\n                this.dropPosition = 'bottomSegment';\n                this.addLastRowborder(rowEle);\n                this.removeFirstrowBorder(rowEle);\n                this.topOrBottomBorder(args.target);\n            }\n        }\n        return this.dropPosition;\n    };\n    RowDD.prototype.removeChildBorder = function () {\n        var borderElem = [];\n        borderElem = [].slice.call(this.parent.element.querySelectorAll('.e-childborder'));\n        if (borderElem.length > 0) {\n            this.addRemoveClasses(borderElem, false, 'e-childborder');\n        }\n    };\n    RowDD.prototype.addFirstrowBorder = function (targetRow) {\n        var node = this.parent.element;\n        var tObj = this.parent;\n        if (targetRow && targetRow.rowIndex === 0 && !targetRow.classList.contains('e-emptyrow')) {\n            var div = this.parent.createElement('div', { className: 'e-firstrow-border' });\n            var gridheaderEle = this.parent.getHeaderContent();\n            var toolbarHeight = 0;\n            if (tObj.toolbar) {\n                toolbarHeight = tObj.toolbarModule.getToolbar().offsetHeight;\n            }\n            var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n            if (multiplegrid) {\n                div.style.top = this.parent.grid.element.getElementsByClassName('e-gridheader')[0].offsetHeight\n                    + toolbarHeight + 'px';\n            }\n            div.style.width = multiplegrid ? node.offsetWidth + 'px' :\n                node.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridheaderEle.querySelectorAll('.e-firstrow-border').length) {\n                gridheaderEle.appendChild(div);\n            }\n        }\n    };\n    RowDD.prototype.addLastRowborder = function (trElement) {\n        var isEmptyRow = trElement && (trElement.classList.contains('e-emptyrow') ||\n            trElement.classList.contains('e-columnheader'));\n        if (trElement && !isEmptyRow && this.parent.getRowByIndex(this.parent.getRows().length - 1).getAttribute('data-uid') ===\n            trElement.getAttribute('data-uid')) {\n            var bottomborder = this.parent.createElement('div', { className: 'e-lastrow-border' });\n            var gridcontentEle = this.parent.getContent();\n            bottomborder.style.width = this.parent.element.offsetWidth - this.getScrollWidth() + 'px';\n            if (!gridcontentEle.querySelectorAll('.e-lastrow-border').length) {\n                gridcontentEle.classList.add('e-treegrid-relative');\n                gridcontentEle.appendChild(bottomborder);\n                bottomborder.style.bottom = this.getScrollWidth() + 'px';\n            }\n        }\n    };\n    RowDD.prototype.getScrollWidth = function () {\n        var scrollElem = this.parent.getContent().firstElementChild;\n        return scrollElem.scrollWidth > scrollElem.offsetWidth ? Scroll.getScrollBarWidth() : 0;\n    };\n    RowDD.prototype.addErrorElem = function () {\n        var dragelem = document.getElementsByClassName('e-cloneproperties')[0];\n        var errorelem = dragelem.querySelectorAll('.e-errorelem').length;\n        if (!errorelem && !this.parent.rowDropSettings.targetID) {\n            var ele = document.createElement('div');\n            classList(ele, ['e-errorcontainer'], []);\n            classList(ele, ['e-icons', 'e-errorelem'], []);\n            var errorVal = dragelem.querySelector('.errorValue');\n            var content = dragelem.querySelector('.e-rowcell').innerHTML;\n            if (errorVal) {\n                content = errorVal.innerHTML;\n                errorVal.parentNode.removeChild(errorVal);\n            }\n            dragelem.querySelector('.e-rowcell').innerHTML = '';\n            var spanContent = document.createElement('span');\n            spanContent.className = 'errorValue';\n            spanContent.style.paddingLeft = '16px';\n            spanContent.innerHTML = content;\n            dragelem.querySelector('.e-rowcell').appendChild(ele);\n            dragelem.querySelector('.e-rowcell').appendChild(spanContent);\n        }\n    };\n    RowDD.prototype.removeErrorElem = function () {\n        var errorelem = document.querySelector('.e-errorelem');\n        if (errorelem) {\n            errorelem.remove();\n        }\n    };\n    RowDD.prototype.topOrBottomBorder = function (target) {\n        var element;\n        var multiplegrid = !isNullOrUndefined(this.parent.rowDropSettings.targetID);\n        var rowElement = [];\n        element = closest(target, 'tr');\n        rowElement = element ? [].slice.call(element.querySelectorAll('.e-rowcell,.e-rowdragdrop,.e-detailrowcollapse')) : [];\n        if (rowElement.length) {\n            if (this.dropPosition === 'topSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-droptop');\n                if (this.parent.element.getElementsByClassName('e-lastrow-dragborder').length > 0) {\n                    this.parent.element.getElementsByClassName('e-lastrow-dragborder')[0].remove();\n                }\n            }\n            if (this.dropPosition === 'bottomSegment') {\n                this.addRemoveClasses(rowElement, true, 'e-dropbottom');\n            }\n        }\n    };\n    RowDD.prototype.removetopOrBottomBorder = function () {\n        var border = [];\n        border = [].slice.call(this.parent.element.querySelectorAll('.e-dropbottom, .e-droptop'));\n        if (border.length) {\n            this.addRemoveClasses(border, false, 'e-dropbottom');\n            this.addRemoveClasses(border, false, 'e-droptop');\n        }\n    };\n    RowDD.prototype.addRemoveClasses = function (cells, add, className) {\n        for (var i = 0, len = cells.length; i < len; i++) {\n            if (add) {\n                cells[i].classList.add(className);\n            }\n            else {\n                cells[i].classList.remove(className);\n            }\n        }\n    };\n    RowDD.prototype.getOffset = function (element) {\n        var box = element.getBoundingClientRect();\n        var body = document.body;\n        var docElem = document.documentElement;\n        var scrollTop = window.pageYOffset || docElem.scrollTop || body.scrollTop;\n        var scrollLeft = window.pageXOffset || docElem.scrollLeft || body.scrollLeft;\n        var clientTop = docElem.clientTop || body.clientTop || 0;\n        var clientLeft = docElem.clientLeft || body.clientLeft || 0;\n        var top = box.top + scrollTop - clientTop;\n        var left = box.left + scrollLeft - clientLeft;\n        return { top: Math.round(top), left: Math.round(left) };\n    };\n    RowDD.prototype.Rowdraging = function (args) {\n        var tObj = this.parent;\n        var cloneElement = this.parent.element.querySelector('.e-cloneproperties');\n        cloneElement.style.cursor = '';\n        var rowEle = args.target ? closest(args.target, 'tr') : null;\n        var rowIdx = rowEle ? rowEle.rowIndex : -1;\n        var dragRecords = [];\n        var droppedRecord = tObj.getCurrentViewRecords()[rowIdx];\n        this.removeErrorElem();\n        this.canDrop = true;\n        if (!args.data[0]) {\n            dragRecords.push(args.data);\n        }\n        else {\n            dragRecords = args.data;\n        }\n        if (rowIdx !== -1) {\n            this.ensuredropPosition(dragRecords, droppedRecord);\n        }\n        else {\n            this.canDrop = false;\n            this.addErrorElem();\n        }\n        if (!tObj.rowDropSettings.targetID && this.canDrop) {\n            tObj.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n        }\n        if (tObj.rowDropSettings.targetID) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID) {\n                var srcControl = dropElement.ej2_instances[0];\n                srcControl.rowDragAndDropModule.updateIcon(args.rows, rowIdx, args);\n            }\n        }\n        if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID)) {\n            var dropElement = parentsUntil(args.target, 'e-treegrid');\n            if (!dropElement) {\n                cloneElement.style.cursor = 'default';\n            }\n        }\n    };\n    RowDD.prototype.rowDropped = function (args) {\n        var tObj = this.parent;\n        if (!tObj.rowDropSettings.targetID) {\n            if (parentsUntil(args.target, 'e-content')) {\n                if (this.parent.element.querySelector('.e-errorelem')) {\n                    this.dropPosition = 'Invalid';\n                }\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel) {\n                    if (!isCountRequired(this.parent)) {\n                        this.dropRows(args);\n                    }\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                    tObj.refresh();\n                    if (!isNullOrUndefined(tObj.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                        tObj.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                    }\n                }\n            }\n        }\n        else {\n            if (args.target && closest(args.target, '#' + tObj.rowDropSettings.targetID) || parentsUntil(args.target, 'e-treegrid') &&\n                parentsUntil(args.target, 'e-treegrid').id === tObj.rowDropSettings.targetID) {\n                setValue('dropPosition', this.dropPosition, args);\n                tObj.trigger(events.rowDrop, args);\n                if (!args.cancel && tObj.rowDropSettings.targetID) {\n                    this.dragDropGrid(args);\n                    if (tObj.isLocalData) {\n                        tObj.flatData = this.orderToIndex(tObj.flatData);\n                    }\n                }\n            }\n        }\n        this.removetopOrBottomBorder();\n        this.removeChildBorder();\n        if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-firstrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-firstrow-border')[0].remove();\n        }\n        else if (!isNullOrUndefined(this.parent.element.getElementsByClassName('e-lastrow-border')[0])) {\n            this.parent.element.getElementsByClassName('e-lastrow-border')[0].remove();\n        }\n    };\n    RowDD.prototype.dragDropGrid = function (args) {\n        var tObj = this.parent;\n        var currentIndex;\n        var targetRow = closest(args.target, 'tr');\n        var targetIndex = isNaN(this.getTargetIdx(targetRow)) ? 0 : this.getTargetIdx(targetRow);\n        var dropElement = parentsUntil(args.target, 'e-treegrid');\n        var srcControl;\n        if (dropElement && dropElement.id === this.parent.rowDropSettings.targetID && !isRemoteData(this.parent)\n            && !isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            var records = tObj.getSelectedRecords();\n            var indexes = [];\n            for (var i = 0; i < records.length; i++) {\n                indexes[i] = records[i].index;\n            }\n            tObj.notify(events.rowsRemove, { indexes: indexes, records: records });\n            srcControl.notify(events.rowsAdd, { toIndex: targetIndex, records: records });\n            tObj.refresh();\n            srcControl.refresh();\n            if (srcControl.grid.dataSource.length > 1) {\n                srcControl.refresh();\n                if (!isNullOrUndefined(srcControl.getHeaderContent().querySelector('.e-firstrow-border'))) {\n                    srcControl.getHeaderContent().querySelector('.e-firstrow-border').remove();\n                }\n                if (!isNullOrUndefined(srcControl.getContent().querySelector('.e-lastrow-border'))) {\n                    srcControl.getContent().querySelector('.e-lastrow-border').remove();\n                }\n            }\n        }\n        if (isCountRequired(this.parent)) {\n            srcControl = dropElement.ej2_instances[0];\n            tObj.refresh();\n            srcControl.refresh();\n        }\n    };\n    RowDD.prototype.getTargetIdx = function (targetRow) {\n        return targetRow ? parseInt(targetRow.getAttribute('aria-rowindex'), 10) : 0;\n    };\n    RowDD.prototype.getParentData = function (record) {\n        var parentItem = record.parentItem;\n        if (this.dropPosition === 'bottomSegment') {\n            var selectedRecord = this.parent.getSelectedRecords()[0];\n            this.droppedRecord = getParentData(this.parent, selectedRecord.parentItem.uniqueID);\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var level = this.parent.getSelectedRecords()[0].level;\n            if (level === parentItem.level) {\n                this.droppedRecord = getParentData(this.parent, parentItem.uniqueID);\n            }\n            else {\n                this.getParentData(parentItem);\n            }\n        }\n    };\n    RowDD.prototype.dropRows = function (args, isByMethod) {\n        if (this.dropPosition !== 'Invalid' && !isRemoteData(this.parent)) {\n            var tObj = this.parent;\n            var draggedRecord = void 0;\n            var droppedRecord = void 0;\n            if (isNullOrUndefined(args.dropIndex)) {\n                var rowIndex = tObj.getSelectedRowIndexes()[0] - 1;\n                var record = tObj.getCurrentViewRecords()[rowIndex];\n                this.getParentData(record);\n            }\n            else {\n                this.droppedRecord = tObj.getCurrentViewRecords()[args.dropIndex];\n            }\n            var dragRecords = [];\n            droppedRecord = this.droppedRecord;\n            if (!args.data[0]) {\n                dragRecords.push(args.data);\n            }\n            else {\n                dragRecords = args.data;\n            }\n            var count = 0;\n            var multiplegrid = this.parent.rowDropSettings.targetID;\n            this.isMultipleGrid = multiplegrid;\n            var addToBottom = false;\n            if (!multiplegrid) {\n                this.ensuredropPosition(dragRecords, droppedRecord);\n            }\n            else {\n                this.isaddtoBottom = addToBottom = multiplegrid && this.isDraggedWithChild;\n            }\n            var dragLength = dragRecords.length;\n            for (var i = 0; i < dragLength; i++) {\n                draggedRecord = dragRecords[i];\n                this.draggedRecord = draggedRecord;\n                var recordIndex = args.dropIndex;\n                var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n                if (this.dropPosition !== 'Invalid') {\n                    if (!tObj.rowDropSettings.targetID || isByMethod) {\n                        this.deleteDragRow();\n                    }\n                    var recordIndex1 = this.treeGridData.indexOf(droppedRecord);\n                    this.dropAtTop(recordIndex1, isSelfReference, i);\n                    if (this.dropPosition === 'bottomSegment') {\n                        if (!droppedRecord.hasChildRecords) {\n                            if (this.parent.parentIdMapping) {\n                                this.treeData.splice(recordIndex1 + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + 1, 0, this.draggedRecord);\n                        }\n                        else {\n                            count = this.getChildCount(droppedRecord, 0);\n                            if (this.parent.parentIdMapping) {\n                                this.treeData.splice(recordIndex1 + count + 1, 0, this.draggedRecord.taskData);\n                            }\n                            this.treeGridData.splice(recordIndex1 + count + 1, 0, this.draggedRecord);\n                        }\n                        draggedRecord.parentItem = this.treeGridData[recordIndex1].parentItem;\n                        draggedRecord.parentUniqueID = this.treeGridData[recordIndex1].parentUniqueID;\n                        draggedRecord.level = this.treeGridData[recordIndex1].level;\n                        if (draggedRecord.hasChildRecords) {\n                            var level = 1;\n                            this.updateChildRecordLevel(draggedRecord, level);\n                            this.updateChildRecord(draggedRecord, recordIndex1 + count + 1);\n                        }\n                        if (droppedRecord.parentItem) {\n                            var rec = this.getChildrecordsByParentID(droppedRecord.parentUniqueID);\n                            var childRecords = rec[0].childRecords;\n                            var droppedRecordIndex = childRecords.indexOf(droppedRecord) + 1;\n                            childRecords.splice(droppedRecordIndex, 0, draggedRecord);\n                        }\n                    }\n                    this.dropMiddle(recordIndex, recordIndex1, args, isByMethod, isSelfReference, i);\n                }\n                if (isNullOrUndefined(draggedRecord.parentItem)) {\n                    var parentRecords = tObj.parentData;\n                    var newParentIndex = parentRecords.indexOf(this.droppedRecord);\n                    if (this.dropPosition === 'bottomSegment') {\n                        parentRecords.splice(newParentIndex + 1, 0, draggedRecord);\n                    }\n                    else if (this.dropPosition === 'topSegment') {\n                        parentRecords.splice(newParentIndex, 0, draggedRecord);\n                    }\n                }\n                tObj.rowDragAndDropModule.refreshGridDataSource();\n            }\n        }\n    };\n    RowDD.prototype.dropMiddle = function (recordIndex, recordIndex1, args, isSelfReference, isByMethod, i) {\n        var tObj = this.parent;\n        var childRecords = findChildrenRecords(this.droppedRecord);\n        var childRecordsLength = (isNullOrUndefined(childRecords) ||\n            childRecords.length === 0) ? recordIndex1 + 1 :\n            childRecords.length + recordIndex1 + 1;\n        if (this.dropPosition === 'middleSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(childRecordsLength, 0, this.draggedRecord.taskData);\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            else {\n                this.treeGridData.splice(childRecordsLength, 0, this.draggedRecord);\n            }\n            this.recordLevel();\n            if (this.draggedRecord.hasChildRecords) {\n                this.updateChildRecord(this.draggedRecord, childRecordsLength, this.droppedRecord.expanded);\n            }\n        }\n    };\n    RowDD.prototype.dropAtTop = function (recordIndex1, isSelfReference, i) {\n        var tObj = this.parent;\n        if (this.dropPosition === 'topSegment') {\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(recordIndex1, 0, this.draggedRecord.taskData);\n            }\n            this.draggedRecord.parentItem = this.treeGridData[recordIndex1].parentItem;\n            this.draggedRecord.parentUniqueID = this.treeGridData[recordIndex1].parentUniqueID;\n            this.draggedRecord.level = this.treeGridData[recordIndex1].level;\n            this.treeGridData.splice(recordIndex1, 0, this.draggedRecord);\n            if (this.draggedRecord.hasChildRecords) {\n                var level = 1;\n                this.updateChildRecord(this.draggedRecord, recordIndex1);\n                this.updateChildRecordLevel(this.draggedRecord, level);\n            }\n            if (this.droppedRecord.parentItem) {\n                var rec = this.getChildrecordsByParentID(this.droppedRecord.parentUniqueID);\n                var childRecords = rec[0].childRecords;\n                var droppedRecordIndex = childRecords.indexOf(this.droppedRecord);\n                childRecords.splice(droppedRecordIndex, 0, this.draggedRecord);\n            }\n        }\n    };\n    RowDD.prototype.recordLevel = function () {\n        var tObj = this.parent;\n        var draggedRecord = this.draggedRecord;\n        var droppedRecord = this.droppedRecord;\n        var childItem = tObj.childMapping;\n        if (!droppedRecord.hasChildRecords) {\n            droppedRecord.hasChildRecords = true;\n            droppedRecord.hasFilteredChildRecords = true;\n            if (isNullOrUndefined(droppedRecord.childRecords)) {\n                droppedRecord.childRecords = [];\n                if (!tObj.parentIdMapping && isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                    droppedRecord.taskData[childItem] = [];\n                }\n            }\n        }\n        if (this.dropPosition === 'middleSegment') {\n            var parentItem = extend({}, droppedRecord);\n            delete parentItem.childRecords;\n            draggedRecord.parentItem = parentItem;\n            draggedRecord.parentUniqueID = droppedRecord.uniqueID;\n            droppedRecord.childRecords.splice(droppedRecord.childRecords.length, 0, draggedRecord);\n            if (!isNullOrUndefined(draggedRecord) && !tObj.parentIdMapping && !isNullOrUndefined(droppedRecord.taskData[childItem])) {\n                droppedRecord.taskData[tObj.childMapping].splice(droppedRecord.childRecords.length, 0, draggedRecord.taskData);\n            }\n            if (!draggedRecord.hasChildRecords) {\n                draggedRecord.level = droppedRecord.level + 1;\n            }\n            else {\n                var level = 1;\n                draggedRecord.level = droppedRecord.level + 1;\n                this.updateChildRecordLevel(draggedRecord, level);\n            }\n            droppedRecord.expanded = true;\n            // if (tObj.isLocalData) {\n            //     tObj.parentData.push(droppedRecord);\n            // }\n        }\n    };\n    RowDD.prototype.deleteDragRow = function () {\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            this.treeGridData = this.parent.grid.dataSource.dataSource.json;\n            this.treeData = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            this.treeGridData = this.parent.grid.dataSource;\n            this.treeData = this.parent.dataSource;\n        }\n        var deletedRow;\n        deletedRow = getParentData(this.parent, this.draggedRecord.uniqueID);\n        this.removeRecords(deletedRow);\n    };\n    RowDD.prototype.updateChildRecord = function (record, count, expanded) {\n        var currentRecord;\n        var tObj = this.parent;\n        var length = 0;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            tObj.flatData.splice(count, 0, currentRecord);\n            if (tObj.parentIdMapping) {\n                this.treeData.splice(count, 0, currentRecord.taskData);\n            }\n            if (currentRecord.hasChildRecords) {\n                count = this.updateChildRecord(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.updateChildRecordLevel = function (record, level) {\n        var length = 0;\n        var currentRecord;\n        level++;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        length = record.childRecords.length;\n        for (var i = 0; i < length; i++) {\n            currentRecord = record.childRecords[i];\n            var parentData = void 0;\n            if (record.parentItem) {\n                parentData = getParentData(this.parent, record.parentItem.uniqueID);\n            }\n            currentRecord.level = record.parentItem ? parentData.level + level : record.level + 1;\n            if (currentRecord.hasChildRecords) {\n                level--;\n                level = this.updateChildRecordLevel(currentRecord, level);\n            }\n        }\n        return level;\n    };\n    RowDD.prototype.removeRecords = function (record) {\n        var tObj = this.parent;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        var deletedRow = record;\n        var recordIndex;\n        var rowIndex;\n        var isSelfReference = !isNullOrUndefined(tObj.parentIdMapping);\n        var flatParentData = this.getChildrecordsByParentID(deletedRow.parentUniqueID)[0];\n        if (deletedRow) {\n            if (deletedRow.parentItem) {\n                var childRecords = flatParentData ? flatParentData.childRecords : [];\n                var childIndex = 0;\n                if (childRecords && childRecords.length > 0) {\n                    childIndex = childRecords.indexOf(deletedRow);\n                    flatParentData.childRecords.splice(childIndex, 1);\n                    if (!this.parent.parentIdMapping) {\n                        editAction({ value: deletedRow, action: 'delete' }, this.parent, isSelfReference, deletedRow.index, deletedRow.index);\n                    }\n                }\n            }\n            if (tObj.parentIdMapping) {\n                if (deletedRow.hasChildRecords && deletedRow.childRecords.length > 0) {\n                    this.removeChildItem(deletedRow);\n                }\n                var idx = void 0;\n                var idz = void 0;\n                var treeGridData = dataSource;\n                for (var i = 0; i < treeGridData.length; i++) {\n                    if (treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idx = i;\n                    }\n                }\n                for (var i = 0; i < this.treeGridData.length; i++) {\n                    if (this.treeGridData[i][this.parent.idMapping] === deletedRow.taskData[this.parent.idMapping]) {\n                        idz = i;\n                    }\n                }\n                if (idx !== -1 || idz !== -1) {\n                    dataSource.splice(idx, 1);\n                    this.treeGridData.splice(idz, 1);\n                }\n            }\n            var recordIndex_1 = this.treeGridData.indexOf(deletedRow);\n            if (!tObj.parentIdMapping) {\n                var parentIndex = this.parent.parentData.indexOf(deletedRow);\n                if (parentIndex !== -1) {\n                    tObj.parentData.splice(parentIndex, 1);\n                    dataSource.splice(parentIndex, 1);\n                }\n            }\n            if (recordIndex_1 === -1 && !tObj.parentIdMapping) {\n                var primaryKeyField = tObj.getPrimaryKeyFieldNames()[0];\n                for (var j = 0; j < this.treeGridData.length; j++) {\n                    if (this.treeGridData[j][primaryKeyField] === deletedRow[primaryKeyField]) {\n                        recordIndex_1 = j;\n                    }\n                }\n            }\n            if (!tObj.parentIdMapping) {\n                var deletedRecordCount = this.getChildCount(deletedRow, 0);\n                this.treeGridData.splice(recordIndex_1, deletedRecordCount + 1);\n            }\n            if (deletedRow.parentItem && flatParentData && flatParentData.childRecords && !flatParentData.childRecords.length) {\n                flatParentData.expanded = false;\n                flatParentData.hasChildRecords = false;\n                flatParentData.hasFilteredChildRecords = false;\n            }\n        }\n    };\n    RowDD.prototype.removeChildItem = function (record) {\n        var tObj = this.parent;\n        var currentRecord;\n        var idx;\n        var idz;\n        var dataSource;\n        if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n            dataSource = this.parent.dataSource.dataSource.json;\n        }\n        else {\n            dataSource = this.parent.dataSource;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            var treeGridData = void 0;\n            if (this.parent.dataSource instanceof DataManager && isOffline(this.parent)) {\n                treeGridData = this.parent.dataSource.dataSource.json;\n            }\n            else {\n                treeGridData = this.parent.dataSource;\n            }\n            for (var i_1 = 0; i_1 < treeGridData.length; i_1++) {\n                if (treeGridData[i_1][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idx = i_1;\n                }\n            }\n            for (var i_2 = 0; i_2 < this.treeGridData.length; i_2++) {\n                if (this.treeGridData[i_2][this.parent.idMapping] === currentRecord.taskData[this.parent.idMapping]) {\n                    idz = i_2;\n                    break;\n                }\n            }\n            if (idx !== -1 || idz !== -1) {\n                dataSource.splice(idx, 1);\n                this.treeGridData.splice(idz, 1);\n            }\n            if (currentRecord.hasChildRecords) {\n                this.removeChildItem(currentRecord);\n            }\n        }\n    };\n    RowDD.prototype.getChildCount = function (record, count) {\n        var currentRecord;\n        if (!record.hasChildRecords) {\n            return 0;\n        }\n        for (var i = 0; i < record.childRecords.length; i++) {\n            currentRecord = record.childRecords[i];\n            count++;\n            if (currentRecord.hasChildRecords) {\n                count = this.getChildCount(currentRecord, count);\n            }\n        }\n        return count;\n    };\n    RowDD.prototype.ensuredropPosition = function (draggedRecords, currentRecord) {\n        var tObj = this.parent;\n        var rowDragMoudule = this;\n        draggedRecords.filter(function (e) {\n            if (e.hasChildRecords && !isNullOrUndefined(e.childRecords)) {\n                var valid = e.childRecords.indexOf(currentRecord);\n                if (valid === -1) {\n                    rowDragMoudule.ensuredropPosition(e.childRecords, currentRecord);\n                }\n                else {\n                    rowDragMoudule.dropPosition = 'Invalid';\n                    rowDragMoudule.addErrorElem();\n                    rowDragMoudule.canDrop = false;\n                    return;\n                }\n            }\n        });\n    };\n    RowDD.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    RowDD.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowdraging, this.Rowdraging);\n        this.parent.off(events.rowDropped, this.rowDropped);\n        this.parent.off(events.rowsAdd, this.rowsAdded);\n        this.parent.off(events.rowsRemove, this.rowsRemoved);\n    };\n    /**\n     * hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    RowDD.prototype.getModuleName = function () {\n        return 'rowDragAndDrop';\n    };\n    return RowDD;\n}());\nexport { RowDD };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Property, ChildProperty } from '@syncfusion/ej2-base';\n/**\n * Configures the row drop settings of the TreeGrid.\n */\nvar RowDropSettings = /** @class */ (function (_super) {\n    __extends(RowDropSettings, _super);\n    function RowDropSettings() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    __decorate([\n        Property()\n    ], RowDropSettings.prototype, \"targetID\", void 0);\n    return RowDropSettings;\n}(ChildProperty));\nexport { RowDropSettings };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualRowModelGenerator } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\n/**\n * RowModelGenerator is used to generate grid data rows.\n * @hidden\n */\nvar TreeVirtualRowModelGenerator = /** @class */ (function (_super) {\n    __extends(TreeVirtualRowModelGenerator, _super);\n    function TreeVirtualRowModelGenerator(parent) {\n        var _this = _super.call(this, parent) || this;\n        _this.addEventListener();\n        return _this;\n    }\n    TreeVirtualRowModelGenerator.prototype.addEventListener = function () {\n        this.parent.on(events.dataListener, this.getDatas, this);\n    };\n    TreeVirtualRowModelGenerator.prototype.getDatas = function (args) {\n        this.visualData = args.data;\n    };\n    TreeVirtualRowModelGenerator.prototype.generateRows = function (data, notifyArgs) {\n        if (this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') {\n            return _super.prototype.generateRows.call(this, data, notifyArgs);\n        }\n        else {\n            if (!isNullOrUndefined(notifyArgs.requestType) && notifyArgs.requestType.toString() === 'collapseAll') {\n                notifyArgs.requestType = 'refresh';\n            }\n            var rows = _super.prototype.generateRows.call(this, data, notifyArgs);\n            for (var r = 0; r < rows.length; r++) {\n                rows[r].index = (this.visualData).indexOf(rows[r].data);\n            }\n            return rows;\n        }\n    };\n    TreeVirtualRowModelGenerator.prototype.checkAndResetCache = function (action) {\n        var clear = ['paging', 'refresh', 'sorting', 'filtering', 'searching', 'reorder',\n            'save', 'delete'].some(function (value) { return action === value; });\n        if (this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') {\n            var model = 'model';\n            var currentPage = this[model].currentPage;\n            if (clear) {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n            }\n            else if (action === 'virtualscroll' && this.cache[currentPage] &&\n                this.cache[currentPage].length > (this.parent.contentModule).getBlockSize()) {\n                delete this.cache[currentPage];\n            }\n        }\n        else {\n            if (clear || action === 'virtualscroll') {\n                this.cache = {};\n                this.data = {};\n                this.groups = {};\n            }\n        }\n        return clear;\n    };\n    return TreeVirtualRowModelGenerator;\n}(VirtualRowModelGenerator));\nexport { TreeVirtualRowModelGenerator };\n","import { getObject, Filter as GridFilter, Grid } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, setValue, getValue } from '@syncfusion/ej2-base';\nimport { getParentData } from '../utils';\n/**\n * TreeGrid Filter module will handle filtering action\n * @hidden\n */\nvar Filter = /** @class */ (function () {\n    /**\n     * Constructor for Filter module\n     */\n    function Filter(parent) {\n        Grid.Inject(GridFilter);\n        this.parent = parent;\n        this.isHierarchyFilter = false;\n        this.filteredResult = [];\n        this.flatFilteredData = [];\n        this.filteredParentRecs = [];\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Filter.prototype.getModuleName = function () {\n        return 'filter';\n    };\n    /**\n     * To destroy the Filter module\n     * @return {void}\n     * @hidden\n     */\n    Filter.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.addEventListener = function () {\n        this.parent.on('updateFilterRecs', this.updatedFilteredRecord, this);\n        this.parent.on('clearFilters', this.clearFilterLevel, this);\n    };\n    /**\n     * @hidden\n     */\n    Filter.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateFilterRecs', this.updatedFilteredRecord);\n        this.parent.off('clearFilters', this.clearFilterLevel);\n    };\n    /**\n     * Function to update filtered records\n     *  @hidden\n     */\n    Filter.prototype.updatedFilteredRecord = function (dataDetails) {\n        setValue('uniqueIDFilterCollection', {}, this.parent);\n        this.flatFilteredData = dataDetails.data;\n        this.filteredParentRecs = [];\n        this.filteredResult = [];\n        this.isHierarchyFilter = false;\n        for (var f = 0; f < this.flatFilteredData.length; f++) {\n            var rec = this.flatFilteredData[f];\n            this.addParentRecord(rec);\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n                : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'None') &&\n                (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== ''))) {\n                this.isHierarchyFilter = true;\n            }\n            var ischild = getObject('childRecords', rec);\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                setValue('hasFilteredChildRecords', this.checkChildExsist(rec), rec);\n            }\n            var parent_1 = getObject('parentItem', rec);\n            if (!isNullOrUndefined(parent_1)) {\n                var parRecord = getParentData(this.parent, rec.parentItem.uniqueID, true);\n                //let parRecord: Object = this.flatFilteredData.filter((e: ITreeData) => {\n                //          return e.uniqueID === rec.parentItem.uniqueID; })[0];\n                setValue('hasFilteredChildRecords', true, parRecord);\n                if (parRecord && parRecord.parentItem) {\n                    this.updateParentFilteredRecord(parRecord);\n                }\n            }\n        }\n        if (this.flatFilteredData.length > 0 && this.isHierarchyFilter) {\n            this.updateFilterLevel();\n        }\n        this.parent.notify('updateAction', { result: this.filteredResult });\n    };\n    Filter.prototype.updateParentFilteredRecord = function (record) {\n        var parRecord = getParentData(this.parent, record.parentItem.uniqueID, true);\n        var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n        if (parRecord && uniqueIDValue.hasOwnProperty(parRecord.uniqueID)) {\n            setValue('hasFilteredChildRecords', true, parRecord);\n        }\n        if (parRecord && parRecord.parentItem) {\n            this.updateParentFilteredRecord(parRecord);\n        }\n    };\n    ;\n    Filter.prototype.addParentRecord = function (record) {\n        var parent = getParentData(this.parent, record.parentUniqueID);\n        //let parent: Object = this.parent.flatData.filter((e: ITreeData) => {return e.uniqueID === record.parentUniqueID; })[0];\n        var hierarchyMode = this.parent.grid.searchSettings.key === '' ? this.parent.filterSettings.hierarchyMode\n            : this.parent.searchSettings.hierarchyMode;\n        if (hierarchyMode === 'None' && (this.parent.grid.filterSettings.columns.length !== 0\n            || this.parent.grid.searchSettings.key !== '')) {\n            if (isNullOrUndefined(parent)) {\n                if (this.flatFilteredData.indexOf(record) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                        record.hasFilteredChildRecords = true;\n                    }\n                    return;\n                }\n            }\n            else {\n                this.addParentRecord(parent);\n                if (this.flatFilteredData.indexOf(parent) !== -1 || this.filteredResult.indexOf(parent) !== -1) {\n                    if (this.filteredResult.indexOf(record) === -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n                else {\n                    if (this.filteredResult.indexOf(record) === -1 && this.flatFilteredData.indexOf(record) !== -1) {\n                        this.filteredResult.push(record);\n                        setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n                    }\n                }\n            }\n        }\n        else {\n            if (!isNullOrUndefined(parent)) {\n                var hierarchyMode_1 = this.parent.grid.searchSettings.key === '' ?\n                    this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n                if (hierarchyMode_1 === 'Child' && (this.parent.grid.filterSettings.columns.length !== 0\n                    || this.parent.grid.searchSettings.key !== '')) {\n                    if (this.flatFilteredData.indexOf(parent) !== -1) {\n                        this.addParentRecord(parent);\n                    }\n                }\n                else {\n                    this.addParentRecord(parent);\n                }\n            }\n            if (this.filteredResult.indexOf(record) === -1) {\n                this.filteredResult.push(record);\n                setValue('uniqueIDFilterCollection.' + record.uniqueID, record, this.parent);\n            }\n        }\n    };\n    Filter.prototype.checkChildExsist = function (records) {\n        var childRec = getObject('childRecords', records);\n        var isExist = false;\n        for (var count = 0; count < childRec.length; count++) {\n            var ischild = childRec[count].childRecords;\n            var hierarchyMode = this.parent.grid.searchSettings.key === '' ?\n                this.parent.filterSettings.hierarchyMode : this.parent.searchSettings.hierarchyMode;\n            if (((hierarchyMode === 'Child' || hierarchyMode === 'Both') && (this.parent.grid.filterSettings.columns.length !== 0\n                || this.parent.grid.searchSettings.key !== ''))) {\n                var uniqueIDValue = getValue('uniqueIDFilterCollection', this.parent);\n                if (!uniqueIDValue.hasOwnProperty(childRec[count].uniqueID)) {\n                    this.filteredResult.push(childRec[count]);\n                    setValue('uniqueIDFilterCollection.' + childRec[count].uniqueID, childRec[count], this.parent);\n                    isExist = true;\n                }\n            }\n            if ((hierarchyMode === 'None')\n                && (this.parent.grid.filterSettings.columns.length !== 0 || this.parent.grid.searchSettings.key !== '')) {\n                if (this.flatFilteredData.indexOf(childRec[count]) !== -1) {\n                    isExist = true;\n                    break;\n                }\n            }\n            if (!isNullOrUndefined(ischild) && ischild.length) {\n                isExist = this.checkChildExsist(childRec[count]);\n            }\n            if ((hierarchyMode === 'Child' || hierarchyMode === 'Both') && childRec.length) {\n                isExist = true;\n            }\n        }\n        return isExist;\n    };\n    Filter.prototype.updateFilterLevel = function () {\n        var record = this.filteredResult;\n        var len = this.filteredResult.length;\n        for (var c = 0; c < len; c++) {\n            var parent_2 = getParentData(this.parent, record[c].parentUniqueID);\n            var isPrst = record.indexOf(parent_2) !== -1;\n            if (isPrst) {\n                var parent_3 = getParentData(this.parent, record[c].parentUniqueID, true);\n                record[c].filterLevel = parent_3.filterLevel + 1;\n            }\n            else {\n                record[c].filterLevel = 0;\n                this.filteredParentRecs.push(record[c]);\n            }\n        }\n    };\n    Filter.prototype.clearFilterLevel = function (data) {\n        var count = 0;\n        var flatData = data.flatData;\n        var len = flatData.length;\n        var currentRecord;\n        for (count; count < len; count++) {\n            currentRecord = flatData[count];\n            var fLevel = currentRecord.filterLevel;\n            if (fLevel || fLevel === 0 || !isNullOrUndefined(currentRecord.hasFilteredChildRecords)) {\n                currentRecord.hasFilteredChildRecords = null;\n                currentRecord.filterLevel = null;\n            }\n        }\n        this.filteredResult = [];\n        this.parent.notify('updateResults', { result: flatData, count: flatData.length });\n    };\n    return Filter;\n}());\nexport { Filter };\n","import { getObject, Grid, ExcelExport as GridExcel } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline, getParentData } from '../utils';\nimport { isNullOrUndefined, setValue, extend } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid Excel Export module\n * @hidden\n */\nvar ExcelExport = /** @class */ (function () {\n    /**\n     * Constructor for Excel Export module\n     */\n    function ExcelExport(parent) {\n        Grid.Inject(GridExcel);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ExcelExport.prototype.getModuleName = function () {\n        return 'ExcelExport';\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.addEventListener = function () {\n        this.parent.on('updateResults', this.updateExcelResultModel, this);\n        this.parent.on('excelCellInfo', this.excelQueryCellInfo, this);\n        this.parent.grid.on('export-RowDataBound', this.exportRowDataBound, this);\n        this.parent.grid.on('finalPageSetup', this.finalPageSetup, this);\n    };\n    /**\n     * To destroy the Excel Export\n     * @return {void}\n     * @hidden\n     */\n    ExcelExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    ExcelExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateResults', this.updateExcelResultModel);\n        this.parent.off('excelCellInfo', this.excelQueryCellInfo);\n        this.parent.grid.off('export-RowDataBound', this.exportRowDataBound);\n        this.parent.grid.off('finalPageSetup', this.finalPageSetup);\n    };\n    ExcelExport.prototype.updateExcelResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    ExcelExport.prototype.Map = function (excelExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, workbook, isBlob, isCsv) {\n        var _this = this;\n        var dataSource = this.parent.dataSource;\n        var property = Object();\n        setValue('isCsv', isCsv, property);\n        setValue('cancel', false, property);\n        return new Promise(function (resolve, reject) {\n            var dm = _this.isLocal() ? new DataManager(dataSource) : _this.parent.dataSource;\n            var query = new Query();\n            if (!_this.isLocal()) {\n                query = _this.generateQuery(query);\n                setValue('query', query, property);\n            }\n            _this.parent.trigger(event.beforeExcelExport, extend(property, excelExportProperties));\n            if (getObject('cancel', property)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customData = null;\n                if (!isNullOrUndefined(excelExportProperties) && !isNullOrUndefined(excelExportProperties.dataSource)) {\n                    customData = excelExportProperties.dataSource;\n                }\n                excelExportProperties = _this.manipulateExportProperties(excelExportProperties, dataSource, e);\n                return _this.parent.grid.excelExportModule.Map(_this.parent.grid, excelExportProperties, isMultipleExport, workbook, isCsv, isBlob).then(function (book) {\n                    if (customData != null) {\n                        excelExportProperties.dataSource = customData;\n                    }\n                    else {\n                        delete excelExportProperties.dataSource;\n                    }\n                    resolve(book);\n                });\n            });\n        });\n    };\n    ExcelExport.prototype.generateQuery = function (query, property) {\n        if (!isNullOrUndefined(property) && property.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            property.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    ExcelExport.prototype.manipulateExportProperties = function (property, dtSrc, queryResult) {\n        //count not required for this query\n        var args = Object();\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(property) && !isNullOrUndefined(property.exportType)) {\n            setValue('exportType', property.exportType, args);\n        }\n        if (!this.isLocal() || !isNullOrUndefined(this.parent.parentIdMapping)) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getObject('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!this.isLocal()) {\n            this.parent.flatData = [];\n        }\n        if (property && property.dataSource && this.isLocal()) {\n            var flatsData = this.parent.flatData;\n            var dataSrc = property.dataSource instanceof DataManager ? property.dataSource.dataSource.json : property.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatsData;\n        }\n        property = isNullOrUndefined(property) ? Object() : property;\n        property.dataSource = new DataManager({ json: dtSrc });\n        return property;\n    };\n    /**\n     * TreeGrid Excel Export cell modifier\n     * @hidden\n     */\n    ExcelExport.prototype.excelQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = args.data;\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.indent = pad;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('excelQueryCellInfo', args);\n    };\n    ExcelExport.prototype.exportRowDataBound = function (excelRow) {\n        if (excelRow.type === 'excel') {\n            var excelrowobj = excelRow.rowObj.data;\n            var filtercolumnlength = this.parent.grid.filterSettings.columns.length;\n            if (excelrowobj.parentItem && getParentData(this.parent, excelrowobj.parentItem.uniqueID, Boolean(filtercolumnlength))) {\n                var rowlength = excelRow.excelRows.length;\n                var rowlevel = excelrowobj.level;\n                excelRow.excelRows[rowlength - 1].grouping = { outlineLevel: rowlevel, isCollapsed: false };\n            }\n        }\n    };\n    /* tslint:disable-next-line:max-func-body-length */\n    ExcelExport.prototype.finalPageSetup = function (/* tslint:disable-next-line:no-any */ workbook) {\n        for (var i = 0; i < workbook.worksheets.length; i++) {\n            if (workbook.worksheets[i].rows) {\n                workbook.worksheets[i].pageSetup = { isSummaryRowBelow: false };\n            }\n        }\n    };\n    ExcelExport.prototype.isLocal = function () {\n        return !isRemoteData(this.parent) && isOffline(this.parent);\n    };\n    return ExcelExport;\n}());\nexport { ExcelExport };\n","import { getObject, PdfExport as GridPdf, Grid } from '@syncfusion/ej2-grids';\nimport { isRemoteData, isOffline } from '../utils';\nimport { isNullOrUndefined, setValue, extend, getValue } from '@syncfusion/ej2-base';\nimport { DataManager, Query } from '@syncfusion/ej2-data';\nimport * as event from '../base/constant';\n/**\n * TreeGrid PDF Export module\n * @hidden\n */\nvar PdfExport = /** @class */ (function () {\n    /**\n     * Constructor for PDF export module\n     */\n    function PdfExport(parent) {\n        Grid.Inject(GridPdf);\n        this.parent = parent;\n        this.dataResults = {};\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    PdfExport.prototype.getModuleName = function () {\n        return 'PdfExport';\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.addEventListener = function () {\n        this.parent.on('pdfCellInfo', this.pdfQueryCellInfo, this);\n        this.parent.on('updateResults', this.updatePdfResultModel, this);\n    };\n    /**\n     * @hidden\n     */\n    PdfExport.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('pdfCellInfo', this.pdfQueryCellInfo);\n        this.parent.off('updateResults', this.updatePdfResultModel);\n    };\n    /**\n     * To destroy the PDF Export\n     * @return {void}\n     * @hidden\n     */\n    PdfExport.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    PdfExport.prototype.updatePdfResultModel = function (returnResult) {\n        this.dataResults = returnResult;\n    };\n    PdfExport.prototype.Map = function (pdfExportProperties, \n    /* tslint:disable-next-line:no-any */\n    isMultipleExport, pdfDoc, isBlob) {\n        var _this = this;\n        var dtSrc = this.parent.dataSource;\n        var prop = Object();\n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('cancel', false, prop);\n        return new Promise(function (resolve, reject) {\n            var dm = isLocal ? new DataManager(dtSrc) : _this.parent.dataSource;\n            var query = new Query();\n            if (!isLocal) {\n                query = _this.generateQuery(query);\n                setValue('query', query, prop);\n            }\n            _this.parent.trigger(event.beforePdfExport, extend(prop, pdfExportProperties));\n            if (getObject('cancel', prop)) {\n                return null;\n            }\n            dm.executeQuery(query).then(function (e) {\n                var customsData = null;\n                if (!isNullOrUndefined(pdfExportProperties) && !isNullOrUndefined(pdfExportProperties.dataSource)) {\n                    customsData = pdfExportProperties.dataSource;\n                }\n                pdfExportProperties = _this.manipulatePdfProperties(pdfExportProperties, dtSrc, e);\n                return _this.parent.grid.pdfExportModule.Map(_this.parent.grid, pdfExportProperties, isMultipleExport, pdfDoc, isBlob).then(function (document) {\n                    if (customsData != null) {\n                        pdfExportProperties.dataSource = customsData;\n                    }\n                    else {\n                        delete pdfExportProperties.dataSource;\n                    }\n                    resolve(document);\n                });\n            });\n        });\n    };\n    PdfExport.prototype.generateQuery = function (query, prop) {\n        if (!isNullOrUndefined(prop) && prop.exportType === 'CurrentPage'\n            && this.parent.allowPaging) {\n            prop.exportType = 'AllPages';\n            query.addParams('ExportType', 'CurrentPage');\n            query.where(this.parent.parentIdMapping, 'equal', null);\n            query = getObject('grid.renderModule.data.pageQuery', this.parent)(query);\n        }\n        return query;\n    };\n    PdfExport.prototype.manipulatePdfProperties = function (prop, dtSrc, queryResult) {\n        var args = {};\n        //count not required for this query  \n        var isLocal = !isRemoteData(this.parent) && isOffline(this.parent);\n        setValue('query', this.parent.grid.getDataModule().generateQuery(true), args);\n        setValue('isExport', true, args);\n        if (!isNullOrUndefined(prop) && !isNullOrUndefined(prop.exportType)) {\n            setValue('exportType', prop.exportType, args);\n        }\n        if (!isLocal || !isNullOrUndefined(this.parent.parentIdMapping)) {\n            this.parent.parentData = [];\n            this.parent.dataModule.convertToFlatData(getValue('result', queryResult));\n            setValue('expresults', this.parent.flatData, args);\n        }\n        this.parent.notify('dataProcessor', args);\n        //args = this.parent.dataModule.dataProcessor(args);\n        args = this.dataResults;\n        dtSrc = isNullOrUndefined(args.result) ? this.parent.flatData.slice(0) : args.result;\n        if (!isLocal) {\n            this.parent.flatData = [];\n        }\n        if (prop && prop.dataSource && isLocal) {\n            var flatDatas = this.parent.flatData;\n            var dataSrc = prop.dataSource instanceof DataManager ? prop.dataSource.dataSource.json : prop.dataSource;\n            this.parent.dataModule.convertToFlatData(dataSrc);\n            dtSrc = this.parent.flatData;\n            this.parent.flatData = flatDatas;\n        }\n        prop = isNullOrUndefined(prop) ? {} : prop;\n        prop.dataSource = new DataManager({ json: dtSrc });\n        return prop;\n    };\n    /**\n     * TreeGrid PDF Export cell modifier\n     * @hidden\n     */\n    PdfExport.prototype.pdfQueryCellInfo = function (args) {\n        if (this.parent.grid.getColumnIndexByUid(args.column.uid) === this.parent.treeColumnIndex) {\n            var style = {};\n            var data = getObject('data', args);\n            var ispadfilter = isNullOrUndefined(data.filterLevel);\n            var pad = ispadfilter ? data.level : data.filterLevel;\n            style.paragraphIndent = pad * 3;\n            args.style = style;\n        }\n        this.parent.notify('updateResults', args);\n        this.parent.trigger('pdfQueryCellInfo', args);\n    };\n    return PdfExport;\n}());\nexport { PdfExport };\n","import { Grid } from '@syncfusion/ej2-grids';\nimport { Page as GridPage } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { DataManager, Query, Predicate } from '@syncfusion/ej2-data';\nimport { getValue, isNullOrUndefined, isBlazor } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isFilterChildHierarchy } from '../utils';\n/**\n * The `Page` module is used to render pager and handle paging action.\n * @hidden\n */\nvar Page = /** @class */ (function () {\n    function Page(parent) {\n        Grid.Inject(GridPage);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    Page.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandPagedchilds, this);\n        this.parent.on(events.pagingActions, this.pageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandPagedchilds);\n        this.parent.off(events.pagingActions, this.pageAction);\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Page.prototype.getModuleName = function () {\n        return 'pager';\n    };\n    /**\n     * Refreshes the page count, pager information, and external message.\n     * @return {void}\n     */\n    Page.prototype.refresh = function () {\n        this.parent.grid.pagerModule.refresh();\n    };\n    /**\n     * To destroy the pager\n     * @return {void}\n     * @hidden\n     */\n    Page.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Navigates to the target page according to the given number.\n     * @param  {number} pageNo - Defines the page number to navigate.\n     * @return {void}\n     */\n    Page.prototype.goToPage = function (pageNo) {\n        this.parent.grid.pagerModule.goToPage(pageNo);\n    };\n    /**\n     * Defines the text of the external message.\n     * @param  {string} message - Defines the message to update.\n     * @return {void}\n     */\n    Page.prototype.updateExternalMessage = function (message) {\n        this.parent.grid.pagerModule.updateExternalMessage(message);\n    };\n    /**\n     * @hidden\n     */\n    Page.prototype.collapseExpandPagedchilds = function (rowDetails) {\n        rowDetails.record.expanded = rowDetails.action === 'collapse' ? false : true;\n        if (isBlazor()) {\n            this.parent.flatData.filter(function (e) {\n                return e.uniqueID === rowDetails.record.uniqueID;\n            })[0].expanded = rowDetails.action === 'collapse' ? false : true;\n        }\n        var ret = {\n            result: this.parent.flatData,\n            row: rowDetails.row,\n            action: rowDetails.action,\n            record: rowDetails.record,\n            count: this.parent.flatData.length\n        };\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret);\n    };\n    Page.prototype.pageRoot = function (pagedResults, temp, result) {\n        var newResults = isNullOrUndefined(result) ? [] : result;\n        var _loop_1 = function (t) {\n            newResults.push(temp[t]);\n            var res = [];\n            if (temp[t].hasChildRecords) {\n                res = pagedResults.filter(function (e) {\n                    return temp[t].uniqueID === e.parentUniqueID;\n                });\n                newResults = this_1.pageRoot(pagedResults, res, newResults);\n            }\n        };\n        var this_1 = this;\n        for (var t = 0; t < temp.length; t++) {\n            _loop_1(t);\n        }\n        return newResults;\n    };\n    Page.prototype.pageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        if (this.parent.pageSettings.pageSizeMode === 'Root') {\n            var temp = [];\n            var propname = (this.parent.grid.filterSettings.columns.length > 0) &&\n                (this.parent.filterSettings.hierarchyMode === 'Child' || this.parent.filterSettings.hierarchyMode === 'None') ?\n                'filterLevel' : 'level';\n            var query = new Query().where(propname, 'equal', 0);\n            temp = dm.executeLocal(query);\n            pageingDetails.count = temp.length;\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            temp = dm.executeLocal(query);\n            var newResults = this.pageRoot(pageingDetails.result, temp);\n            pageingDetails.result = newResults;\n        }\n        else {\n            var dm_1 = new DataManager(pageingDetails.result);\n            var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n            var parents_1 = dm_1.executeLocal(new Query().where(expanded));\n            var visualData = void 0;\n            if (isFilterChildHierarchy(this.parent)) {\n                visualData = parents_1;\n            }\n            else {\n                visualData = parents_1.filter(function (e) {\n                    return getExpandStatus(_this.parent, e, parents_1);\n                });\n            }\n            pageingDetails.count = visualData.length;\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            if (visualData.length < (current * size)) {\n                current = (Math.floor(visualData.length / size)) + ((visualData.length % size) ? 1 : 0);\n                current = current ? current : 1;\n                this.parent.grid.setProperties({ pageSettings: { currentPage: current } }, true);\n            }\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm_1.dataSource.json = visualData;\n            pageingDetails.result = dm_1.executeLocal(query);\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    return Page;\n}());\nexport { Page };\n","import { Grid, Toolbar as tool } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * Toolbar Module for TreeGrid\n * @hidden\n */\nvar Toolbar = /** @class */ (function () {\n    function Toolbar(parent) {\n        Grid.Inject(tool);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Toolbar.prototype.getModuleName = function () {\n        return 'toolbar';\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.addEventListener = function () {\n        this.parent.on(events.rowSelected, this.refreshToolbar, this);\n        this.parent.on(events.toolbarClick, this.toolbarClickHandler, this);\n    };\n    /**\n     * @hidden\n     */\n    Toolbar.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.rowSelected, this.refreshToolbar);\n        this.parent.off(events.toolbarClick, this.toolbarClickHandler);\n    };\n    Toolbar.prototype.refreshToolbar = function (args) {\n        var tObj = this.parent;\n        var isParent;\n        if (args.row.rowIndex === 0 || tObj.getSelectedRecords().length > 1) {\n            this.enableItems([tObj.element.id + '_gridcontrol_indent', tObj.element.id + '_gridcontrol_outdent'], false);\n        }\n        else {\n            if (!isNullOrUndefined(tObj.getCurrentViewRecords()[args.row.rowIndex])) {\n                if (!isNullOrUndefined(tObj.getCurrentViewRecords()[args.row.rowIndex]) &&\n                    (tObj.getCurrentViewRecords()[args.row.rowIndex].level >\n                        tObj.getCurrentViewRecords()[args.row.rowIndex - 1].level)) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], false);\n                }\n                else {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level ===\n                    tObj.getCurrentViewRecords()[args.row.rowIndex - 1].level) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_indent'], true);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level === 0) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_outdent'], false);\n                }\n                if (tObj.getCurrentViewRecords()[args.row.rowIndex].level !== 0) {\n                    this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n                }\n            }\n        }\n        if (args.row.rowIndex === 0 && !isNullOrUndefined(args.data.parentItem)) {\n            this.enableItems([tObj.element.id + '_gridcontrol_outdent'], true);\n        }\n    };\n    Toolbar.prototype.toolbarClickHandler = function (args) {\n        var tObj = this.parent;\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.grid.editSettings.mode === 'Batch' &&\n            args.item.id === this.parent.grid.element.id + '_update') {\n            args.cancel = true;\n            this.parent.grid.editModule.saveCell();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_expandall') {\n            this.parent.expandAll();\n        }\n        if (args.item.id === this.parent.grid.element.id + '_collapseall') {\n            this.parent.collapseAll();\n        }\n        if (args.item.id === tObj.grid.element.id + '_indent' && tObj.getSelectedRecords().length) {\n            var record = tObj.getCurrentViewRecords()[tObj.getSelectedRowIndexes()[0] - 1];\n            var dropIndex = void 0;\n            if (record.level > tObj.getSelectedRecords()[0].level) {\n                for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                    if (tObj.getCurrentViewRecords()[i].taskData === record.parentItem.taskData) {\n                        dropIndex = i;\n                    }\n                }\n            }\n            else {\n                dropIndex = tObj.getSelectedRowIndexes()[0] - 1;\n            }\n            tObj.reorderRows([tObj.getSelectedRowIndexes()[0]], dropIndex, 'child');\n        }\n        if (args.item.id === tObj.grid.element.id + '_outdent' && tObj.getSelectedRecords().length) {\n            var index = tObj.getSelectedRowIndexes()[0];\n            var dropIndex = void 0;\n            var parentItem = tObj.getSelectedRecords()[0].parentItem;\n            for (var i = 0; i < tObj.getCurrentViewRecords().length; i++) {\n                if (tObj.getCurrentViewRecords()[i].taskData === parentItem.taskData) {\n                    dropIndex = i;\n                }\n            }\n            tObj.reorderRows([index], dropIndex, 'below');\n        }\n    };\n    /**\n     * Gets the toolbar of the TreeGrid.\n     * @return {Element}\n     * @hidden\n     */\n    Toolbar.prototype.getToolbar = function () {\n        return this.parent.grid.toolbarModule.getToolbar();\n    };\n    /**\n     * Enables or disables ToolBar items.\n     * @param {string[]} items - Defines the collection of itemID of ToolBar items.\n     * @param {boolean} isEnable - Defines the items to be enabled or disabled.\n     * @return {void}\n     * @hidden\n     */\n    Toolbar.prototype.enableItems = function (items, isEnable) {\n        this.parent.grid.toolbarModule.enableItems(items, isEnable);\n    };\n    /**\n     * Destroys the ToolBar.\n     * @method destroy\n     * @return {void}\n     */\n    Toolbar.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Toolbar;\n}());\nexport { Toolbar };\n","import { Query, DataManager } from '@syncfusion/ej2-data';\nimport { getObject, calculateAggregate, Aggregate as GridAggregate, Grid, appendChildren } from '@syncfusion/ej2-grids';\nimport { findParentRecords } from '../utils';\nimport { isNullOrUndefined, setValue, createElement, extend } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Aggregate module\n * @hidden\n */\nvar Aggregate = /** @class */ (function () {\n    /**\n     * Constructor for Aggregate module\n     */\n    function Aggregate(parent) {\n        Grid.Inject(GridAggregate);\n        this.parent = parent;\n        this.flatChildRecords = [];\n        this.summaryQuery = [];\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Aggregate.prototype.getModuleName = function () {\n        return 'summary';\n    };\n    Aggregate.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n    };\n    /**\n     * Function to calculate summary values\n     *  @hidden\n     */\n    Aggregate.prototype.calculateSummaryValue = function (summaryQuery, filteredData, isSort) {\n        this.summaryQuery = summaryQuery;\n        var parentRecord;\n        var parentDataLength = Object.keys(filteredData).length;\n        var parentData;\n        parentData = [];\n        for (var p = 0, len = parentDataLength; p < len; p++) {\n            var summaryRow = getObject('isSummaryRow', filteredData[p]);\n            if (!summaryRow) {\n                parentData.push(filteredData[p]);\n            }\n        }\n        var parentRecords = findParentRecords(parentData);\n        var flatRecords;\n        flatRecords = parentData.slice();\n        var columnLength = Object.keys(this.parent.columns).length;\n        var summaryLength = Object.keys(this.parent.aggregates).length;\n        var dataLength = Object.keys(parentRecords).length;\n        var childRecordsLength;\n        for (var i = 0, len = dataLength; i < len; i++) {\n            parentRecord = parentRecords[i];\n            childRecordsLength = this.getChildRecordsLength(parentRecord, flatRecords);\n            if (childRecordsLength) {\n                var _loop_1 = function (summaryRowIndex, len_1) {\n                    var item = void 0;\n                    item = {};\n                    for (var columnIndex = 0, len_2 = columnLength; columnIndex < len_2; columnIndex++) {\n                        var field = isNullOrUndefined(getObject('field', this_1.parent.columns[columnIndex])) ?\n                            this_1.parent.columns[columnIndex] : getObject('field', this_1.parent.columns[columnIndex]);\n                        item[field] = null;\n                    }\n                    if (this_1.parent.aggregates[summaryRowIndex - 1].showChildSummary) {\n                        item = this_1.createSummaryItem(item, this_1.parent.aggregates[summaryRowIndex - 1]);\n                        var idx_1;\n                        flatRecords.map(function (e, i) { if (e.uniqueID === parentRecord.uniqueID) {\n                            idx_1 = i;\n                            return;\n                        } });\n                        var currentIndex = idx_1 + childRecordsLength + summaryRowIndex;\n                        var summaryParent = extend({}, parentRecord);\n                        delete summaryParent.childRecords;\n                        delete summaryParent[this_1.parent.childMapping];\n                        setValue('parentItem', summaryParent, item);\n                        var level = getObject('level', summaryParent);\n                        setValue('level', level + 1, item);\n                        var index = getObject('index', summaryParent);\n                        setValue('isSummaryRow', true, item);\n                        setValue('parentUniqueID', summaryParent.uniqueID, item);\n                        if (isSort) {\n                            var childRecords = getObject('childRecords', parentRecord);\n                            if (childRecords.length) {\n                                childRecords.push(item);\n                            }\n                        }\n                        flatRecords.splice(currentIndex, 0, item);\n                    }\n                    else {\n                        return \"continue\";\n                    }\n                };\n                var this_1 = this;\n                for (var summaryRowIndex = 1, len_1 = summaryLength; summaryRowIndex <= len_1; summaryRowIndex++) {\n                    _loop_1(summaryRowIndex, len_1);\n                }\n                this.flatChildRecords = [];\n            }\n        }\n        return flatRecords;\n    };\n    Aggregate.prototype.getChildRecordsLength = function (parentData, flatData) {\n        var recordLength = Object.keys(flatData).length;\n        var record;\n        for (var i = 0, len = recordLength; i < len; i++) {\n            record = flatData[i];\n            var parent_1 = isNullOrUndefined(record.parentItem) ? null :\n                flatData.filter(function (e) { return e.uniqueID === record.parentItem.uniqueID; })[0];\n            if (parentData === parent_1) {\n                this.flatChildRecords.push(record);\n                var hasChild = getObject('hasChildRecords', record);\n                if (hasChild) {\n                    this.getChildRecordsLength(record, flatData);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return this.flatChildRecords.length;\n    };\n    Aggregate.prototype.createSummaryItem = function (itemData, summary) {\n        var summaryColumnLength = Object.keys(summary.columns).length;\n        for (var i = 0, len = summaryColumnLength; i < len; i++) {\n            var displayColumn = isNullOrUndefined(summary.columns[i].columnName) ? summary.columns[i].field :\n                summary.columns[i].columnName;\n            var keys = Object.keys(itemData);\n            for (var _i = 0, keys_1 = keys; _i < keys_1.length; _i++) {\n                var key = keys_1[_i];\n                if (key === displayColumn) {\n                    itemData[key] = this.getSummaryValues(summary.columns[i], this.flatChildRecords);\n                }\n                else {\n                    continue;\n                }\n            }\n        }\n        return itemData;\n    };\n    Aggregate.prototype.getSummaryValues = function (summaryColumn, summaryData) {\n        var qry = new Query();\n        var single;\n        single = {};\n        var helper = {};\n        var type = !isNullOrUndefined(summaryColumn.field) ?\n            this.parent.getColumnByField(summaryColumn.field).type : undefined;\n        summaryColumn.setPropertiesSilent({ format: this.getFormatFromType(summaryColumn.format, type) });\n        summaryColumn.setFormatter(this.parent.grid.locale);\n        var formatFn = summaryColumn.getFormatter() || (function () { return function (a) { return a; }; })();\n        summaryColumn.setTemplate(helper);\n        var tempObj = summaryColumn.getTemplate(2);\n        qry.queries = this.summaryQuery;\n        qry.requiresCount();\n        var sumData = new DataManager(summaryData).executeLocal(qry);\n        var types = summaryColumn.type;\n        var summaryKey;\n        types = [summaryColumn.type];\n        for (var i = 0; i < types.length; i++) {\n            summaryKey = types[i];\n            var key = summaryColumn.field + ' - ' + types[i].toLowerCase();\n            var val = types[i] !== 'Custom' ? getObject('aggregates', sumData) :\n                calculateAggregate(types[i], sumData, summaryColumn, this.parent);\n            var disp = summaryColumn.columnName;\n            var value_1 = types[i] !== 'Custom' ? val[key] : val;\n            single[disp] = single[disp] || {};\n            single[disp][key] = value_1;\n            single[disp][types[i]] = !isNullOrUndefined(val) ? formatFn(value_1) : ' ';\n        }\n        helper.format = summaryColumn.getFormatter();\n        var cellElement = createElement('td', {\n            className: 'e-summary'\n        });\n        appendChildren(cellElement, tempObj.fn(single[summaryColumn.columnName], this.parent, tempObj.property));\n        var value = single[summaryColumn.columnName][summaryKey];\n        var summaryValue;\n        if (cellElement.innerHTML.indexOf(value) === -1) {\n            summaryValue = cellElement.innerHTML + value;\n            return summaryValue;\n        }\n        else {\n            return cellElement.innerHTML;\n        }\n    };\n    Aggregate.prototype.getFormatFromType = function (summaryformat, type) {\n        if (isNullOrUndefined(type) || typeof summaryformat !== 'string') {\n            return summaryformat;\n        }\n        var obj;\n        switch (type) {\n            case 'number':\n                obj = { format: summaryformat };\n                break;\n            case 'datetime':\n                obj = { type: 'dateTime', skeleton: summaryformat };\n                break;\n            case 'date':\n                obj = { type: type, skeleton: summaryformat };\n                break;\n        }\n        return obj;\n    };\n    /**\n     * To destroy the Aggregate module\n     * @return {void}\n     * @hidden\n     */\n    Aggregate.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Aggregate;\n}());\nexport { Aggregate };\n","import { isNullOrUndefined } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { Sort as GridSort, Grid, getActualProperties } from '@syncfusion/ej2-grids';\nimport { getParentData } from '../utils';\n/**\n * Internal dataoperations for TreeGrid\n * @hidden\n */\nvar Sort = /** @class */ (function () {\n    function Sort(grid) {\n        Grid.Inject(GridSort);\n        this.parent = grid;\n        this.taskIds = [];\n        this.flatSortedData = [];\n        this.storedIndex = -1;\n        this.isSelfReference = !isNullOrUndefined(this.parent.parentIdMapping);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Sort.prototype.getModuleName = function () {\n        return 'sort';\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.addEventListener = function () {\n        this.parent.on('updateModel', this.updateModel, this);\n        this.parent.on('createSort', this.createdSortedRecords, this);\n    };\n    /**\n     * @hidden\n     */\n    Sort.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('updateModel', this.updateModel);\n        this.parent.off('createSort', this.createdSortedRecords);\n    };\n    Sort.prototype.createdSortedRecords = function (sortParams) {\n        var data = sortParams.modifiedData;\n        var srtQry = sortParams.srtQry;\n        this.iterateSort(data, srtQry);\n        this.storedIndex = -1;\n        sortParams.modifiedData = this.flatSortedData;\n        this.flatSortedData = [];\n    };\n    Sort.prototype.iterateSort = function (data, srtQry) {\n        for (var d = 0; d < data.length; d++) {\n            if (this.parent.grid.filterSettings.columns.length > 0 || this.parent.grid.searchSettings.key !== '') {\n                if (!isNullOrUndefined(getParentData(this.parent, data[d].uniqueID, true))) {\n                    this.storedIndex++;\n                    this.flatSortedData[this.storedIndex] = data[d];\n                }\n            }\n            else {\n                this.storedIndex++;\n                this.flatSortedData[this.storedIndex] = data[d];\n            }\n            if (data[d].hasChildRecords) {\n                var childSort = (new DataManager(data[d].childRecords).executeLocal(srtQry));\n                this.iterateSort(childSort, srtQry);\n            }\n        }\n    };\n    /**\n     * Sorts a column with the given options.\n     * @param {string} columnName - Defines the column name to be sorted.\n     * @param {SortDirection} direction - Defines the direction of sorting field.\n     * @param {boolean} isMultiSort - Specifies whether the previous sorted columns are to be maintained.\n     * @return {void}\n     */\n    Sort.prototype.sortColumn = function (columnName, direction, isMultiSort) {\n        this.parent.grid.sortColumn(columnName, direction, isMultiSort);\n    };\n    Sort.prototype.removeSortColumn = function (field) {\n        this.parent.grid.removeSortColumn(field);\n    };\n    /**\n     * The function used to update sortSettings of TreeGrid.\n     * @return {void}\n     * @hidden\n     */\n    Sort.prototype.updateModel = function () {\n        this.parent.setProperties({ sortSettings: getActualProperties(this.parent.grid.sortSettings) }, true);\n    };\n    /**\n     * Clears all the sorted columns of the TreeGrid.\n     * @return {void}\n     */\n    Sort.prototype.clearSorting = function () {\n        this.parent.grid.clearSorting();\n        this.updateModel();\n    };\n    /**\n     * Destroys the Sorting of TreeGrid.\n     * @method destroy\n     * @return {void}\n     */\n    Sort.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return Sort;\n}());\nexport { Sort };\n","import { Grid, ColumnMenu as GridColumnMenu } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnMenu module\n * @hidden\n */\nvar ColumnMenu = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function ColumnMenu(parent) {\n        Grid.Inject(GridColumnMenu);\n        this.parent = parent;\n    }\n    ColumnMenu.prototype.getColumnMenu = function () {\n        return this.parent.grid.columnMenuModule.getColumnMenu();\n    };\n    ColumnMenu.prototype.destroy = function () {\n        //this.parent.grid.columnMenuModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ColumnMenu.prototype.getModuleName = function () {\n        return 'columnMenu';\n    };\n    return ColumnMenu;\n}());\nexport { ColumnMenu };\n","import { Grid, ContextMenu as cmenu } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\n/**\n * ContextMenu Module for TreeGrid\n * @hidden\n */\nvar ContextMenu = /** @class */ (function () {\n    function ContextMenu(parent) {\n        Grid.Inject(cmenu);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.addEventListener = function () {\n        this.parent.on('contextMenuOpen', this.contextMenuOpen, this);\n        this.parent.on('contextMenuClick', this.contextMenuClick, this);\n    };\n    /**\n     * @hidden\n     */\n    ContextMenu.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('contextMenuOpen', this.contextMenuOpen);\n        this.parent.off('contextMenuClick', this.contextMenuClick);\n    };\n    ContextMenu.prototype.contextMenuOpen = function (args) {\n        var addRow = args.element.querySelector('#' + this.parent.element.id + '_gridcontrol_cmenu_AddRow');\n        var editRecord = args.element.querySelector('#' + this.parent.element.id + '_gridcontrol_cmenu_Edit');\n        if (addRow) {\n            if (this.parent.grid.editSettings.allowAdding === false) {\n                addRow.style.display = 'none';\n            }\n            else {\n                addRow.style.display = 'block';\n            }\n        }\n        if ((this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch')\n            && !(isNullOrUndefined(editRecord)) && !(editRecord.classList.contains('e-menu-hide'))) {\n            editRecord.style.display = 'none';\n        }\n    };\n    ContextMenu.prototype.contextMenuClick = function (args) {\n        if (args.item.id === 'Above' || args.item.id === 'Below') {\n            this.parent.notify('savePreviousRowPosition', args);\n            this.parent.setProperties({ editSettings: { newRowPosition: args.item.id } }, true);\n            this.parent.addRecord();\n        }\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ContextMenu.prototype.getModuleName = function () {\n        return 'contextMenu';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    ContextMenu.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * Gets the context menu element from the TreeGrid.\n     * @return {Element}\n     */\n    ContextMenu.prototype.getContextMenu = function () {\n        return this.parent.grid.contextMenuModule.getContextMenu();\n    };\n    return ContextMenu;\n}());\nexport { ContextMenu };\n","import { isNullOrUndefined, extend, setValue, getValue, merge } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, extendArray } from '../utils';\nimport { getUid } from '@syncfusion/ej2-grids';\nimport { updateParentRow, editAction } from './crud-actions';\n/**\n * `BatchEdit` module is used to handle batch editing actions.\n * @hidden\n */\nvar BatchEdit = /** @class */ (function () {\n    function BatchEdit(parent) {\n        this.batchChildCount = 0;\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.batchAddedRecords = [];\n        this.batchDeletedRecords = [];\n        this.batchAddRowRecord = [];\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.batchRecords = [];\n        this.currentViewRecords = [];\n        this.isAdd = false;\n        this.addEventListener();\n    }\n    BatchEdit.prototype.addEventListener = function () {\n        this.parent.on(events.cellSaved, this.cellSaved, this);\n        this.parent.on(events.batchAdd, this.batchAdd, this);\n        this.parent.on(events.beforeBatchAdd, this.beforeBatchAdd, this);\n        this.parent.on(events.batchSave, this.batchSave, this);\n        this.parent.on(events.beforeBatchDelete, this.beforeBatchDelete, this);\n        this.parent.on(events.beforeBatchSave, this.beforeBatchSave, this);\n        this.parent.on('batchPageAction', this.batchPageAction, this);\n        this.parent.on('batchCancelAction', this.batchCancelAction, this);\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.cellSaved, this.cellSaved);\n        this.parent.off(events.batchAdd, this.batchAdd);\n        this.parent.off(events.batchSave, this.batchSave);\n        this.parent.off(events.beforeBatchAdd, this.beforeBatchAdd);\n        this.parent.off(events.beforeBatchDelete, this.beforeBatchDelete);\n        this.parent.off(events.beforeBatchSave, this.beforeBatchSave);\n        this.parent.off('batchPageAction', this.batchPageAction);\n        this.parent.off('batchCancelAction', this.batchCancelAction);\n    };\n    /**\n     * To destroy the editModule\n     * @return {void}\n     * @hidden\n     */\n    BatchEdit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getBatchRecords = function () {\n        return this.batchRecords;\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getAddRowIndex = function () {\n        return this.addRowIndex;\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getSelectedIndex = function () {\n        return this.selectedIndex;\n    };\n    /**\n     * @hidden\n     */\n    BatchEdit.prototype.getBatchChildCount = function () {\n        return this.batchChildCount;\n    };\n    BatchEdit.prototype.batchPageAction = function () {\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var index;\n        if (!isNullOrUndefined(this.batchAddedRecords) && this.batchAddedRecords.length) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[primaryKey]; }).indexOf(this.batchAddedRecords[i][primaryKey]);\n                data.splice(index, 1);\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.batchDeletedRecords = this.currentViewRecords = [];\n    };\n    BatchEdit.prototype.cellSaved = function (args) {\n        var actualCellIndex = args.cell.cellIndex;\n        var frozenCols = this.parent.frozenColumns || this.parent.getFrozenColumns();\n        if (frozenCols && args.columnObject.index > frozenCols) {\n            actualCellIndex = actualCellIndex + frozenCols;\n        }\n        if (actualCellIndex === this.parent.treeColumnIndex) {\n            this.parent.renderModule.cellRender({ data: args.rowData, cell: args.cell,\n                column: this.parent.grid.getColumnByIndex(args.cell.cellIndex)\n            });\n        }\n        if (this.isAdd && this.parent.editSettings.mode === 'Batch' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var added = void 0;\n            var level = 'level';\n            var expanded = 'expanded';\n            var primaryKey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var currentDataIndex = void 0;\n            var parentRecord = void 0;\n            var indexvalue = void 0;\n            var index = 'index';\n            var parentItem = 'parentItem';\n            var uniqueID = 'uniqueID';\n            parentRecord = this.selectedIndex > -1 ? this.batchRecords[this.addRowIndex][parentItem] : null;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentIdMapping = void 0;\n            var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Top' || this.selectedIndex === -1 ? 0 :\n                this.parent.editSettings.newRowPosition === 'Above' ? this.addRowIndex\n                    : this.addRowIndex + 1;\n            rowObjectIndex = this.getActualRowObjectIndex(rowObjectIndex);\n            if (this.newBatchRowAdded) {\n                if (this.batchRecords.length) {\n                    idMapping = this.batchRecords[this.addRowIndex][this.parent.idMapping];\n                    parentIdMapping = this.batchRecords[this.addRowIndex][this.parent.parentIdMapping];\n                    if (this.batchRecords[this.addRowIndex][parentItem]) {\n                        parentUniqueID = this.batchRecords[this.addRowIndex][parentItem][uniqueID];\n                    }\n                }\n                this.batchAddedRecords = extendArray(this.batchAddedRecords);\n                this.batchAddRowRecord = extendArray(this.batchAddRowRecord);\n                this.batchAddRowRecord.push(this.batchRecords[this.addRowIndex]);\n                added = this.parent.grid.getRowsObject()[rowObjectIndex].changes;\n                added.uniqueID = getUid(this.parent.element.id + '_data_');\n                setValue('uniqueIDCollection.' + added.uniqueID, added, this.parent);\n                if (!added.hasOwnProperty('level')) {\n                    this.batchIndex = this.selectedIndex === -1 ? 0 : this.batchIndex;\n                    if (this.parent.editSettings.newRowPosition === 'Child') {\n                        added.primaryParent = parentRecord;\n                        if (this.selectedIndex > -1) {\n                            added.parentItem = extend({}, this.batchRecords[this.addRowIndex]);\n                            added.parentUniqueID = added.parentItem.uniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                            added.level = added.parentItem.level + 1;\n                            added.index = this.batchIndex;\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                            if (this.isSelfReference) {\n                                added[this.parent.parentIdMapping] = idMapping;\n                            }\n                            updateParentRow(primaryKey_1, added.parentItem, 'add', this.parent, this.isSelfReference, added);\n                        }\n                    }\n                    else if ((this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below')\n                        && !isNullOrUndefined(this.batchRecords[this.addRowIndex])) {\n                        added.level = this.batchRecords[this.addRowIndex][level];\n                        if (added.level && this.selectedIndex > -1) {\n                            added.parentItem = parentRecord;\n                            added.parentUniqueID = parentUniqueID;\n                            delete added.parentItem.childRecords;\n                            delete added.parentItem[this.parent.childMapping];\n                        }\n                        added.index = this.parent.editSettings.newRowPosition === 'Below' ? this.batchIndex : this.batchIndex - 1;\n                        if (this.parent.editSettings.newRowPosition === 'Below' && this.selectedIndex > -1) {\n                            var childRecordCount = findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                            var record = findChildrenRecords(this.batchRecords[this.addRowIndex])[childRecordCount - 1];\n                            record = isNullOrUndefined(record) ? this.batchRecords[this.addRowIndex] : record;\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                        }\n                        if (this.parent.editSettings.newRowPosition === 'Above' && this.selectedIndex > -1) {\n                            var record = this.batchRecords[this.addRowIndex];\n                            currentDataIndex = data.map(function (e) { return e[primaryKey_1]; }).indexOf(record[primaryKey_1]);\n                        }\n                        if (this.isSelfReference) {\n                            added[this.parent.parentIdMapping] = parentIdMapping;\n                        }\n                    }\n                    added.index = added.index === -1 ? 0 : added.index;\n                    added.hasChildRecords = false;\n                    added.childRecords = [];\n                    this.batchRecords.splice(added.index, 0, added);\n                    this.currentViewRecords.splice(added.index, 0, added);\n                    if (currentDataIndex) {\n                        indexvalue = currentDataIndex;\n                    }\n                    else {\n                        indexvalue = added.index;\n                    }\n                    if (this.parent.editSettings.newRowPosition !== 'Above') {\n                        indexvalue = added.index === 0 ? indexvalue : indexvalue + 1;\n                    }\n                    data.splice(indexvalue, 0, added);\n                    this.batchAddedRecords.push(added);\n                }\n                this.parent.grid.getRowsObject()[rowObjectIndex].data = added;\n                this.newBatchRowAdded = false;\n            }\n            if (this.parent.frozenColumns || this.parent.getFrozenColumns()\n                && this.parent.grid.getRowsObject()[rowObjectIndex].edit === 'add') {\n                merge(this.currentViewRecords[rowObjectIndex], this.parent.grid.getRowsObject()[rowObjectIndex].changes);\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchAdd = function (e) {\n        var isTabLastRow = 'isTabLastRow';\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.editModule[isTabLastRow]) {\n            e.cancel = true;\n            this.parent.editModule[isTabLastRow] = false;\n            return;\n        }\n        this.selectedIndex = this.parent.grid.selectedRowIndex;\n        this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n        this.addRowRecord = this.parent.getSelectedRecords()[0];\n    };\n    BatchEdit.prototype.batchAdd = function (e) {\n        if (this.parent.editSettings.newRowPosition !== 'Bottom') {\n            this.isAdd = true;\n            this.newBatchRowAdded = true;\n            var actualIndex = 0;\n            if (!this.batchRecords.length) {\n                this.batchAddedRecords = [];\n                this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n                this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top') {\n                var records = this.parent.grid.getCurrentViewRecords();\n                if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                    records = this.batchRecords;\n                }\n                this.updateChildCount(records);\n                this.parent.notify(events.beginAdd, {});\n                this.batchChildCount = 0;\n            }\n            this.updateRowIndex();\n            // update focus module, need to refix this once grid source modified.\n            var focusModule = getValue('focusModule', this.parent.grid);\n            var table = this.parent.getContentTable();\n            if (this.parent.getBatchChanges()[this.deletedRecords].length && this.parent.editSettings.newRowPosition === 'Above') {\n                actualIndex = e.row.rowIndex;\n                focusModule.getContent().matrix.matrix = this.matrix;\n            }\n            else {\n                actualIndex = table.getElementsByClassName('e-batchrow')[0].rowIndex;\n                // if (this.parent.frozenRows || this.parent.frozenColumns) {\n                //   actualIndex = this.batchIndex;\n                // }\n            }\n            focusModule.getContent().matrix.current = [actualIndex, focusModule.getContent().matrix.current[1]];\n        }\n    };\n    BatchEdit.prototype.beforeBatchDelete = function (e) {\n        if (!this.batchRecords.length) {\n            this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n            this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        }\n        var focusModule = getValue('focusModule', this.parent.grid);\n        this.matrix = focusModule.getContent().matrix.matrix;\n        this.parent = this.parent;\n        var row = [];\n        var records;\n        var data;\n        var primarykey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        data = this.parent.grid.getSelectedRecords()[this.parent.grid.getSelectedRecords().length - 1];\n        var childs = findChildrenRecords(data);\n        if (childs.length) {\n            for (var i = 0; i < childs.length; i++) {\n                var index = this.parent.grid.getRowIndexByPrimaryKey(childs[i][primarykey]);\n                row.push(this.parent.grid.getRows()[index]);\n                if (this.parent.frozenRows || this.parent.frozenColumns || this.parent.getFrozenColumns()) {\n                    row.push(this.parent.grid.getMovableRows()[index]);\n                }\n            }\n        }\n        if (!isNullOrUndefined(data.parentItem)) {\n            var parentItem = getParentData(this.parent, data.parentItem.uniqueID);\n            if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                var childIndex = parentItem.childRecords.indexOf(data);\n                parentItem.childRecords.splice(childIndex, 1);\n            }\n            this.batchDeletedRecords = extendArray(this.batchDeletedRecords);\n            this.batchDeletedRecords.push(data);\n        }\n        childs.push(data);\n        records = childs;\n        for (var i = 0; i < records.length; i++) {\n            var indexvalue = this.batchRecords.map(function (e) { return e[primarykey]; }).indexOf(records[i][primarykey]);\n            if (indexvalue !== -1) {\n                this.batchRecords.splice(indexvalue, 1);\n            }\n        }\n        for (var i = 0; i < row.length; i++) {\n            if (!isNullOrUndefined(row[i])) {\n                this.parent.grid.selectionModule.selectedRecords.push(row[i]);\n            }\n        }\n    };\n    BatchEdit.prototype.updateRowIndex = function () {\n        var rows = this.parent.grid.getDataRows();\n        for (var i = 0; i < rows.length; i++) {\n            rows[i].setAttribute('aria-rowindex', i.toString());\n        }\n        if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n            var mRows = this.parent.grid.getMovableDataRows();\n            for (var i = 0; i < mRows.length; i++) {\n                mRows[i].setAttribute('aria-rowindex', i.toString());\n            }\n        }\n    };\n    BatchEdit.prototype.updateChildCount = function (records) {\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        var addedRecords = 'addedRecords';\n        var deletedRecords = 'deletedRecords';\n        var parentItem = this.parent.editSettings.newRowPosition === 'Child' ? 'primaryParent' : 'parentItem';\n        for (var i = 0; i < this.parent.getBatchChanges()[addedRecords].length; i++) {\n            if (!isNullOrUndefined(this.parent.getBatchChanges()[addedRecords][i][parentItem])) {\n                if (this.parent.getBatchChanges()[addedRecords][i][parentItem][primaryKey] === records[this.addRowIndex][primaryKey]) {\n                    this.batchChildCount = this.batchChildCount + 1;\n                }\n            }\n        }\n    };\n    BatchEdit.prototype.beforeBatchSave = function (e) {\n        var changeRecords = 'changedRecords';\n        var deleterecords = 'deletedRecords';\n        var changedRecords = e.batchChanges[changeRecords];\n        if (e.batchChanges[changeRecords].length) {\n            var columnName = void 0;\n            for (var i = 0; i < changedRecords.length; i++) {\n                editAction({ value: changedRecords[i], action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName);\n            }\n        }\n        if (e.batchChanges[deleterecords].length) {\n            var deletedRecords = e.batchChanges[deleterecords];\n            var record = deletedRecords;\n            for (var i = 0; i < record.length; i++) {\n                this.deleteUniqueID(record[i].uniqueID);\n                var childs = findChildrenRecords(record[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                e.batchChanges[deleterecords] = e.batchChanges[deleterecords].concat(childs);\n            }\n        }\n        this.isAdd = false;\n    };\n    BatchEdit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    BatchEdit.prototype.batchCancelAction = function () {\n        var targetElement = 'targetElement';\n        var index;\n        var parentItem = 'parentItem';\n        var indexvalue = 'index';\n        var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n        var childRecords = 'childRecords';\n        var data = (this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n        var primaryKey = this.parent.grid.getPrimaryKeyFieldNames()[0];\n        if (!isNullOrUndefined(this.parent[targetElement])) {\n            var row = this.parent[targetElement].closest('tr');\n            this.parent.collapseRow(row);\n            this.parent[targetElement] = null;\n        }\n        if (!isNullOrUndefined(this.batchAddedRecords)) {\n            for (var i = 0; i < this.batchAddedRecords.length; i++) {\n                index = data.map(function (e) { return e[primaryKey]; }).indexOf(this.batchAddedRecords[i][primaryKey]);\n                data.splice(index, 1);\n                if (this.parent.editSettings.newRowPosition === 'Child') {\n                    index = currentViewRecords.map(function (e) { return e[primaryKey]; })\n                        .indexOf(this.batchAddedRecords[i][parentItem] ? this.batchAddedRecords[i][parentItem][primaryKey]\n                        : this.batchAddedRecords[i][primaryKey]);\n                    if (!isNullOrUndefined(currentViewRecords[index])) {\n                        var children = currentViewRecords[index][childRecords];\n                        for (var j = 0; children && j < children.length; j++) {\n                            if (children[j][primaryKey] === this.batchAddedRecords[i][primaryKey]) {\n                                currentViewRecords[index][childRecords].splice(j, 1);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n        if (!isNullOrUndefined(this.batchDeletedRecords)) {\n            for (var i = 0; i < this.batchDeletedRecords.length; i++) {\n                if (!isNullOrUndefined(this.batchDeletedRecords[i][parentItem])) {\n                    index = currentViewRecords.map(function (e) { return e[primaryKey]; })\n                        .indexOf(this.batchDeletedRecords[i][parentItem][primaryKey]);\n                    var positionIndex = this.batchDeletedRecords[i][indexvalue] === 0 ? this.batchDeletedRecords[i][indexvalue] :\n                        this.batchDeletedRecords[i][indexvalue] - 1;\n                    if (!isNullOrUndefined(currentViewRecords[index])) {\n                        currentViewRecords[index][childRecords].splice(positionIndex, 0, this.batchDeletedRecords[i]);\n                    }\n                }\n            }\n        }\n        this.batchAddedRecords = this.batchRecords = this.batchAddRowRecord = this.currentViewRecords = [];\n        this.batchRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchIndex = 0;\n        this.currentViewRecords = extendArray(this.parent.grid.getCurrentViewRecords());\n        this.batchDeletedRecords = [];\n        this.parent.refresh();\n    };\n    BatchEdit.prototype.batchSave = function (args) {\n        if (this.parent.editSettings.mode === 'Batch') {\n            var i = void 0;\n            var batchChanges = this.parent.getBatchChanges();\n            var deletedRecords = 'deletedRecords';\n            var addedRecords = 'addedRecords';\n            var index = 'index';\n            var uniqueID = 'uniqueID';\n            var data = (this.parent.grid.dataSource instanceof DataManager ?\n                this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n            var currentViewRecords = this.parent.grid.getCurrentViewRecords();\n            var primarykey_1 = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var level = 'level';\n            var addRecords = batchChanges[addedRecords];\n            var parentItem = 'parentItem';\n            var selectedIndex = void 0;\n            var addRowIndex = void 0;\n            var columnName = void 0;\n            var addRowRecord = void 0;\n            var childRecords = 'childRecords';\n            if (addRecords.length > 1 && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                addRecords.reverse();\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Bottom') {\n                data.splice(data.length - addRecords.length, addRecords.length);\n                if (!this.parent.allowPaging) {\n                    if (currentViewRecords.length > addRecords.length) {\n                        currentViewRecords.splice(currentViewRecords.length - addRecords.length, addRecords.length);\n                    }\n                }\n                else {\n                    var totalRecords = extendArray(data);\n                    var startIndex = totalRecords.map(function (e) { return e[primarykey_1]; })\n                        .indexOf(currentViewRecords[0][primarykey_1]);\n                    var endIndex = startIndex + this.parent.grid.pageSettings.pageSize;\n                    currentViewRecords = totalRecords.splice(startIndex, endIndex);\n                }\n            }\n            for (i = 0; i < addRecords.length; i++) {\n                var taskData = extend({}, addRecords[i]);\n                delete taskData.parentItem;\n                delete taskData.uniqueID;\n                delete taskData.index;\n                delete taskData.level;\n                delete taskData.hasChildRecords;\n                delete taskData.childRecords;\n                delete taskData.parentUniqueID;\n                if (!isNullOrUndefined(taskData.primaryParent)) {\n                    delete taskData.primaryParent;\n                }\n                addRecords[i].taskData = taskData;\n                addRowRecord = this.batchAddRowRecord[i];\n                if (isNullOrUndefined(addRowRecord)) {\n                    addRowRecord = this.batchAddRowRecord[i - 1];\n                }\n                if (this.isSelfReference) {\n                    if (!isNullOrUndefined(addRecords[i].parentItem)) {\n                        updateParentRow(primarykey_1, addRecords[i].parentItem, 'add', this.parent, this.isSelfReference, addRecords[i]);\n                    }\n                }\n                if (!isNullOrUndefined(addRowRecord)) {\n                    addRowIndex = addRowRecord.index;\n                }\n                if (this.parent.editSettings.newRowPosition !== 'Top' && this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    if (isNullOrUndefined(addRecords[i].parentItem) && this.selectedIndex === -1) {\n                        selectedIndex = -1;\n                        addRowRecord = null;\n                    }\n                }\n                editAction({ value: addRecords[i], action: 'add' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                selectedIndex = null;\n                if (this.parent.editSettings.newRowPosition === 'Child' && !isNullOrUndefined(addRecords[i][parentItem])) {\n                    var indexValue = currentViewRecords.map(function (e) { return e[primarykey_1]; })\n                        .indexOf(addRecords[i][parentItem][primarykey_1]);\n                    var children = currentViewRecords[indexValue][childRecords];\n                    for (var j = 0; j < children.length; j++) {\n                        if (children[j][primarykey_1] === addRecords[i][primarykey_1]) {\n                            currentViewRecords[indexValue][childRecords].splice(j, 1);\n                        }\n                    }\n                }\n            }\n            if (batchChanges[deletedRecords].length) {\n                for (i = 0; i < batchChanges[deletedRecords].length; i++) {\n                    editAction({ value: batchChanges[deletedRecords][i], action: 'delete' }, this.parent, this.isSelfReference, addRowIndex, selectedIndex, columnName, addRowRecord);\n                }\n            }\n            this.parent.parentData = [];\n            for (var i_1 = 0; i_1 < data.length; i_1++) {\n                data[i_1][index] = i_1;\n                setValue('uniqueIDCollection.' + data[i_1][uniqueID] + '.index', i_1, this.parent);\n                if (!data[i_1][level]) {\n                    this.parent.parentData.push(data[i_1]);\n                }\n            }\n        }\n        this.batchAddRowRecord = this.batchAddedRecords = this.batchRecords = this.batchDeletedRecords = this.currentViewRecords = [];\n    };\n    BatchEdit.prototype.getActualRowObjectIndex = function (index) {\n        var rows = this.parent.grid.getDataRows();\n        if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n            && this.selectedIndex > -1) {\n            if (!isNullOrUndefined(this.batchRecords[this.addRowIndex]) && this.batchRecords[this.addRowIndex].expanded) {\n                if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                    || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                    if (this.parent.editSettings.newRowPosition !== 'Child') {\n                        var batchChildCount = this.getBatchChildCount();\n                        index = index + batchChildCount;\n                    }\n                }\n                else {\n                    index += findChildrenRecords(this.batchRecords[this.addRowIndex]).length;\n                }\n            }\n            if (index >= rows.length) {\n                index = rows.length - 1;\n            }\n            this.updateChildCount(this.parent.grid.getCurrentViewRecords());\n            if (this.batchChildCount) {\n                index += this.batchChildCount;\n            }\n            this.batchChildCount = 0;\n        }\n        return index;\n    };\n    return BatchEdit;\n}());\nexport { BatchEdit };\n","import { Grid, Edit as GridEdit, getUid, getObject } from '@syncfusion/ej2-grids';\nimport { parentsUntil } from '@syncfusion/ej2-grids';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, extend, setValue, removeClass, addClass, getValue, isBlazor } from '@syncfusion/ej2-base';\nimport { updateBlazorTemplate } from '@syncfusion/ej2-base';\nimport { DataManager, RemoteSaveAdaptor } from '@syncfusion/ej2-data';\nimport { findChildrenRecords, getParentData, isRemoteData } from '../utils';\nimport { editAction, updateParentRow } from './crud-actions';\nimport { BatchEdit } from './batch-edit';\n/**\n * TreeGrid Edit Module\n * The `Edit` module is used to handle editing actions.\n */\nvar Edit = /** @class */ (function () {\n    /**\n     * Constructor for Edit module\n     */\n    function Edit(parent) {\n        this.addedRecords = 'addedRecords';\n        this.deletedRecords = 'deletedRecords';\n        this.prevAriaRowIndex = '-1';\n        Grid.Inject(GridEdit);\n        this.parent = parent;\n        this.isSelfReference = !isNullOrUndefined(parent.parentIdMapping);\n        this.previousNewRowPosition = null;\n        this.internalProperties = {};\n        this.batchEditModule = new BatchEdit(this.parent);\n        this.addEventListener();\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Edit.prototype.getModuleName = function () {\n        return 'edit';\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.addEventListener = function () {\n        this.parent.on(events.crudAction, this.crudAction, this);\n        this.parent.on(events.beginEdit, this.beginEdit, this);\n        this.parent.on(events.beginAdd, this.beginAdd, this);\n        this.parent.on(events.recordDoubleClick, this.recordDoubleClick, this);\n        this.parent.on(events.cellSave, this.cellSave, this);\n        this.parent.on(events.batchCancel, this.batchCancel, this);\n        this.parent.grid.on(events.keyPressed, this.keyPressed, this);\n        this.parent.grid.on('batchedit-form', this.lastCellTab, this);\n        this.parent.grid.on('content-ready', this.contentready, this);\n        this.parent.on(events.cellEdit, this.cellEdit, this);\n        this.parent.on('actionBegin', this.editActionEvents, this);\n        this.parent.on('actionComplete', this.editActionEvents, this);\n        this.parent.grid.on(events.doubleTap, this.recordDoubleClick, this);\n        this.parent.grid.on('dblclick', this.gridDblClick, this);\n        this.parent.on('savePreviousRowPosition', this.savePreviousRowPosition, this);\n        // this.parent.on(events.beforeDataBound, this.beforeDataBound, this);\n        this.parent.grid.on(events.beforeStartEdit, this.beforeStartEdit, this);\n        this.parent.grid.on(events.beforeBatchCancel, this.beforeBatchCancel, this);\n        this.parent.grid.on('reset-edit-props', this.resetIsOnBatch, this);\n        this.parent.grid.on('get-row-position', this.getRowPosition, this);\n    };\n    Edit.prototype.gridDblClick = function (e) {\n        this.doubleClickTarget = e.target;\n    };\n    Edit.prototype.getRowPosition = function (addArgs) {\n        addArgs.newRowPosition = this.parent.editSettings.newRowPosition;\n        addArgs.addRowIndex = this.addRowIndex;\n        addArgs.ariaRowIndex = +this.prevAriaRowIndex;\n    };\n    Edit.prototype.beforeStartEdit = function (args) {\n        this.parent.trigger(events.actionBegin, args);\n    };\n    Edit.prototype.beforeBatchCancel = function (args) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            this.parent.trigger(events.actionComplete, args);\n        }\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.crudAction, this.crudAction);\n        this.parent.off(events.beginEdit, this.beginEdit);\n        this.parent.off(events.beginAdd, this.beginAdd);\n        this.parent.off(events.recordDoubleClick, this.recordDoubleClick);\n        this.parent.off(events.batchCancel, this.batchCancel);\n        this.parent.grid.off(events.keyPressed, this.keyPressed);\n        this.parent.grid.off('batchedit-form', this.lastCellTab);\n        this.parent.grid.off('content-ready', this.contentready);\n        this.parent.off(events.cellEdit, this.cellEdit);\n        this.parent.off('actionBegin', this.editActionEvents);\n        this.parent.off('actionComplete', this.editActionEvents);\n        this.parent.grid.off(events.doubleTap, this.recordDoubleClick);\n        this.parent.off('savePreviousRowPosition', this.savePreviousRowPosition);\n        this.parent.grid.off(events.beforeStartEdit, this.beforeStartEdit);\n        this.parent.grid.off(events.beforeBatchCancel, this.beforeBatchCancel);\n        this.parent.grid.off('dblclick', this.gridDblClick);\n        this.parent.grid.off('reset-edit-props', this.resetIsOnBatch);\n        this.parent.grid.off('get-row-position', this.getRowPosition);\n        //this.parent.grid.off('click', this.gridSingleClick);\n    };\n    /**\n     * To destroy the editModule\n     * @return {void}\n     * @hidden\n     */\n    Edit.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.applyFormValidation = function (cols) {\n        this.parent.grid.editModule.applyFormValidation(cols);\n    };\n    Edit.prototype.editActionEvents = function (args) {\n        var eventArgs = getObject('editAction', args);\n        var eventName = getObject('name', eventArgs);\n        var treeObj = this.parent;\n        var adaptor = treeObj.dataSource.adaptor;\n        if ((isRemoteData(treeObj) || adaptor instanceof RemoteSaveAdaptor) &&\n            (eventArgs.requestType === 'save' && eventArgs.action === 'add') &&\n            (treeObj.editSettings.newRowPosition === 'Child' || treeObj.editSettings.newRowPosition === 'Below'\n                || treeObj.editSettings.newRowPosition === 'Above')) {\n            if (eventName === 'actionBegin') {\n                var rowIndex = isNullOrUndefined(eventArgs.row) || !Object.keys(eventArgs.row).length ? this.selectedIndex :\n                    eventArgs.row.rowIndex - 1;\n                var keyData = (!isNullOrUndefined(rowIndex) && rowIndex !== -1) ?\n                    treeObj.getCurrentViewRecords()[rowIndex][treeObj.getPrimaryKeyFieldNames()[0]] : -1;\n                treeObj.grid.query.addParams('relationalKey', keyData);\n            }\n            else if (eventName === 'actionComplete') {\n                var paramsLength = treeObj.grid.query.params.length;\n                for (var i = 0; i < paramsLength; i++) {\n                    if (treeObj.grid.query.params[i].key === 'relationalKey') {\n                        treeObj.grid.query.params.splice(i);\n                    }\n                }\n            }\n        }\n        if (this.parent.editSettings.mode === 'Batch' && eventArgs.requestType === 'paging') {\n            this.parent.notify('batchPageAction', {});\n        }\n    };\n    Edit.prototype.recordDoubleClick = function (args) {\n        var target = args.target;\n        if (isNullOrUndefined(target.closest('td.e-rowcell'))) {\n            return;\n        }\n        var column = this.parent.grid.getColumnByIndex(+target.closest('td.e-rowcell').getAttribute('aria-colindex'));\n        if (this.parent.editSettings.mode === 'Cell' && !this.isOnBatch && column && !column.isPrimaryKey &&\n            column.allowEditing && !(target.classList.contains('e-treegridexpand') ||\n            target.classList.contains('e-treegridcollapse')) && this.parent.editSettings.allowEditOnDblClick) {\n            this.isOnBatch = true;\n            this.parent.grid.setProperties({ selectedRowIndex: args.rowIndex }, true);\n            if (this.parent.enableVirtualization) {\n                var tr = parentsUntil(args.target, 'e-row');\n                this.prevAriaRowIndex = tr.getAttribute('aria-rowindex');\n                tr.setAttribute('aria-rowindex', tr.rowIndex + '');\n            }\n            this.updateGridEditMode('Batch');\n        }\n    };\n    Edit.prototype.updateGridEditMode = function (mode) {\n        this.parent.grid.setProperties({ editSettings: { mode: mode } }, true);\n        var updateMethod = getObject('updateEditObj', this.parent.grid.editModule);\n        updateMethod.apply(this.parent.grid.editModule);\n        this.parent.grid.isEdit = false;\n    };\n    Edit.prototype.resetIsOnBatch = function () {\n        if (this.parent.enableVirtualization && this.parent.editSettings.mode === 'Cell') {\n            this.isOnBatch = false;\n            this.updateGridEditMode('Normal');\n        }\n    };\n    Edit.prototype.keyPressed = function (args) {\n        if (this.isOnBatch || (this.parent.editSettings.mode === 'Cell' && isBlazor() && this.parent.isServerRendered)) {\n            this.keyPress = args.action;\n        }\n        if (args.action === 'f2') {\n            this.recordDoubleClick(args);\n        }\n    };\n    Edit.prototype.deleteUniqueID = function (value) {\n        var idFilter = 'uniqueIDFilterCollection';\n        delete this.parent[idFilter][value];\n        var id = 'uniqueIDCollection';\n        delete this.parent[id][value];\n    };\n    Edit.prototype.cellEdit = function (args) {\n        var _this = this;\n        var promise = 'promise';\n        var prom = args[promise];\n        delete args[promise];\n        if (this.parent.enableVirtualization && !isNullOrUndefined(this.prevAriaRowIndex)) {\n            args.row.setAttribute('aria-rowindex', this.prevAriaRowIndex);\n            this.prevAriaRowIndex = undefined;\n        }\n        if (this.keyPress !== 'enter') {\n            this.parent.trigger(events.cellEdit, args, function (celleditArgs) {\n                if (!celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.enableToolbarItems('edit');\n                }\n                else if (celleditArgs.cancel && _this.parent.editSettings.mode === 'Cell') {\n                    _this.isOnBatch = false;\n                    _this.updateGridEditMode('Normal');\n                }\n                if (!isNullOrUndefined(prom)) {\n                    prom.resolve(celleditArgs);\n                }\n            });\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell') {\n            if (this.keyPress === 'tab' || this.keyPress === 'shiftTab') {\n                this.keyPress = null;\n            }\n            else if (this.keyPress === 'enter') {\n                args.cancel = true;\n                this.keyPress = null;\n            }\n        }\n        // if (this.isAdd && this.parent.editSettings.mode === 'Batch' && !args.cell.parentElement.classList.contains('e-insertedrow')) {\n        //   this.isAdd = false;\n        // }\n    };\n    Edit.prototype.enableToolbarItems = function (request) {\n        if (!isNullOrUndefined(this.parent.grid.toolbarModule)) {\n            var toolbarID = this.parent.element.id + '_gridcontrol_';\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'add', toolbarID + 'edit', toolbarID + 'delete'], request === 'save');\n            this.parent.grid.toolbarModule.enableItems([toolbarID + 'update', toolbarID + 'cancel'], request === 'edit');\n        }\n    };\n    Edit.prototype.batchCancel = function (e) {\n        if (this.parent.editSettings.mode === 'Cell') {\n            var cellDetails = getValue('editModule.cellDetails', this.parent.grid.editModule);\n            var selectRowIndex = cellDetails.rowIndex;\n            var treeCell = void 0;\n            if (this.parent.allowRowDragAndDrop === true && !(this.parent.rowDropSettings.targetID)) {\n                treeCell = this.parent.getRows()[selectRowIndex].cells[this.parent.treeColumnIndex + 1];\n            }\n            else {\n                treeCell = this.parent.getRows()[selectRowIndex].cells[this.parent.treeColumnIndex];\n            }\n            this.parent.renderModule.cellRender({\n                data: cellDetails.rowData,\n                cell: treeCell,\n                column: this.parent.grid.getColumns()[this.parent.treeColumnIndex]\n            });\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n        }\n        if (this.parent.editSettings.mode === 'Batch') {\n            this.parent.notify('batchCancelAction', {});\n        }\n    };\n    Edit.prototype.cellSave = function (args) {\n        if (this.parent.editSettings.mode === 'Cell' && this.parent.element.querySelector('form')) {\n            args.cancel = true;\n            var editModule = 'editModule';\n            setValue('isEdit', false, this.parent.grid);\n            setValue('isEditCollapse', true, this.parent);\n            args.rowData[args.columnName] = args.value;\n            var row = void 0;\n            var mRow = void 0;\n            if (isNullOrUndefined(args.cell)) {\n                row = this.parent.grid.editModule[editModule].form.parentElement.parentNode;\n            }\n            else {\n                row = args.cell.parentNode;\n            }\n            var rowIndex_1;\n            var primaryKeys_1 = this.parent.getPrimaryKeyFieldNames();\n            if (isNullOrUndefined(row)) {\n                this.parent.grid.getCurrentViewRecords().filter(function (e, i) {\n                    if (e[primaryKeys_1[0]] === args.rowData[primaryKeys_1[0]]) {\n                        rowIndex_1 = i;\n                        return;\n                    }\n                });\n            }\n            else {\n                rowIndex_1 = (this.parent.getRows().indexOf(row) === -1 && this.parent.frozenColumns > 0) ?\n                    this.parent.grid.getMovableRows().indexOf(row) : this.parent.getRows().indexOf(row);\n            }\n            var arg = {};\n            extend(arg, args);\n            arg.cancel = false;\n            arg.type = 'save';\n            row = this.parent.grid.getRows()[row.rowIndex];\n            this.parent.trigger(events.actionBegin, arg);\n            if (!arg.cancel) {\n                if ((row.rowIndex === this.parent.getCurrentViewRecords().length - 1) && this.keyPress === 'tab') {\n                    this.isTabLastRow = true;\n                }\n                this.blazorTemplates(args);\n                this.updateCell(args, rowIndex_1);\n                if (this.parent.grid.aggregateModule) {\n                    this.parent.grid.aggregateModule.refresh(args.rowData);\n                }\n                this.parent.grid.editModule.destroyWidgets([this.parent.grid.getColumnByField(args.columnName)]);\n                this.parent.grid.editModule.formObj.destroy();\n                if (this.keyPress !== 'tab' && this.keyPress !== 'shiftTab') {\n                    this.updateGridEditMode('Normal');\n                    this.isOnBatch = false;\n                }\n                this.enableToolbarItems('save');\n                if (this.parent.frozenColumns > 0) {\n                    mRow = this.parent.grid.getMovableRows()[rowIndex_1];\n                    removeClass([mRow], ['e-editedrow', 'e-batchrow']);\n                    removeClass(mRow.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n                }\n                removeClass([row], ['e-editedrow', 'e-batchrow']);\n                removeClass(row.querySelectorAll('.e-rowcell'), ['e-editedbatchcell', 'e-updatedtd']);\n                this.parent.grid.focusModule.restoreFocus();\n                editAction({ value: args.rowData, action: 'edit' }, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, args.columnName);\n                var saveArgs = {\n                    type: 'save', column: this.parent.getColumnByField(args.columnName), data: args.rowData,\n                    previousData: args.previousValue, row: row, target: args.cell\n                };\n                this.parent.trigger(events.actionComplete, saveArgs);\n            }\n            else {\n                this.parent.grid.isEdit = true;\n            }\n        }\n    };\n    Edit.prototype.lastCellTab = function (formObj) {\n        if (!this.parent.grid.isEdit && this.isOnBatch && this.keyPress === 'tab' && this.parent.editSettings.mode === 'Cell') {\n            this.updateGridEditMode('Normal');\n            this.isOnBatch = false;\n            this.keyPress = null;\n        }\n    };\n    Edit.prototype.blazorTemplates = function (args) {\n        if (isBlazor() && this.parent.isServerRendered) {\n            var cols = this.parent.grid.getColumns();\n            var colModel = 'columnModel';\n            var columnModel = this.parent.grid[colModel];\n            var str = 'isStringTemplate';\n            for (var i = 0; i < cols.length; i++) {\n                if (columnModel[i].template) {\n                    var templateID = this.parent.grid.element.id + cols[i].uid;\n                    columnModel[i].getColumnTemplate()(extend({ 'index': [i] }, args.rowData), this.parent.grid, 'template', templateID, this.parent.grid[str], null);\n                }\n                if (cols[i].editTemplate) {\n                    updateBlazorTemplate(this.parent.grid.element.id + cols[i].uid + 'editTemplate', 'EditTemplate', cols[i]);\n                }\n                if (cols[i].template) {\n                    updateBlazorTemplate(this.parent.grid.element.id + cols[i].uid, 'Template', cols[i], false);\n                }\n            }\n        }\n    };\n    Edit.prototype.updateCell = function (args, rowIndex) {\n        this.parent.grid.editModule.updateRow(rowIndex, args.rowData);\n        this.parent.grid.getRowsObject()[rowIndex].data = args.rowData;\n    };\n    Edit.prototype.crudAction = function (details, columnName) {\n        editAction(details, this.parent, this.isSelfReference, this.addRowIndex, this.selectedIndex, columnName, this.addRowRecord);\n        this.parent.parentData = [];\n        var data = this.parent.grid.dataSource instanceof DataManager ?\n            this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource;\n        for (var i = 0; i < data.length; i++) {\n            data[i].index = i;\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            if (details.value[key] === data[i][key]) {\n                if (details.action === 'add') {\n                    data[i].level = this.internalProperties.level;\n                    data[i].taskData = this.internalProperties.taskData;\n                    data[i].uniqueID = this.internalProperties.uniqueID;\n                    if (!isNullOrUndefined(this.internalProperties.parentItem)) {\n                        data[i].parentItem = this.internalProperties.parentItem;\n                        data[i].parentUniqueID = this.internalProperties.parentUniqueID;\n                    }\n                    data[i].childRecords = this.internalProperties.childRecords;\n                }\n            }\n            setValue('uniqueIDCollection.' + data[i].uniqueID + '.index', i, this.parent);\n            if (!data[i].level) {\n                this.parent.parentData.push(data[i]);\n            }\n        }\n        if (details.action === 'add' && this.previousNewRowPosition != null) {\n            this.parent.setProperties({ editSettings: { newRowPosition: this.previousNewRowPosition } }, true);\n            this.previousNewRowPosition = null;\n        }\n    };\n    Edit.prototype.updateIndex = function (data, rows, records) {\n        for (var j = 0; j < this.parent.getDataRows().length; j++) {\n            var data1 = records[j];\n            var index = getValue('uniqueIDCollection.' + data1.uniqueID + '.index', this.parent);\n            data1.index = index;\n            if (!isNullOrUndefined(data1.parentItem)) {\n                var parentIndex = getValue('uniqueIDCollection.' + data1.parentItem.uniqueID + '.index', this.parent);\n                data1.parentItem.index = parentIndex;\n            }\n        }\n        var count = -1;\n        for (var k = 0; k < this.parent.getRows().length; k++) {\n            if (!rows[k].classList.contains('e-detailrow')) {\n                count++;\n            }\n            var data2 = records[count];\n            var index = data2.index;\n            var level = data2.level;\n            var row = rows[k];\n            if (!isNullOrUndefined(data2.parentItem)) {\n                index = getValue('uniqueIDCollection.' + data2.parentItem.uniqueID + '.index', this.parent);\n            }\n            var treecell = row.cells[this.parent.treeColumnIndex];\n            for (var l = 0; l < treecell.classList.length; l++) {\n                var value = treecell.classList[l];\n                var remove = /e-gridrowindex/i;\n                var removed = /e-griddetailrowindex/i;\n                var result = value.match(remove);\n                var results = value.match(removed);\n                if (result != null) {\n                    removeClass([treecell], value);\n                }\n                if (results != null) {\n                    removeClass([treecell], value);\n                }\n            }\n            if (!rows[k].classList.contains('e-detailrow')) {\n                addClass([treecell], 'e-gridrowindex' + index + 'level' + level);\n            }\n            else {\n                addClass([treecell], 'e-griddetailrowindex' + index + 'level' + level);\n            }\n        }\n    };\n    Edit.prototype.beginAdd = function (args) {\n        var position;\n        var index = this.addRowIndex;\n        var records = this.parent.grid.getCurrentViewRecords();\n        if (this.parent.editSettings.mode === 'Batch') {\n            index = this.batchEditModule.getAddRowIndex();\n            this.selectedIndex = this.batchEditModule.getSelectedIndex();\n            if (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                || this.parent.getBatchChanges()[this.deletedRecords].length) {\n                records = this.batchEditModule.getBatchRecords();\n            }\n        }\n        var rows = this.parent.grid.getDataRows();\n        var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n        var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n        var withinRange = this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n        var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n        if (this.parent.editSettings.mode !== 'Dialog') {\n            if (this.parent.editSettings.newRowPosition === 'Above') {\n                position = 'before';\n            }\n            else if ((this.parent.editSettings.newRowPosition === 'Below' || this.parent.editSettings.newRowPosition === 'Child')\n                && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                position = 'after';\n                if (!isNullOrUndefined(records[index]) && records[index].expanded) {\n                    if (this.parent.editSettings.mode === 'Batch' && (this.parent.getBatchChanges()[this.addedRecords].length > 1\n                        || this.parent.getBatchChanges()[this.deletedRecords].length)) {\n                        index += findChildrenRecords(records[index]).length;\n                        if (this.parent.editSettings.newRowPosition !== 'Child') {\n                            var batchChildCount = this.batchEditModule.getBatchChildCount();\n                            index = index + batchChildCount;\n                        }\n                    }\n                    else {\n                        index += findChildrenRecords(records[index]).length;\n                    }\n                }\n            }\n            if ((this.selectedIndex > -1 || isVirtualization) && withinRange\n                && (index || (this.parent.editSettings.newRowPosition === 'Child'\n                    || this.parent.editSettings.newRowPosition === 'Below'))) {\n                if (index >= rows.length) {\n                    index = rows.length - 2;\n                }\n                var r = 'rows';\n                var newRowObject = this.parent.grid.contentModule[r][0];\n                var focussedElement = document.activeElement;\n                rows[index + 1][position](rows[0]);\n                setValue('batchIndex', index + 1, this.batchEditModule);\n                var rowObjectIndex = this.parent.editSettings.newRowPosition === 'Above' ? index : index + 1;\n                this.parent.grid.contentModule[r].splice(0, 1);\n                this.parent.grid.contentModule[r].splice(rowObjectIndex, 0, newRowObject);\n                if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n                    var movableRows = this.parent.getMovableDataRows();\n                    var frows = 'freezeRows';\n                    var newFreezeRowObject = this.parent.grid.getRowsObject()[0];\n                    movableRows[index + 1][position](movableRows[0]);\n                    this.parent.grid.contentModule[frows].splice(0, 1);\n                    this.parent.grid.contentModule[frows].splice(rowObjectIndex, 0, newFreezeRowObject);\n                    setValue('batchIndex', index + 1, this.batchEditModule);\n                }\n                if (this.parent.editSettings.mode === 'Row' || this.parent.editSettings.mode === 'Cell') {\n                    var errors = this.parent.grid.getContentTable().querySelectorAll('.e-griderror');\n                    for (var i = 0; i < errors.length; i++) {\n                        errors[i].remove();\n                    }\n                    setValue('errorRules', [], this.parent.grid.editModule.formObj);\n                }\n                if (isVirtualization) {\n                    this.prevAriaRowIndex = '-1';\n                }\n                focussedElement.focus();\n            }\n        }\n    };\n    // private beforeDataBound(args: BeforeDataBoundArgs): void {\n    //   if (this.parent.grid.isEdit && this.parent.dataSource instanceof DataManager &&\n    //         this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor) {\n    //     let action: string = getValue('action', args);\n    //     let data: Object = getValue('data', args);\n    //     if (action === 'edit' && !isNullOrUndefined(this.editedData)) {\n    //       data = extend(this.editedData, data);\n    //       this.editedData = null;\n    //     }\n    //     if (!isNullOrUndefined(this.addedData)) {\n    //       let addedData: Object = args.result[args.result.length - 1];\n    //       addedData = extend(this.addedData, addedData);\n    //       this.addedData = null;\n    //       args.result.splice(this.addedIndex, 0, addedData);\n    //       args.result.splice(args.result.length, 1);\n    //     }\n    //   }\n    // }\n    Edit.prototype.beginEdit = function (args) {\n        if (args.requestType === 'refresh' && this.isOnBatch) {\n            args.cancel = true;\n            return;\n        }\n        if (this.parent.editSettings.mode === 'Cell' && args.requestType === 'beginEdit') {\n            args.cancel = true;\n            return;\n        }\n        if (this.doubleClickTarget && (this.doubleClickTarget.classList.contains('e-treegridexpand') ||\n            this.doubleClickTarget.classList.contains('e-treegridcollapse') || this.doubleClickTarget.classList.contains('e-frame'))) {\n            args.cancel = true;\n            this.doubleClickTarget = null;\n            return;\n        }\n        if (args.requestType === 'delete') {\n            var data = args.data;\n            for (var i = 0; i < data.length; i++) {\n                this.deleteUniqueID(data[i].uniqueID);\n                var childs = findChildrenRecords(data[i]);\n                for (var c = 0; c < childs.length; c++) {\n                    this.deleteUniqueID(childs[c].uniqueID);\n                }\n                args.data = data.concat(childs);\n            }\n        }\n        if (args.requestType === 'add') {\n            this.selectedIndex = this.parent.grid.selectedRowIndex;\n            if (this.parent.enableVirtualization) {\n                var selector = '.e-row[aria-rowindex=\"' + this.selectedIndex + '\"]';\n                var row = void 0;\n                if (this.selectedIndex > -1 && this.parent.editSettings.newRowPosition !== 'Top' &&\n                    this.parent.editSettings.newRowPosition !== 'Bottom') {\n                    this.prevAriaRowIndex = this.selectedIndex.toString();\n                    row = this.parent.getContent().querySelector(selector);\n                    this.addRowIndex = row ? row.rowIndex : 0;\n                }\n                else {\n                    if (this.prevAriaRowIndex && this.prevAriaRowIndex !== '-1') {\n                        selector = '.e-row[aria-rowindex=\"' + this.prevAriaRowIndex + '\"]';\n                        row = this.parent.getContent().querySelector(selector);\n                        this.addRowIndex = row ? row.rowIndex : 0;\n                    }\n                    else {\n                        this.addRowIndex = 0;\n                    }\n                }\n            }\n            else {\n                this.addRowIndex = this.parent.grid.selectedRowIndex > -1 ? this.parent.grid.selectedRowIndex : 0;\n            }\n            this.addRowRecord = this.parent.getSelectedRecords()[0];\n        }\n        args = this.beginAddEdit(args);\n        // if (args.requestType === 'save' &&\n        //    ((this.parent.dataSource instanceof DataManager && this.parent.dataSource.adaptor instanceof RemoteSaveAdaptor))) {\n        //      if (args.action === 'edit') {\n        //           this.editedData = args.data;\n        //      } else if (args.action === 'add') {\n        //           this.addedData = value;\n        //      }\n        // }\n    };\n    Edit.prototype.savePreviousRowPosition = function (args) {\n        if (this.previousNewRowPosition === null) {\n            this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        }\n    };\n    Edit.prototype.beginAddEdit = function (args) {\n        var value = args.data;\n        if (args.action === 'add') {\n            var key = this.parent.grid.getPrimaryKeyFieldNames()[0];\n            var position = null;\n            value.taskData = isNullOrUndefined(value.taskData) ? extend({}, args.data) : value.taskData;\n            // let currentData: ITreeData[] = this.batchRecords.length ? this.batchRecords :\n            //            <ITreeData[]>this.parent.grid.getCurrentViewRecords();\n            var currentData = this.parent.grid.getCurrentViewRecords();\n            var index = this.addRowIndex;\n            value.uniqueID = getUid(this.parent.element.id + '_data_');\n            setValue('uniqueIDCollection.' + value.uniqueID, value, this.parent);\n            var level = 0;\n            var dataIndex = void 0;\n            var idMapping = void 0;\n            var parentUniqueID = void 0;\n            var parentItem = void 0;\n            var parentIdMapping = void 0;\n            var isVirtualization = this.parent.enableVirtualization && this.addRowIndex > -1 && this.prevAriaRowIndex !== '-1';\n            var rows = this.parent.getRows();\n            var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n            var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n            var withinRange = this.selectedIndex >= firstAriaIndex && this.selectedIndex <= lastAriaIndex;\n            if (currentData.length) {\n                dataIndex = currentData[this.addRowIndex].index;\n                idMapping = currentData[this.addRowIndex][this.parent.idMapping];\n                parentIdMapping = currentData[this.addRowIndex][this.parent.parentIdMapping];\n                if (currentData[this.addRowIndex].parentItem) {\n                    parentUniqueID = currentData[this.addRowIndex].parentItem.uniqueID;\n                }\n                parentItem = currentData[this.addRowIndex].parentItem;\n            }\n            if (this.parent.editSettings.newRowPosition !== 'Top' && currentData.length) {\n                level = currentData[this.addRowIndex].level;\n                if (this.parent.editSettings.newRowPosition === 'Above') {\n                    position = 'before';\n                    index = currentData[this.addRowIndex].index;\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Below') {\n                    position = 'after';\n                    var childRecordCount = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex = currentData[this.addRowIndex].index;\n                    index = (childRecordCount > 0) ? (currentDataIndex + childRecordCount) : (currentDataIndex);\n                }\n                else if (this.parent.editSettings.newRowPosition === 'Child') {\n                    position = 'after';\n                    if ((this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                        value.parentItem = extend({}, currentData[this.addRowIndex]);\n                        value.parentUniqueID = value.parentItem.uniqueID;\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    var childRecordCount1 = findChildrenRecords(currentData[this.addRowIndex]).length;\n                    var currentDataIndex1 = currentData[this.addRowIndex].index;\n                    value.level = level + 1;\n                    index = (childRecordCount1 > 0) ? (currentDataIndex1 + childRecordCount1) : (currentDataIndex1);\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = idMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (this.parent.editSettings.newRowPosition === 'Above' || this.parent.editSettings.newRowPosition === 'Below') {\n                    if ((this.selectedIndex > -1 || isVirtualization) && level && withinRange) {\n                        value.parentUniqueID = parentUniqueID;\n                        value.parentItem = extend({}, parentItem);\n                        delete value.parentItem.childRecords;\n                        delete value.parentItem[this.parent.childMapping];\n                    }\n                    value.level = level;\n                    if (this.isSelfReference) {\n                        value.taskData[this.parent.parentIdMapping] = value[this.parent.parentIdMapping] = parentIdMapping;\n                        if (!isNullOrUndefined(value.parentItem)) {\n                            updateParentRow(key, value.parentItem, 'add', this.parent, this.isSelfReference, value);\n                        }\n                    }\n                }\n                if (position != null && (this.selectedIndex > -1 || isVirtualization) && withinRange) {\n                    args.index = position === 'before' ? index : index + 1;\n                }\n                if (this.parent.editSettings.newRowPosition === 'Bottom') {\n                    var dataSource = (this.parent.grid.dataSource instanceof DataManager ?\n                        this.parent.grid.dataSource.dataSource.json : this.parent.grid.dataSource);\n                    args.index = dataSource.length;\n                }\n            }\n            if (isNullOrUndefined(value.level)) {\n                value.level = level;\n            }\n            // this.addedIndex = args.index;\n            value.hasChildRecords = false;\n            value.childRecords = [];\n            value.index = 0;\n        }\n        if (args.action === 'add') {\n            this.internalProperties = { level: value.level, parentItem: value.parentItem, uniqueID: value.uniqueID,\n                taskData: value.taskData, parentUniqueID: isNullOrUndefined(value.parentItem) ? undefined : value.parentItem.uniqueID,\n                childRecords: value.childRecords };\n        }\n        if (args.requestType === 'delete') {\n            var deletedValues = args.data;\n            for (var i = 0; i < deletedValues.length; i++) {\n                if (deletedValues[i].parentItem) {\n                    var parentItem = getParentData(this.parent, deletedValues[i].parentItem.uniqueID);\n                    if (!isNullOrUndefined(parentItem) && parentItem.hasChildRecords) {\n                        var childIndex = parentItem.childRecords.indexOf(deletedValues[i]);\n                        parentItem.childRecords.splice(childIndex, 1);\n                    }\n                }\n            }\n        }\n        return args;\n    };\n    /**\n     * If the data,index and position given, Adds the record to treegrid rows otherwise it will create edit form.\n     * @return {void}\n     */\n    Edit.prototype.addRecord = function (data, index, position) {\n        this.previousNewRowPosition = this.parent.editSettings.newRowPosition;\n        if (data) {\n            if (index > -1) {\n                this.selectedIndex = index;\n                this.addRowIndex = index;\n            }\n            else {\n                this.selectedIndex = this.parent.selectedRowIndex;\n                this.addRowIndex = this.parent.selectedRowIndex;\n            }\n            if (position) {\n                this.parent.setProperties({ editSettings: { newRowPosition: position } }, true);\n            }\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n        else {\n            this.parent.grid.editModule.addRecord(data, index);\n        }\n    };\n    /**\n     * Checks the status of validation at the time of editing. If validation is passed, it returns true.\n     * @return {boolean}\n     */\n    Edit.prototype.editFormValidate = function () {\n        return this.parent.grid.editModule.editFormValidate();\n    };\n    /**\n     * @hidden\n     */\n    Edit.prototype.destroyForm = function () {\n        this.parent.grid.editModule.destroyForm();\n    };\n    Edit.prototype.contentready = function (e) {\n        if (!isNullOrUndefined(e.args.requestType)\n            && (e.args.requestType.toString() === 'delete' || e.args.requestType.toString() === 'save'\n                || (this.parent.editSettings.mode === 'Batch' && e.args.requestType.toString() === 'batchsave'))) {\n            this.updateIndex(this.parent.grid.dataSource, this.parent.getRows(), this.parent.getCurrentViewRecords());\n            if (this.parent.frozenRows || this.parent.getFrozenColumns() || this.parent.frozenColumns) {\n                if (this.parent.grid.dataSource.length === this.parent.getMovableDataRows().length) {\n                    this.updateIndex(this.parent.grid.dataSource, this.parent.getMovableDataRows(), this.parent.getCurrentViewRecords());\n                }\n            }\n        }\n    };\n    /**\n     * If the row index and field is given, edits the particular cell in a row.\n     * @return {void}\n     */\n    Edit.prototype.editCell = function (rowIndex, field) {\n        if (this.parent.editSettings.mode === 'Cell' || this.parent.editSettings.mode === 'Batch') {\n            if (this.parent.editSettings.mode !== 'Batch') {\n                this.isOnBatch = true;\n                this.updateGridEditMode('Batch');\n            }\n            this.parent.grid.editModule.editCell(rowIndex, field);\n        }\n    };\n    return Edit;\n}());\nexport { Edit };\n","import { Grid, CommandColumn as Command } from '@syncfusion/ej2-grids';\n/**\n * Command Column Module for TreeGrid\n * @hidden\n */\nvar CommandColumn = /** @class */ (function () {\n    function CommandColumn(parent) {\n        Grid.Inject(Command);\n        this.parent = parent;\n    }\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    CommandColumn.prototype.getModuleName = function () {\n        return 'commandColumn';\n    };\n    /**\n     * Destroys the ContextMenu.\n     * @method destroy\n     * @return {void}\n     */\n    CommandColumn.prototype.destroy = function () {\n        //this.removeEventListener();\n    };\n    return CommandColumn;\n}());\nexport { CommandColumn };\n","import { Grid, getObject } from '@syncfusion/ej2-grids';\nimport { DetailRow as detailrow } from '@syncfusion/ej2-grids';\nimport { isNullOrUndefined, addClass, isBlazor } from '@syncfusion/ej2-base';\nimport { getExpandStatus, isRemoteData } from '../utils';\n/**\n * TreeGrid Detail Row module\n * @hidden\n */\nvar DetailRow = /** @class */ (function () {\n    function DetailRow(parent) {\n        Grid.Inject(detailrow);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    /**\n     * @hidden\n     */\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    DetailRow.prototype.getModuleName = function () {\n        return 'detailRow';\n    };\n    DetailRow.prototype.addEventListener = function () {\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.on('detaildataBound', this.detaildataBound, this);\n        this.parent.grid.on('detail-indentcell-info', this.setIndentVisibility, this);\n        this.parent.on('childRowExpand', this.childRowExpand, this);\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('actioncomplete', this.actioncomplete, this);\n    };\n    /**\n     * @hidden\n     */\n    DetailRow.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.off('detaildataBound', this.detaildataBound);\n        this.parent.off('childRowExpand', this.childRowExpand);\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('actioncomplete', this.actioncomplete);\n        this.parent.grid.off('detail-indentcell-info', this.setIndentVisibility);\n    };\n    DetailRow.prototype.setIndentVisibility = function (args) {\n        var visible = 'visible';\n        args[visible] = false;\n    };\n    DetailRow.prototype.dataBoundArg = function () {\n        var detailele = this.parent.getRows().filter(function (e) {\n            return !e.classList.contains('e-detailrow');\n        });\n        for (var i = 0; i < detailele.length; i++) {\n            var elements = detailele[i].getElementsByClassName('e-detailrowcollapse');\n            var detailData = this.parent.grid.getRowObjectFromUID(detailele[i].getAttribute('data-Uid'));\n            var parentItem = getObject('parentItem', this.parent.grid.getCurrentViewRecords()[i]);\n            if (isNullOrUndefined(parentItem) || !isNullOrUndefined(parentItem) &&\n                getExpandStatus(this.parent, detailData.data, this.parent.grid.getCurrentViewRecords())) {\n                this.parent.grid.detailRowModule.expand(elements[0]);\n            }\n        }\n    };\n    DetailRow.prototype.childRowExpand = function (args) {\n        var detailRowElement = args.row.getElementsByClassName('e-detailrowcollapse');\n        if (!isNullOrUndefined(detailRowElement[0])) {\n            this.parent.grid.detailRowModule.expand(detailRowElement[0]);\n        }\n    };\n    DetailRow.prototype.rowExpandCollapse = function (args) {\n        if (isRemoteData(this.parent)) {\n            return;\n        }\n        for (var i = 0; i < args.detailrows.length; i++) {\n            args.detailrows[i].style.display = args.action;\n        }\n    };\n    DetailRow.prototype.detaildataBound = function (args) {\n        if (!isBlazor() || !this.parent.isServerRendered) {\n            var data = args.data;\n            var row = args.detailElement.parentElement.previousSibling;\n            var index = !isNullOrUndefined(data.parentItem) ? data.parentItem.index : data.index;\n            var expandClass_1 = 'e-gridrowindex' + index + 'level' + data.level;\n            var classlist = row.querySelector('.' + expandClass_1).classList;\n            var gridClas = [].slice.call(classlist).filter(function (gridclass) { return (gridclass === expandClass_1); });\n            var newNo = gridClas[0].length;\n            var slicedclas = gridClas.toString().slice(6, newNo);\n            var detailClass = 'e-griddetail' + slicedclas;\n            addClass([args.detailElement.parentElement], detailClass);\n        }\n    };\n    ;\n    DetailRow.prototype.actioncomplete = function (args) {\n        if (args.requestType === 'beginEdit' || args.requestType === 'add') {\n            var spann = (args.row.querySelectorAll('.e-editcell')[0].getAttribute('colSpan'));\n            var colum = parseInt(spann, 10) - 1;\n            var updtdcolum = colum.toString();\n            args.row.querySelectorAll('.e-editcell')[0].setAttribute('colSpan', updtdcolum);\n        }\n        var focusElement = this.parent.grid.contentModule.getRows();\n        for (var i = 0; i < focusElement.length; i++) {\n            focusElement[i].cells[0].visible = false;\n        }\n        var focusModule = getObject('focusModule', this.parent.grid);\n        var matrix = 'refreshMatrix';\n        focusModule[matrix](true)({ rows: this.parent.grid.contentModule.getRows() });\n    };\n    /**\n     * Destroys the DetailModule.\n     * @method destroy\n     * @return {void}\n     */\n    DetailRow.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return DetailRow;\n}());\nexport { DetailRow };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { VirtualContentRenderer } from '@syncfusion/ej2-grids';\nimport { InterSectionObserver } from '@syncfusion/ej2-grids';\nimport { TreeVirtualRowModelGenerator } from '../renderer/virtual-row-model-generator';\nimport * as events from '../base/constant';\nimport { isNullOrUndefined, EventHandler, getValue, setValue } from '@syncfusion/ej2-base';\nimport { DataManager } from '@syncfusion/ej2-data';\nvar VirtualTreeContentRenderer = /** @class */ (function (_super) {\n    __extends(VirtualTreeContentRenderer, _super);\n    function VirtualTreeContentRenderer(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        _this.isExpandCollapse = false;\n        _this.translateY = 0;\n        _this.maxiPage = 0;\n        _this.recordAdded = false;\n        /** @hidden */\n        _this.startIndex = -1;\n        _this.endIndex = -1;\n        _this.preTranslate = 0;\n        _this.isRemoteExpand = false;\n        _this.addEventListener();\n        return _this;\n    }\n    VirtualTreeContentRenderer.prototype.getModelGenerator = function () {\n        return new TreeVirtualRowModelGenerator(this.parent);\n    };\n    VirtualTreeContentRenderer.prototype.getRowByIndex = function (index) {\n        return this.parent.getDataRows().filter(function (e) { return parseInt(e.getAttribute('aria-rowindex'), 0) === index; })[0];\n    };\n    VirtualTreeContentRenderer.prototype.addEventListener = function () {\n        this.parent.on(events.virtualActionArgs, this.virtualOtherAction, this);\n        this.parent.on(events.indexModifier, this.indexModifier, this);\n    };\n    VirtualTreeContentRenderer.prototype.virtualOtherAction = function (args) {\n        if (args.setTop) {\n            this.translateY = 0;\n            this.startIndex = 0;\n            this.endIndex = this.parent.pageSettings.pageSize - 1;\n        }\n        else if (args.isExpandCollapse) {\n            this.isExpandCollapse = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.indexModifier = function (args) {\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this.recordAdded && this.startIndex > -1 && this.endIndex > -1) {\n            if (this.endIndex > args.count - this.parent.pageSettings.pageSize) {\n                var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n                var lastIndex = nextSetResIndex + this.parent.getRows().length;\n                if (lastIndex > args.count) {\n                    lastIndex = nextSetResIndex +\n                        (args.count - nextSetResIndex);\n                }\n                this.startIndex = lastIndex - this.parent.getRows().length;\n                this.endIndex = lastIndex;\n            }\n            else {\n                this.startIndex += 1;\n                this.endIndex += 1;\n            }\n            this.recordAdded = false;\n        }\n        args.startIndex = this.startIndex;\n        args.endIndex = this.endIndex;\n    };\n    VirtualTreeContentRenderer.prototype.eventListener = function (action) {\n        var _this = this;\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '')) {\n            this.parent[action]('data-ready', this.onDataReady, this);\n            //this.parent[action]('refresh-virtual-block', this.refreshContentRows, this);\n            this.fn = function () {\n                _this.observers.observes(function (scrollArgs) { return _this.scrollListeners(scrollArgs); });\n                _this.parent.off('content-ready', _this.fn);\n            };\n            this.parent.on('content-ready', this.fn, this);\n            this.parent.addEventListener(events.actionComplete, this.onActionComplete.bind(this));\n            this.parent[action]('virtual-scroll-edit-action-begin', this.beginEdit, this);\n            this.parent[action]('virtual-scroll-add-action-begin', this.beginAdd, this);\n            this.parent[action]('virtual-scroll-edit-success', this.virtualEditSuccess, this);\n            this.parent[action]('edit-reset', this.resetIseditValue, this);\n            this.parent[action]('get-virtual-data', this.getData, this);\n            this.parent[action]('virtual-scroll-edit-cancel', this.cancelEdit, this);\n        }\n        else {\n            _super.prototype.eventListener.call(this, 'on');\n        }\n    };\n    VirtualTreeContentRenderer.prototype.onDataReady = function (e) {\n        _super.prototype.onDataReady.call(this, e);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '')) {\n            if (!isNullOrUndefined(e.count)) {\n                this.totalRecords = e.count;\n                getValue('virtualEle', this).setVirtualHeight(this.parent.getRowHeight() * e.count, '100%');\n                var outBuffer = 4; // this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n            }\n            if (!isNullOrUndefined(e.requestType) && e.requestType.toString() === 'collapseAll') {\n                this.contents.scrollTop = 0;\n            }\n        }\n    };\n    VirtualTreeContentRenderer.prototype.renderTable = function () {\n        _super.prototype.renderTable.call(this);\n        if (!(this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '')) {\n            getValue('observer', this).options.debounceEvent = false;\n            this.observers = new TreeInterSectionObserver(getValue('observer', this).element, getValue('observer', this).options);\n            this.contents = this.getPanel().firstChild;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getTranslateY = function (sTop, cHeight, info, isOnenter) {\n        if (this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') {\n            if (this.isRemoteExpand) {\n                this.isRemoteExpand = false;\n                return this.preTranslate;\n            }\n            else {\n                this.preTranslate = _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n                return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n            }\n        }\n        else {\n            return _super.prototype.getTranslateY.call(this, sTop, cHeight, info, isOnenter);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.beginEdit = function (e) {\n        var selector = '.e-row[aria-rowindex=\"' + e.index + '\"]';\n        var index = this.parent.getContent().querySelector(selector).rowIndex;\n        var rowData = this.parent.getCurrentViewRecords()[index];\n        e.data = rowData;\n    };\n    VirtualTreeContentRenderer.prototype.beginAdd = function (args) {\n        var addAction = 'addActionBegin';\n        var isAdd = 'isAdd';\n        var addArgs = { newRowPosition: this.rowPosition, addRowIndex: this.addRowIndex, ariaRowIndex: this.ariaRowIndex };\n        this.parent.notify('get-row-position', addArgs);\n        this.rowPosition = addArgs.newRowPosition;\n        this.addRowIndex = addArgs.addRowIndex;\n        this.ariaRowIndex = addArgs.ariaRowIndex;\n        var rows = this.parent.getRows();\n        var firstAriaIndex = rows.length ? +rows[0].getAttribute('aria-rowindex') : 0;\n        var lastAriaIndex = rows.length ? +rows[rows.length - 1].getAttribute('aria-rowindex') : 0;\n        var withInRange = this.parent.selectedRowIndex >= firstAriaIndex && this.parent.selectedRowIndex <= lastAriaIndex;\n        if (!(this.rowPosition === 'Top' || this.rowPosition === 'Bottom')) {\n            this[isAdd] = true;\n        }\n        if (this.rowPosition === 'Top' || this.rowPosition === 'Bottom' ||\n            ((!this.addRowIndex || this.addRowIndex === -1) && (this.parent.selectedRowIndex === -1 || !withInRange))) {\n            _super.prototype[addAction].call(this, args);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.restoreEditState = function () {\n        var restoreEdit = 'restoreEdit';\n        _super.prototype[restoreEdit].call(this);\n    };\n    VirtualTreeContentRenderer.prototype.resetIseditValue = function () {\n        var resetIsEdit = 'resetIsedit';\n        var isAdd = 'isAdd';\n        this.parent.notify('reset-edit-props', {});\n        if ((this.rowPosition === 'Top' || this.rowPosition === 'Bottom') && this[isAdd]) {\n            _super.prototype[resetIsEdit].call(this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.virtualEditSuccess = function (args) {\n        var isAdd = 'isAdd';\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this[isAdd] && content.querySelector('.e-addedrow')) {\n            this.recordAdded = true;\n        }\n    };\n    VirtualTreeContentRenderer.prototype.cancelEdit = function (args) {\n        var editCancel = 'editCancel';\n        _super.prototype[editCancel].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.restoreNewRow = function () {\n        var isAdd = 'isAdd';\n        var content = this.parent.getContent().querySelector('.e-content');\n        if (this[isAdd] && !content.querySelector('.e-addedrow')) {\n            this.parent.isEdit = false;\n            this.parent.addRecord();\n        }\n    };\n    VirtualTreeContentRenderer.prototype.getData = function (data) {\n        var getVirtualData = 'getVirtualData';\n        _super.prototype[getVirtualData].call(this, data);\n    };\n    VirtualTreeContentRenderer.prototype.onActionComplete = function (args) {\n        if (args.requestType === 'add') {\n            var addArgs = { newRowPosition: this.rowPosition, addRowIndex: this.addRowIndex, ariaRowIndex: this.ariaRowIndex };\n            this.parent.notify('get-row-position', addArgs);\n            this.rowPosition = addArgs.newRowPosition;\n            this.addRowIndex = addArgs.addRowIndex;\n            this.ariaRowIndex = addArgs.ariaRowIndex;\n        }\n        var actionComplete = 'actionComplete';\n        _super.prototype[actionComplete].call(this, args);\n    };\n    VirtualTreeContentRenderer.prototype.scrollListeners = function (scrollArgs) {\n        var info = scrollArgs.sentinel;\n        var outBuffer = 10; //this.parent.pageSettings.pageSize - Math.ceil(this.parent.pageSettings.pageSize / 1.5);\n        var content = this.parent.getContent().querySelector('.e-content');\n        var scrollHeight = outBuffer * this.parent.getRowHeight();\n        var upScroll = (scrollArgs.offset.top - this.translateY) < 0;\n        var downScroll = (scrollArgs.offset.top - this.translateY) > scrollHeight;\n        if (upScroll) {\n            var vHeight = +(this.parent.height.toString().indexOf('%') < 0 ? this.parent.height :\n                this.parent.element.getBoundingClientRect().height);\n            var index = (~~(content.scrollTop / this.parent.getRowHeight())\n                + Math.ceil(vHeight / this.parent.getRowHeight()))\n                - this.parent.getRows().length;\n            index = (index > 0) ? index : 0;\n            this.startIndex = index;\n            this.endIndex = index + this.parent.getRows().length;\n            if (this.endIndex > this.totalRecords) {\n                var lastInx = this.totalRecords - 1;\n                var remains = this.endIndex % lastInx;\n                this.endIndex = lastInx;\n                this.startIndex = this.startIndex - remains;\n            }\n            //var firsttdinx = parseInt(this.parent.getContent().querySelector('.e-content td').getAttribute('index'), 0);\n            var rowPt = Math.ceil(scrollArgs.offset.top / this.parent.getRowHeight());\n            rowPt = rowPt % this.parent.pageSettings.pageSize;\n            var firsttdinx = 0;\n            if (!isNullOrUndefined(this.parent.getRows()[rowPt])) {\n                var attr = this.parent.getContent().querySelectorAll('.e-content tr')[rowPt]\n                    .querySelector('td').getAttribute('index');\n                firsttdinx = +attr; // this.parent.getContent().querySelector('.e-content tr').getAttribute('aria-rowindex');\n            }\n            if (firsttdinx === 0) {\n                this.translateY = scrollArgs.offset.top;\n            }\n            else {\n                var height = this.parent.getRowHeight();\n                this.translateY = (scrollArgs.offset.top - (outBuffer * height) > 0) ?\n                    scrollArgs.offset.top - (outBuffer * height) + 10 : 0;\n            }\n        }\n        else if (downScroll) {\n            var nextSetResIndex = ~~(content.scrollTop / this.parent.getRowHeight());\n            var lastIndex = nextSetResIndex + this.parent.getRows().length;\n            if (lastIndex > this.totalRecords) {\n                lastIndex = nextSetResIndex +\n                    (this.totalRecords - nextSetResIndex);\n            }\n            this.startIndex = lastIndex - this.parent.getRows().length;\n            this.endIndex = lastIndex;\n            if (scrollArgs.offset.top > (this.parent.getRowHeight() * this.totalRecords)) {\n                this.translateY = this.getTranslateY(scrollArgs.offset.top, content.getBoundingClientRect().height);\n            }\n            else {\n                this.translateY = scrollArgs.offset.top;\n            }\n        }\n        if ((downScroll && (scrollArgs.offset.top < (this.parent.getRowHeight() * this.totalRecords)))\n            || (upScroll)) {\n            var viewInfo = getValue('getInfoFromView', this).apply(this, [scrollArgs.direction, info, scrollArgs.offset]);\n            this.previousInfo = viewInfo;\n            var page = viewInfo.loadNext && !viewInfo.loadSelf ? viewInfo.nextInfo.page : viewInfo.page;\n            this.parent.setProperties({ pageSettings: { currentPage: page } }, true);\n            if (viewInfo.event === 'refresh-virtual-block') {\n                this.parent.refresh();\n            }\n            else {\n                this.parent.notify(viewInfo.event, { requestType: 'virtualscroll', focusElement: scrollArgs.focusElement });\n            }\n        }\n    };\n    VirtualTreeContentRenderer.prototype.appendContent = function (target, newChild, e) {\n        if (this.parent.dataSource instanceof DataManager && this.parent.dataSource.dataSource.url !== undefined\n            && this.parent.dataSource.dataSource.url !== '') {\n            if (getValue('isExpandCollapse', e)) {\n                this.isRemoteExpand = true;\n            }\n            _super.prototype.appendContent.call(this, target, newChild, e);\n        }\n        else {\n            var info = e.virtualInfo.sentinelInfo && e.virtualInfo.sentinelInfo.axis === 'Y' &&\n                getValue('currentInfo', this).page && getValue('currentInfo', this).page !== e.virtualInfo.page ?\n                getValue('currentInfo', this) : e.virtualInfo;\n            var cBlock = (info.columnIndexes[0]) - 1;\n            var cOffset = this.getColumnOffset(cBlock);\n            //this.virtualEle.setWrapperWidth(width, ( Browser.isIE || Browser.info.name === 'edge') as boolean);\n            target = this.parent.createElement('tbody');\n            target.appendChild(newChild);\n            var replace = 'replaceWith';\n            this.getTable().querySelector('tbody')[replace](target);\n            if (!this.isExpandCollapse || this.translateY === 0) {\n                getValue('virtualEle', this).adjustTable(cOffset, this.translateY);\n            }\n            else {\n                this.isExpandCollapse = false;\n            }\n            setValue('prevInfo', this.previousInfo ? this.previousInfo : info, this);\n            var focusCell = 'focusCell';\n            var restoreAdd = 'restoreAdd';\n            _super.prototype[focusCell].call(this, e);\n            var isAdd = 'isAdd';\n            if (this[isAdd] && !this.parent.getContent().querySelector('.e-content').querySelector('.e-addedrow')) {\n                if (!(this.rowPosition === 'Top' || this.rowPosition === 'Bottom')) {\n                    if (this.ariaRowIndex >= this.startIndex) {\n                        this.restoreNewRow();\n                    }\n                    else if (this.addRowIndex && this.addRowIndex > -1) {\n                        this[isAdd] = false;\n                        this.parent.isEdit = false;\n                    }\n                }\n            }\n            this.restoreEditState();\n            _super.prototype[restoreAdd].call(this);\n        }\n    };\n    VirtualTreeContentRenderer.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('data-ready', this.onDataReady);\n        this.parent.off('content-ready', this.fn);\n        this.parent.off(events.virtualActionArgs, this.virtualOtherAction);\n        this.parent.off(events.indexModifier, this.indexModifier);\n        this.parent.off('virtual-scroll-edit-action-begin', this.beginEdit);\n        this.parent.off('virtual-scroll-add-action-begin', this.beginAdd);\n        this.parent.off('virtual-scroll-edit-success', this.virtualEditSuccess);\n        this.parent.off('edit-reset', this.resetIseditValue);\n        this.parent.off('get-virtual-data', this.getData);\n        this.parent.off('virtual-scroll-edit-cancel', this.cancelEdit);\n    };\n    return VirtualTreeContentRenderer;\n}(VirtualContentRenderer));\nexport { VirtualTreeContentRenderer };\nvar TreeInterSectionObserver = /** @class */ (function (_super) {\n    __extends(TreeInterSectionObserver, _super);\n    function TreeInterSectionObserver() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.isWheeling = false;\n        _this.newPos = 0;\n        _this.lastPos = 0;\n        _this.timer = 0;\n        return _this;\n    }\n    TreeInterSectionObserver.prototype.observes = function (callback) {\n        setValue('containerRect', getValue('options', this).container.getBoundingClientRect(), this);\n        EventHandler.add(getValue('options', this).container, 'scroll', this.virtualScrollHandlers(callback), this);\n    };\n    TreeInterSectionObserver.prototype.clear = function () {\n        this.lastPos = null;\n    };\n    TreeInterSectionObserver.prototype.virtualScrollHandlers = function (callback) {\n        var _this = this;\n        var prevTop = 0;\n        var prevLeft = 0;\n        return function (e) {\n            var scrollTop = e.target.scrollTop;\n            var scrollLeft = e.target.scrollLeft;\n            var direction = prevTop < scrollTop ? 'down' : 'up';\n            direction = prevLeft === scrollLeft ? direction : prevLeft < scrollLeft ? 'right' : 'left';\n            prevTop = scrollTop;\n            prevLeft = scrollLeft;\n            var current = getValue('sentinelInfo', _this)[direction];\n            var delta = 0;\n            _this.newPos = scrollTop;\n            if (_this.lastPos != null) { // && newPos < maxScroll \n                delta = _this.newPos - _this.lastPos;\n            }\n            _this.lastPos = _this.newPos;\n            if (_this.timer) {\n                clearTimeout(_this.timer);\n            }\n            _this.timer = setTimeout(_this.clear, 0);\n            /*if (this.options.axes.indexOf(current.axis) === -1) {\n                return;\n            }*/\n            /*if(delta > 45 || delta < -45){\n              this.isWheeling = true;\n            }*/\n            if ((delta > 100 || delta < -100) && (e && e.preventDefault)) {\n                e.returnValue = false;\n                e.preventDefault();\n            }\n            callback({ direction: direction, isWheel: _this.isWheeling,\n                sentinel: current, offset: { top: scrollTop, left: scrollLeft },\n                focusElement: document.activeElement });\n        };\n    };\n    return TreeInterSectionObserver;\n}(InterSectionObserver));\nexport { TreeInterSectionObserver };\n","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    }\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nimport { Grid, VirtualScroll as GridVirtualScroll } from '@syncfusion/ej2-grids';\nimport { RenderType } from '@syncfusion/ej2-grids';\nimport { getValue, isNullOrUndefined } from '@syncfusion/ej2-base';\nimport * as events from '../base/constant';\nimport { DataManager, Predicate, Query } from '@syncfusion/ej2-data';\nimport { getExpandStatus } from '../utils';\nimport { VirtualTreeContentRenderer } from '../renderer/virtual-tree-content-render';\n/**\n * TreeGrid Virtual Scroll module will handle Virtualization\n * @hidden\n */\nvar VirtualScroll = /** @class */ (function () {\n    /**\n     * Constructor for VirtualScroll module\n     */\n    function VirtualScroll(parent) {\n        this.prevstartIndex = -1;\n        this.prevendIndex = -1;\n        this.parent = parent;\n        var name = 'name';\n        var injectedModules = 'injectedModules';\n        var modules = Grid.prototype[injectedModules];\n        for (var i = 0; i < modules.length; i++) {\n            if (modules[i] === GridVirtualScroll) {\n                modules.splice(i, 1);\n                break;\n            }\n        }\n        Grid.Inject(TreeVirtual);\n        this.addEventListener();\n    }\n    VirtualScroll.prototype.returnVisualData = function (args) {\n        args.data = this.visualData;\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    VirtualScroll.prototype.getModuleName = function () {\n        return 'virtualScroll';\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.addEventListener = function () {\n        this.parent.on(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds, this);\n        this.parent.on(events.pagingActions, this.virtualPageAction, this);\n    };\n    /**\n     * @hidden\n     */\n    VirtualScroll.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off(events.localPagedExpandCollapse, this.collapseExpandVirtualchilds);\n        this.parent.off(events.pagingActions, this.virtualPageAction);\n    };\n    VirtualScroll.prototype.collapseExpandVirtualchilds = function (row) {\n        this.parent.grid.notify(events.virtualActionArgs, { isExpandCollapse: true });\n        this.expandCollapseRec = row.record;\n        row.record.expanded = row.action === 'collapse' ? false : true;\n        var ret = {\n            result: this.parent.flatData,\n            row: row.row,\n            action: row.action,\n            record: row.record,\n            count: this.parent.flatData.length\n        };\n        var requestType = getValue('isCollapseAll', this.parent) ? 'collapseAll' : 'refresh';\n        getValue('grid.renderModule', this.parent).dataManagerSuccess(ret, { requestType: requestType });\n    };\n    VirtualScroll.prototype.virtualPageAction = function (pageingDetails) {\n        var _this = this;\n        var dm = new DataManager(pageingDetails.result);\n        var expanded = new Predicate('expanded', 'notequal', null).or('expanded', 'notequal', undefined);\n        var parents = dm.executeLocal(new Query().where(expanded));\n        var visualData = parents.filter(function (e) {\n            return getExpandStatus(_this.parent, e, parents);\n        });\n        this.visualData = visualData;\n        this.parent.grid.notify(events.dataListener, { data: visualData });\n        var counts = { startIndex: -1, endIndex: -1, count: pageingDetails.count };\n        this.parent.grid.notify(events.indexModifier, counts);\n        var startIndex = counts.startIndex;\n        var endIndex = counts.endIndex;\n        pageingDetails.count = visualData.length;\n        if (startIndex === -1 && endIndex === -1) {\n            var query = new Query();\n            var size = this.parent.grid.pageSettings.pageSize;\n            var current = this.parent.grid.pageSettings.currentPage;\n            var skip = size * (current - 1);\n            query = query.skip(skip).take(size);\n            dm.dataSource.json = visualData;\n            pageingDetails.result = dm.executeLocal(query);\n        }\n        else {\n            var requestType = pageingDetails.actionArgs.requestType;\n            if (requestType === 'filtering') {\n                startIndex = 0;\n                endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n            }\n            //if ((this.prevendIndex !== -1 && this.prevstartIndex !== -1) && \n            //this.prevendIndex === endIndex && this.prevstartIndex === startIndex) {\n            if (!isNullOrUndefined(this.expandCollapseRec)) {\n                var resourceCount = this.parent.getRows();\n                var sIndex = visualData.indexOf(this.expandCollapseRec);\n                var tempdata = visualData.slice(sIndex, sIndex + resourceCount.length);\n                if (tempdata.length < resourceCount.length && sIndex >= 0) {\n                    sIndex = visualData.length - resourceCount.length;\n                    sIndex = sIndex > 0 ? sIndex : 0;\n                    startIndex = sIndex;\n                    endIndex = visualData.length;\n                }\n                else if (getValue('isCollapseAll', this.parent)) {\n                    startIndex = 0;\n                    endIndex = this.parent.grid.pageSettings.pageSize - 1;\n                    this.parent.grid.notify(events.virtualActionArgs, { setTop: true });\n                }\n                this.expandCollapseRec = null;\n            }\n            //}\n            pageingDetails.result = visualData.slice(startIndex, endIndex);\n            this.prevstartIndex = startIndex;\n            this.prevendIndex = endIndex;\n        }\n        this.parent.notify('updateAction', pageingDetails);\n    };\n    /**\n     * To destroy the virtualScroll module\n     * @return {void}\n     * @hidden\n     */\n    VirtualScroll.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    return VirtualScroll;\n}());\nexport { VirtualScroll };\nvar TreeVirtual = /** @class */ (function (_super) {\n    __extends(TreeVirtual, _super);\n    function TreeVirtual(parent, locator) {\n        var _this = _super.call(this, parent, locator) || this;\n        getValue('parent', _this).off('initial-load', getValue('instantiateRenderer', _this), _this);\n        getValue('parent', _this).on('initial-load', _this.instantiateRenderers, _this);\n        return _this;\n    }\n    TreeVirtual.prototype.instantiateRenderers = function () {\n        getValue('parent', this).log(['limitation', 'virtual_height'], 'virtualization');\n        var renderer = getValue('locator', this).getService('rendererFactory');\n        getValue('addRenderer', renderer)\n            .apply(renderer, [RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this))]);\n        //renderer.addRenderer(RenderType.Content, new VirtualTreeContentRenderer(getValue('parent', this), getValue('locator', this)));\n        this.ensurePageSize();\n    };\n    TreeVirtual.prototype.ensurePageSize = function () {\n        var parentGrid = getValue('parent', this);\n        var rowHeight = parentGrid.getRowHeight();\n        if (!isNullOrUndefined(parentGrid.height) && typeof (parentGrid.height) === 'string' && parentGrid.height.indexOf('%') !== -1) {\n            parentGrid.element.style.height = parentGrid.height;\n        }\n        var vHeight = parentGrid.height.toString().indexOf('%') < 0 ? parentGrid.height :\n            parentGrid.element.getBoundingClientRect().height;\n        var blockSize = ~~(vHeight / rowHeight);\n        var height = blockSize * 2;\n        var size = parentGrid.pageSettings.pageSize;\n        parentGrid.setProperties({ pageSettings: { pageSize: size < height ? height : size } }, true);\n    };\n    return TreeVirtual;\n}(GridVirtualScroll));\nexport { TreeVirtual };\n","import { parentsUntil } from '@syncfusion/ej2-grids';\nimport { Grid, Freeze as FreezeColumn } from '@syncfusion/ej2-grids';\nimport { addClass } from '@syncfusion/ej2-base';\n/**\n * TreeGrid Freeze module\n * @hidden\n */\nvar Freeze = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function Freeze(parent) {\n        Grid.Inject(FreezeColumn);\n        this.parent = parent;\n        this.addEventListener();\n    }\n    Freeze.prototype.addEventListener = function () {\n        this.parent.on('rowExpandCollapse', this.rowExpandCollapse, this);\n        this.parent.on('dataBoundArg', this.dataBoundArg, this);\n        this.parent.grid.on('dblclick', this.dblClickHandler, this);\n    };\n    Freeze.prototype.removeEventListener = function () {\n        if (this.parent.isDestroyed) {\n            return;\n        }\n        this.parent.off('rowExpandCollapse', this.rowExpandCollapse);\n        this.parent.off('dataBoundArg', this.dataBoundArg);\n        this.parent.grid.off('dblclick', this.dblClickHandler);\n    };\n    Freeze.prototype.rowExpandCollapse = function (args) {\n        var movableRows = this.parent.getMovableDataRows();\n        var frozenrows = this.parent.getRows();\n        var rows;\n        if (!args.detailrows.length) {\n            rows = movableRows.filter(function (e) {\n                return e.querySelector('.e-gridrowindex' + args.record.index + 'level' + (args.record.level + 1));\n            });\n        }\n        else {\n            rows = args.detailrows;\n        }\n        for (var i = 0; i < rows.length; i++) {\n            var rData = this.parent.grid.getRowObjectFromUID(rows[i].getAttribute('data-Uid')).data;\n            rows[i].style.display = args.action;\n            var queryselector = args.action === 'none' ? '.e-treecolumn-container .e-treegridcollapse'\n                : '.e-treecolumn-container .e-treegridexpand';\n            if (frozenrows[rows[i].rowIndex].querySelector(queryselector)) {\n                var cRow = [];\n                for (var i_1 = 0; i_1 < movableRows.length; i_1++) {\n                    if (movableRows[i_1].querySelector('.e-gridrowindex' + rData.index + 'level' + (rData.level + 1))) {\n                        cRow.push(movableRows[i_1]);\n                    }\n                }\n                if (cRow.length) {\n                    this.rowExpandCollapse({ detailrows: cRow, action: args.action });\n                }\n            }\n        }\n    };\n    Freeze.prototype.dblClickHandler = function (e) {\n        if (parentsUntil(e.target, 'e-rowcell') &&\n            this.parent.grid.editSettings.allowEditOnDblClick && this.parent.editSettings.mode !== 'Cell') {\n            this.parent.grid.editModule.startEdit(parentsUntil(e.target, 'e-row'));\n        }\n    };\n    Freeze.prototype.dataBoundArg = function (args) {\n        var checkboxColumn = this.parent.getColumns().filter(function (e) {\n            return e.showCheckbox;\n        });\n        if (checkboxColumn.length && this.parent.freezeModule && this.parent.initialRender) {\n            addClass([this.parent.element.getElementsByClassName('e-grid')[0]], 'e-checkselection');\n        }\n    };\n    Freeze.prototype.destroy = function () {\n        this.removeEventListener();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    Freeze.prototype.getModuleName = function () {\n        return 'freeze';\n    };\n    return Freeze;\n}());\nexport { Freeze };\n","import { Grid, ColumnChooser as GridColumnChooser } from '@syncfusion/ej2-grids';\n/**\n * TreeGrid ColumnChooser module\n * @hidden\n */\nvar ColumnChooser = /** @class */ (function () {\n    /**\n     * Constructor for render module\n     */\n    function ColumnChooser(parent) {\n        Grid.Inject(GridColumnChooser);\n        this.parent = parent;\n    }\n    /**\n     * Column chooser can be displayed on screen by given position(X and Y axis).\n     * @param  {number} X - Defines the X axis.\n     * @param  {number} Y - Defines the Y axis.\n     * @return {void}\n     */\n    ColumnChooser.prototype.openColumnChooser = function (X, Y) {\n        return this.parent.grid.columnChooserModule.openColumnChooser(X, Y);\n    };\n    /**\n     * Destroys the openColumnChooser.\n     * @method destroy\n     * @return {void}\n     */\n    ColumnChooser.prototype.destroy = function () {\n        //this.parent.grid.ColumnChooserModule.destroy();\n    };\n    /**\n     * For internal use only - Get the module name.\n     * @private\n     */\n    ColumnChooser.prototype.getModuleName = function () {\n        return 'ColumnChooser';\n    };\n    return ColumnChooser;\n}());\nexport { ColumnChooser };\n"],"names":["isRemoteData","parent","dataSource","DataManager","adaptor","ODataAdaptor","WebApiAdaptor","WebMethodAdaptor","CacheAdaptor","UrlAdaptor","isCountRequired","isCheckboxcolumn","i","columns","length","showCheckbox","isFilterChildHierarchy","isNullOrUndefined","grid","searchSettings","key","hierarchyMode","allowFiltering","filterSettings","findParentRecords","records","datas","len","Object","keys","getObject","push","getExpandStatus","record","parents","childParent","parentRecord","parentItem","getParentData","uniqueID","initialRender","expandStateMapping","expanded","findChildrenRecords","hasChildRecords","childRecords","concat","isOffline","dm","ready","extendArray","array","obj","objArr","j","getPlainData","value","index","level","requireFilter","editAction","details","control","isSelfReference","addRowIndex","selectedIndex","columnName","addRowRecord","batchChanges","action","getPrimaryKeyFieldNames","treeData","json","modifiedData","originalData","isSkip","editSettings","mode","editModule","getBatchChanges","addAct","currentViewRecords","getCurrentViewRecords","extend","newRowPosition","unshift","primaryKeys","currentdata","addAction","Array","k","taskData","_loop_1","hasOwnProperty","editedData","parentIdMapping","idMapping","splice","childMapping","updateParentRow","currentData_1","parentData","flatData","filter","e","p","removeChildRecords","isChildAll","child","index_1","currentRecords","map","enableVirtualization","getValue","parentUniqueID","sortSettings","indexOf","data","setRowData","row","getRowByIndex","getRows","getRowIndexByPrimaryKey","movableRow","frozenRows","getFrozenColumns","getMovableRowByIndex","renderModule","cellRender","cell","cells","treeColumnIndex","frozenColumns","column","getColumns","requestType","Column","options","this","allowEditing","edit","disableHtmlEncode","allowReordering","showColumnMenu","allowSorting","allowResizing","merge","__extends","extendStatics","d","b","setPrototypeOf","__proto__","__","constructor","prototype","create","__decorate","decorators","target","desc","c","arguments","r","getOwnPropertyDescriptor","Reflect","decorate","defineProperty","Predicate","_super","apply","Property","ChildProperty","FilterSettings","Collection","TextWrapSettings","rowDataBound","queryCellInfo","beforeDataBound","actionBegin","dataStateChange","actionComplete","rowSelected","checkboxChange","rowDeselected","toolbarClick","beforeExcelExport","beforePdfExport","resizeStop","collapsed","remoteExpand","localPagedExpandCollapse","pagingActions","printGridInit","contextMenuOpen","contextMenuClick","crudAction","beginEdit","beginAdd","recordDoubleClick","cellSave","cellSaved","cellEdit","batchDelete","batchCancel","batchAdd","beforeBatchDelete","beforeBatchAdd","beforeBatchSave","batchSave","keyPressed","doubleTap","virtualActionArgs","dataListener","indexModifier","beforeStartEdit","beforeBatchCancel","detailDataBound","rowDragStartHelper","rowsAdd","rowsRemove","rowdraging","rowDropped","TreeClipboard","_this","call","treeCopyContent","copiedUniqueIdCollection","treeGridParent","setCopyData","withHeader","copyContent","window","getSelection","toString","clipBoardTextArea","rows","selectionSettings","selectedIndexes","getSelectedRowIndexes","sort","a","classList","contains","slice","querySelectorAll","uniqueid","getSelectedRecords","copyHierarchyMode","parentContentData","childContentData","headerTextArray","getVisibleColumns","headerText","args","cancel","trigger","Browser","userAgent","match","setSelectionRange","select","treeLevel","copy","paste","rowIndex","colIndex","getModuleName","destroy","childData","GridClipboard","Selection","selectedItems","addEventListener","on","headerCheckbox","columnCheckbox","updateGridActions","checkboxSelection","removeEventListener","isDestroyed","off","checkBox","checkWrap","parentsUntil","querySelector","closest","selectCheckboxes","triggerChkChangeEvent","nextElementSibling","autoCheckHierarchy","checkBoxvalue","headerSelection","checkState","rowElement","checked","rowData","getCheckedRecords","events.checkboxChange","getCheckboxcolumnIndex","mappingUid","columnIndex","col","uid","headerCelllength","getHeaderContent","getAttribute","headerElement","rowChkBox","createElement","className","attrs","type","createCheckBox","label","add","style","width","insertBefore","cloneNode","firstChild","renderColumnCheckbox","setAttribute","checkboxState","checkbox","removeClass","container","containerELe","spanEle","innerHTML","divEle","appendChild","rowIndexes","flatRecord","isBlazor","traverSelection","ischildItem","updateSelectedItems","updateParentSelection","filterModule","filteredResult","getFilteredChildRecords","count","isSummaryRow","indeter","checkChildRecords","childRecord","this_1","currentRecord","checkBoxRecord","checkAll","rec","checkedRecord","recordIndex","checkboxRecord","tr","movableTr","getMovableDataRows","checkedIndex","checkBoxclass","childLength","updatedData","forEach","getCheckedrecords","getCheckedRowIndexes","Print","Grid","Inject","GridPrint","events.printGridInit","printTreeGrid","printGrid","gridElement","events.queryCellInfo","events.rowDataBound","events.beforeDataBound","addClass","print","SearchSettings","SelectionSettings","Render","templateResult","columnTemplateResult","RowModifier","allowPaging","pageSettings","pageSizeMode","enableCollapseAll","display","proxy_1","parentrec","cellElement","pad","filterLevel","totalIconsWidth","getColumnByField","field","summaryRow","getColumnIndexByUid","emptyExpandIcon","styles","n","iconRequired","hasFilteredChildRecords","expandIcon","expand","allowTextWrap","updateTreeCell","notify","checkboxElement","parseInt","summaryData","rowTemplate","textContent","appendChildren","children","template","DataManipulation","addedRecords","parentItems","taskIds","hierarchyData","storedIndex","sortedData","isSortAction","dataResults","updateParentRemoteData","beginSorting","updateData","events.remoteExpand","collectExpandingRecs","dataProcessor","isRemote","convertToFlatData","query","Query","filterKey","params","param","where","addParams","hasChildMapping","qry","clone","queries","executeQuery","then","DataUtil","distinct","result","httpRequest","statusText","setValue","zerothLevelData","dataManagerSuccess","hideSpinner","convertJSONData","tempData","selfData","mappingData","executeLocal","group","groupData","items","selfReferenceUpdate","createRecords","referenceData","shift","adaptorName","clientRender","loadChildOnDemand","getUid","element","id","Math","ceil","random","rowDetails","isChild","gridRows","getContentTable","isServerRendered","targetEle","getElementsByClassName","getRowObjectFromUID","childRows","parentRow","expandingTd","detailRowModule","fetchRemoteChildData","getDataModule","generateQuery","clonequries","fn","showSpinner","currentViewData","inx","haveChild","events.actionComplete","aggregates","gridQuery","aggregateQuery","summaryQuery","q","summaryModule","calculateSummaryValue","totalRecordsCount","virtualArgs","remoteVirtualAction","events.expanded","contentModule","currentInfo","prevInfo","loadNext","currentPage","nextInfo","page","parentRecords","treeGridData","currentData","dataObj","isExport","expresults","exportType","isPrinting","actionArgs","actionData","actionAddArgs","primaryKeyColumnName","dataValue","isLocalData","updateAction","results","filterQuery","searchQuery","fltrQuery","srchQuery","filteredData","srtQry","srt","compFun","sortComparer","bind","direction","sortBy","sortArgs","temp","paging","printMode","events.pagingActions","dataResult","events.crudAction","events.batchSave","ToolbarItem","ContextMenuItems","PageSettings","AggregateColumn","intl","Internationalization","templateFn","setFormatter","cultureName","format","skeleton","formatFn","getFormatFunction","getDateFormat","getNumberFormat","getFormatter","setTemplate","helper","undefined","footerTemplate","getEnumValue","CellType","Summary","compile","property","getTemplate","setPropertiesSilent","prop","setProperties","AggregateRow","EditSettings","SortDescriptor","SortSettings","TreeGrid","uniqueIDCollection","uniqueIDFilterCollection","changedRecords","deletedRecords","TreeGrid_1","TreeGridSelection","mergePersistTreeGridData","excelExport","excelExportProperties","isMultipleExport","workbook","isBlob","excelExportModule","Map","csvExport","pdfExport","pdfExportProperties","pdfDoc","pdfExportModule","preRender","TreeGridLocale","initProperties","defaultLocale","Above","Below","AddRow","ExpandAll","CollapseAll","RowIndent","RowOutdent","l10n","L10n","locale","sortByColumn","isMultiSort","sortModule","sortColumn","clearSorting","removeSortColumn","search","searchString","autoFitColumns","fieldNames","resizeModule","updateColumnModel","reorderColumns","fromFName","toFName","localeObject","gridLocale","treeGridLocale","load","printModule","treeGridkeyActionHandler","allowKeyboard","expandAll","collapseAll","collapserow","collapseRow","expandCollapseRequest","expandrow","expandRow","parentElement","summaryElement","findnextRowElement","selectRow","cellIndex","clearSelection","targetRow","summaryRowElement","findPreviousRowElement","rIndex","cIndex","previousElementSibling","columnModel","isExpandAll","isCollapseAll","keyConfigs","ctrlDownArrow","ctrlUpArrow","ctrlShiftUpArrow","ctrlShiftDownArrow","downArrow","upArrow","offline","RemoteSaveAdaptor","wireEvents","EventHandler","mouseClickHandler","keyboardModule","KeyboardEvents","keyAction","eventName","tabIndex","requiredModules","modules","member","toolbar","contextMenuItems","allowExcelExport","detailTemplate","allowPdfExport","showColumnChooser","extendRequiredModules","allowRowDragAndDrop","allowAdding","allowDeleting","isCommandColumn","allowSelection","some","commands","commandsTemplate","unwireEvents","remove","render","createSpinner","dataModule","autoGenerateColumns","convertTreeData","loadGrid","rowDropSettings","targetID","addListener","gridContainer","height","appendTo","renderComplete","destroyTemplate","destroyTemplateFn","clearTemplate","fn_1","gridRendered","gridObserver","afterGridRender","clipboardModule","setBlazorGUID","setColIndex","bindGridEvents","selectionModule","ind","griddata","bindGridProperties","bindedDataSource","enableRtl","getGridColumns","columnQueryMode","getActualProperties","pagerTemplate","enableAltRow","enableHover","enableAutoFill","rowHeight","gridLines","getGridToolbar","toolbarTemplate","textWrapSettings","selectedRowIndex","getContextMenu","columnMenuItems","getGridEditSettings","templateInstance","triggerEvents","treeGrid","rowSelecting","allowServerDataBinding","events.rowSelected","events.rowDeselected","events.resizeStop","excelQueryCellInfo","pdfQueryCellInfo","checkBoxChange","pdfExportComplete","excelExportComplete","excelHeaderQueryCellInfo","pdfHeaderQueryCellInfo","dataSourceChanged","rowDeselecting","cellDeselected","cellDeselecting","columnMenuOpen","columnMenuClick","cellSelected","headerCellInfo","resizeStart","resizing","columnDrag","columnDragStart","columnDrop","beforePrint","beforeCopy","beforePaste","printComplete","actionFailure","extendedGridDataBoundEvent","extendedGridEvents","extendedGridActionEvents","extendedGridEditEvents","bindGridDragEvents","bindCallBackEvents","dataBound","updateRowTemplate","updateAltRow","req","callBackPromise_1","Deferred","beforeDataBoundArgs","resolve","callBackPromise","events.toolbarClick","toolbarargs","cellSelecting","cellselectingArgs","events.beginEdit","begineditArgs","events_1","boundedEvents","pop","isExpandRefresh","events.dataStateChange","isContextMenuOpen","contextitems","contextMenuModule","contextMenu","events.cellSave","cellsaveArgs","getElement","events.cellSaved","promise","events.cellEdit","events.batchAdd","events.beforeBatchSave","events.beforeBatchAdd","events.batchDelete","events.beforeBatchDelete","events.batchCancel","setTimeout","treeColumnRowTemplate","datacount","defaultQuery","dm_1","JsonAdaptor","events.actionBegin","expandicon","updateTreeGridModel","events.beginAdd","events.recordDoubleClick","events.detailDataBound","events.contextMenuClick","events.contextMenuOpen","events.rowDragStartHelper","rowDragStart","rowDrag","isEdit","events.rowdraging","rowDrop","events.rowDropped","registeredTemplate","allowEditOnDblClick","showConfirmDialog","showDeleteConfirmDialog","dialog","text","getConstant","Search","tooltipText","prefixIcon","tooltip","tooltipindent","tooltipoutdent","treeGridColumn","gridColumn","gridColumnCollection","treeColumn","getColumnByUid","_i","_a","onPropertyChanged","newProp","oldProp","requireRefresh","properties_1","refreshColumns","allowMultiSorting","eventListener","renderTable","refresh","closeEdit","removeListener","dataBind","getPersistData","keyEntity","ignoreOnPersist","currentObject","ignoreInArrays","addOnPersist","ignoreOnColumn","ignoreInColumn","touches","isEditCollapse","getPager","addRecord","position","saveCell","updateCell","updateRow","deleteRecord","fieldName","startEdit","editCell","enableToolbarItems","isEnable","toolbarModule","enableItems","endEdit","openColumnChooser","x","y","columnChooserModule","deleteRow","setCellValue","primaryKey","goToPage","pageNo","pagerModule","updateExternalMessage","message","getCellFromIndex","iterateArrayOrObject","item","getColumnFieldNames","getFooterContent","getFooterContentTable","showColumns","showBy","hideColumns","hideBy","getColumnHeaderByField","getColumnHeaderByIndex","getColumnHeaderByUid","getColumnIndexByField","isRefresh","stackedHeader","gridColumns","getContent","mergeColumns","storedColumn","getDataRows","dRows","getHeaderTable","getRowInfo","getUidByColumnField","cols","visible","indexes","refreshUI","refreshHeader","dialogObj","targetElement","rowInfo","getCollapseExpandRecords","expandingArgs","expandCollapse","collapseArgs","collapsingArgs","events.collapsed","expandAtLevel","getRecordDetails","collapseAtLevel","expandCollapseAll","isExpandCollapseall","updateChildOnDemand","displayAction","detailrows","localExpand","events.localPagedExpandCollapse","deff","data_1","length_1","rows_1","args_1","collapseRemoteChild","movableRows","rows_2","getMovableRows","visibleRowCount","gridRow","rcell","arg","getRowsObject","collapsingTd","collapse","expandElement","cRow","eRows","i_1","updateResultModel","returnResult","filterByColumn","filterOperator","filterValue","predicate","matchCase","ignoreAccent","actualFilterValue","actualOperator","clearFiltering","removeFilteredColsByField","isClearFilterBar","isToggle","selectRows","selectCell","getSelectedRows","getMovableCellFromIndex","getFrozenCount","cnt","isFrozen","getSelectedRowCellIndexes","baseModule","treeModule","reorderRows","fromIndexes","toIndex","rowDragAndDropModule","Complex","RowDropSettings","Event","NotifyPropertyChanges","Component","Reorder","GridReorder","getTreeColumn","treeIndex","updatedCols","f","Resize","GridResize","fName","RowDD","canDrop","isDraggedWithChild","isaddtoBottom","GridDragDrop","getChildrecordsByParentID","Rowdraging","events.rowsAdd","rowsAdded","events.rowsRemove","rowsRemoved","tObj","dropPosition","dropIndex","dropRows","orderToIndex","updatedParent","draggedRecord","dragRecords","draggedRecord_1","dragRecords_1","deleteDragRow","refreshGridDataSource","tempDataSource","idx","droppedRecord","proxy","removeFirstrowBorder","isRemove","canremove","removeLastrowBorder","isEmptyRow","islastRowIndex","updateIcon","rowEle","rowPositionHeight","addErrorElem","rowTop","toolHeight","document","getElementById","offsetHeight","positionOffSet","getOffset","contentHeight","top","scrollTop","firstElementChild","offsetTop","divide","topRowSegment","middleRowSegment","bottomRowSegment","posy","left","pageY","isTopSegment","isMiddleRowSegment","isBottomRowSegment","removeChildBorder","removetopOrBottomBorder","addFirstrowBorder","removeErrorElem","topOrBottomBorder","addRemoveClasses","addLastRowborder","borderElem","node","div","gridheaderEle","toolbarHeight","getToolbar","multiplegrid","offsetWidth","getScrollWidth","trElement","bottomborder","gridcontentEle","bottom","scrollElem","scrollWidth","Scroll","getScrollBarWidth","dragelem","ele","errorVal","content","parentNode","removeChild","spanContent","paddingLeft","errorelem","border","box","getBoundingClientRect","body","docElem","documentElement","pageYOffset","scrollLeft","pageXOffset","clientTop","clientLeft","round","cloneElement","cursor","rowIdx","ensuredropPosition","dropElement","ej2_instances","dragDropGrid","srcControl","targetIndex","isNaN","getTargetIdx","selectedRecord","isByMethod","isMultipleGrid","dragLength","recordIndex1","dropAtTop","getChildCount","updateChildRecordLevel","updateChildRecord","droppedRecordIndex","dropMiddle","newParentIndex","childRecordsLength","recordLevel","childItem","deletedRow","removeRecords","flatParentData","childIndex","removeChildItem","idz","recordIndex_1","parentIndex","primaryKeyField","deletedRecordCount","i_2","draggedRecords","rowDragMoudule","TreeVirtualRowModelGenerator","events.dataListener","getDatas","visualData","generateRows","notifyArgs","url","checkAndResetCache","clear","cache","groups","getBlockSize","VirtualRowModelGenerator","Filter","GridFilter","isHierarchyFilter","flatFilteredData","filteredParentRecs","updatedFilteredRecord","clearFilterLevel","dataDetails","addParentRecord","ischild","checkChildExsist","parent_1","parRecord","updateParentFilteredRecord","updateFilterLevel","uniqueIDValue","childRec","isExist","parent_2","parent_3","fLevel","ExcelExport","GridExcel","updateExcelResultModel","exportRowDataBound","finalPageSetup","isCsv","Promise","reject","isLocal","event.beforeExcelExport","customData","manipulateExportProperties","book","dtSrc","queryResult","flatsData","dataSrc","indent","excelRow","excelrowobj","rowObj","filtercolumnlength","Boolean","rowlength","excelRows","rowlevel","grouping","outlineLevel","isCollapsed","worksheets","pageSetup","isSummaryRowBelow","PdfExport","GridPdf","updatePdfResultModel","event.beforePdfExport","customsData","manipulatePdfProperties","flatDatas","paragraphIndent","Page","GridPage","collapseExpandPagedchilds","pageAction","ret","pageRoot","pagedResults","newResults","t","res","pageingDetails","propname","skip","size","pageSize","current","take","or","parents_1","floor","Toolbar","tool","refreshToolbar","toolbarClickHandler","Aggregate","GridAggregate","flatChildRecords","isSort","flatRecords","columnLength","summaryLength","getChildRecordsLength","summaryRowIndex","len_1","len_2","showChildSummary","createSummaryItem","idx_1","currentIndex","summaryParent","itemData","summary","displayColumn","keys_1","getSummaryValues","summaryColumn","single","getFormatFromType","tempObj","requiresCount","summaryKey","sumData","types","toLowerCase","val","calculateAggregate","disp","value_1","summaryformat","Sort","GridSort","flatSortedData","updateModel","createdSortedRecords","sortParams","iterateSort","childSort","ColumnMenu","GridColumnMenu","getColumnMenu","columnMenuModule","ContextMenu","cmenu","addRow","editRecord","BatchEdit","batchChildCount","batchAddedRecords","batchDeletedRecords","batchAddRowRecord","batchRecords","isAdd","batchPageAction","batchCancelAction","getBatchRecords","getAddRowIndex","getSelectedIndex","getBatchChildCount","actualCellIndex","frozenCols","columnObject","getColumnByIndex","added","primaryKey_1","currentDataIndex","indexvalue","rowObjectIndex","getActualRowObjectIndex","newBatchRowAdded","changes","batchIndex","primaryParent","childRecordCount","actualIndex","updateChildCount","updateRowIndex","focusModule","table","matrix","primarykey","childs","selectedRecords","mRows","deleterecords","deleteUniqueID","positionIndex","primarykey_1","addRecords","reverse","totalRecords","startIndex","endIndex","indexValue","Edit","prevAriaRowIndex","GridEdit","previousNewRowPosition","internalProperties","batchEditModule","events.keyPressed","lastCellTab","contentready","editActionEvents","events.doubleTap","gridDblClick","savePreviousRowPosition","events.beforeStartEdit","events.beforeBatchCancel","resetIsOnBatch","getRowPosition","doubleClickTarget","addArgs","ariaRowIndex","applyFormValidation","eventArgs","treeObj","keyData","paramsLength","isOnBatch","isPrimaryKey","updateGridEditMode","keyPress","prom","celleditArgs","request","toolbarID","cellDetails","selectRowIndex","treeCell","mRow","form","rowIndex_1","primaryKeys_1","isTabLastRow","blazorTemplates","aggregateModule","destroyWidgets","formObj","restoreFocus","saveArgs","previousData","previousValue","templateID","getColumnTemplate","editTemplate","updateBlazorTemplate","updateIndex","data1","data2","treecell","l","firstAriaIndex","lastAriaIndex","withinRange","isVirtualization","newRowObject","focussedElement","activeElement","newFreezeRowObject","errors","focus","selector","beginAddEdit","childRecordCount1","currentDataIndex1","deletedValues","editFormValidate","destroyForm","CommandColumn","Command","DetailRow","detailrow","dataBoundArg","detaildataBound","setIndentVisibility","childRowExpand","rowExpandCollapse","actioncomplete","detailele","elements","detailData","detailRowElement","detailElement","previousSibling","expandClass_1","classlist","gridClas","gridclass","newNo","detailClass","spann","updtdcolum","focusElement","VirtualTreeContentRenderer","locator","isExpandCollapse","translateY","maxiPage","recordAdded","preTranslate","isRemoteExpand","getModelGenerator","events.virtualActionArgs","virtualOtherAction","events.indexModifier","setTop","nextSetResIndex","getRowHeight","lastIndex","onDataReady","observers","observes","scrollArgs","scrollListeners","onActionComplete","virtualEditSuccess","resetIseditValue","getData","cancelEdit","setVirtualHeight","contents","debounceEvent","TreeInterSectionObserver","getPanel","getTranslateY","sTop","cHeight","info","isOnenter","rowPosition","withInRange","restoreEditState","restoreNewRow","sentinel","scrollHeight","upScroll","offset","downScroll","vHeight","lastInx","remains","rowPt","firsttdinx","viewInfo","previousInfo","loadSelf","event","appendContent","newChild","virtualInfo","sentinelInfo","axis","cBlock","columnIndexes","cOffset","getColumnOffset","getTable","adjustTable","VirtualContentRenderer","isWheeling","newPos","lastPos","timer","callback","virtualScrollHandlers","prevTop","prevLeft","delta","clearTimeout","preventDefault","returnValue","isWheel","InterSectionObserver","VirtualScroll","prevstartIndex","prevendIndex","GridVirtualScroll","TreeVirtual","returnVisualData","collapseExpandVirtualchilds","virtualPageAction","expandCollapseRec","counts","resourceCount","sIndex","instantiateRenderers","log","renderer","getService","RenderType","Content","ensurePageSize","parentGrid","Freeze","FreezeColumn","dblClickHandler","frozenrows","rData","queryselector","freezeModule","ColumnChooser","GridColumnChooser","X","Y"],"mappings":"shBAIO,SAASA,EAAaC,GACzB,GAAIA,EAAOC,sBAAsBC,cAAa,CAC1C,IAAIC,EAAUH,EAAOC,WAAWE,QAChC,OAAQA,aAAmBC,gBACtBD,aAAmBE,iBAAmBF,aAAmBG,oBACzDH,aAAmBI,gBAAiBJ,aAAmBK,aAEhE,OAAO,EAEX,SAAgBC,EAAgBT,GAC5B,SAAIA,EAAOC,YAAc,WAAYD,EAAOC,YAKhD,SAAgBS,EAAiBV,GAC7B,IAAK,IAAIW,EAAI,EAAGA,EAAIX,EAAOY,QAAQC,OAAQF,IACvC,GAAIX,EAAOY,QAAQD,GAAGG,aAClB,OAAO,EAGf,OAAO,EAEX,SAAgBC,EAAuBf,GACnC,SAAMgB,oBAAkBhB,EAAOiB,KAAKC,eAAeC,MAA2C,KAAnCnB,EAAOiB,KAAKC,eAAeC,KACzC,UAAxCnB,EAAOkB,eAAeE,eAAqE,SAAxCpB,EAAOkB,eAAeE,kBACzEpB,EAAOqB,iBAAkBrB,EAAOiB,KAAKK,eAAeV,QAAQC,QAChB,UAAxCb,EAAOsB,eAAeF,eAAqE,SAAxCpB,EAAOsB,eAAeF,gBAQtF,SAAgBG,EAAkBC,GAC9B,IAAIC,EACJA,KAEA,IAAK,IAAId,EAAI,EAAGe,EADIC,OAAOC,KAAKJ,GAASX,OACJF,EAAIe,EAAKf,IAAK,CAChCkB,YAAU,kBAAmBL,EAAQb,KAEhDc,EAAMK,KAAKN,EAAQb,IAG3B,OAAOc,EAKX,SAAgBM,EAAgB/B,EAAQgC,EAAQC,GAC5C,IAEIC,EAFAC,EAAenB,oBAAkBgB,EAAOI,YAAc,KACtDC,EAAcrC,EAAQgC,EAAOI,WAAWE,UAE5C,OAAoB,MAAhBH,KACInC,EAAOuC,eAAkBvB,oBAAkBmB,EAAanC,EAAOwC,sBAC3DL,EAAanC,EAAOwC,qBAIO,IAA1BL,EAAaM,YAGbN,EAAaC,cAClBF,EAAcG,EAAcrC,EAAQmC,EAAaC,WAAWE,YACzCtC,EAAOuC,gBAAkBvB,oBAAkBkB,EAAYlC,EAAOwC,uBACzEN,EAAYlC,EAAOwC,qBACvBN,EAAYO,UAAW,GAChB,KAEPP,IAAwC,IAAzBA,EAAYO,aAGtBP,GACEH,EAAgB/B,EAAQkC,EAAaD,OAjBhDE,EAAaM,UAAW,GACjB,IA+BnB,SAAgBC,EAAoBlB,GAChC,IAAIC,KACJ,GAAIT,oBAAkBQ,KAAcA,EAAQmB,kBAAoB3B,oBAAkBQ,EAAQoB,gBAClFpB,EAAQoB,aAAa/B,OACzB,SAEJ,IAAKG,oBAAkBQ,EAAQoB,cAE3B,IAAK,IADDA,EAAepB,EAAQoB,aAClBjC,EAAI,EAAGe,EAAMC,OAAOC,KAAKgB,GAAc/B,OAAQF,EAAIe,EAAKf,IAC7Dc,EAAMK,KAAKc,EAAajC,KACpBiC,EAAajC,GAAGgC,kBAAqB3B,oBAAkB4B,EAAajC,GAAGiC,eACvEA,EAAajC,GAAGiC,aAAa/B,UAC7BY,EAAQA,EAAMoB,OAAOH,EAAoBE,EAAajC,MAIlE,OAAOc,EAEX,SAAgBqB,EAAU9C,GACtB,GAAID,EAAaC,GAAS,CACtB,IAAI+C,EAAK/C,EAAOC,WAChB,OAAQe,oBAAkB+B,EAAGC,OAEjC,OAAO,EAEX,SAAgBC,EAAYC,GAIxB,IAAK,IAFDC,EACAvB,EAFAwB,KAGKzC,EAAI,EAAGuC,GAASvC,EAAIuC,EAAMrC,OAAQF,IAAK,CAC5CiB,EAAOD,OAAOC,KAAKsB,EAAMvC,IACzBwC,KACA,IAAK,IAAIE,EAAI,EAAGA,EAAIzB,EAAKf,OAAQwC,IAC7BF,EAAIvB,EAAKyB,IAAMH,EAAMvC,GAAGiB,EAAKyB,IAEjCD,EAAOtB,KAAKqB,GAEhB,OAAOC,EAEX,SAAgBE,EAAaC,GAMzB,cALOA,EAAMZ,uBACNY,EAAMX,oBACNW,EAAMC,aACND,EAAMnB,kBACNmB,EAAME,MACNF,EAEX,SAAgBlB,EAAcrC,EAAQuD,EAAOG,GACzC,GAAIA,EAAe,CAEf,OAAO1D,EAAe,yBAAEuD,GAIxB,OAAOvD,EAAS,mBAAEuD,GChJnB,SAASI,EAAWC,EAASC,EAASC,EAAiBC,EAAaC,EAAeC,EAAYC,GAClG,IAGIvD,EACA0C,EAEAc,EANAZ,EAAQK,EAAQL,MAChBa,EAASR,EAAQQ,OAMjBjD,EAAM0C,EAAQ5C,KAAKoD,0BAA0B,GAC7CC,EAAWT,EAAQ5D,sBAAsBC,cACzC2D,EAAQ5D,WAAWA,WAAWsE,KAAOV,EAAQ5D,WAC7CuE,KACAC,EAAelB,EACfmB,GAAS,EAIb,GAHkC,UAA9Bb,EAAQc,aAAaC,OACrBT,EAAeN,EAAQ5C,KAAK4D,WAAWC,mBAE5B,QAAXV,GAAgC,cAAXA,GAAyD,UAA9BP,EAAQc,aAAaC,MAClET,EAAyB,aAAEtD,OAAU,CACxC,IAAIkE,EAmGZ,SAA0BnB,EAASU,EAAUT,EAASC,EAAiBC,EAAaC,EAAeE,GAC/F,IAAIX,EACAmB,GAAS,EACTM,EAAqBnB,EAAQ5C,KAAKgE,wBAGtC,OAFA1B,EAAQ2B,YAAWtB,EAAQL,OAC3BA,EAAQD,EAAaC,GACbM,EAAQc,aAAaQ,gBACzB,IAAK,MACDb,EAASc,QAAQ7B,GACjBmB,GAAS,EACT,MACJ,IAAK,SACDJ,EAASxC,KAAKyB,GACdmB,GAAS,EACT,MACJ,IAAK,QAOGnB,EANCvC,oBAAkBkD,GAMXZ,EADRC,EAAQ2B,YAAWF,EAAmBjB,EAAc,KAH5CT,EADRC,EAAQ2B,YAAWhB,IAOvB,MACJ,IAAK,QACL,IAAK,QACD,GAAKlD,oBAAkBkD,GAIlB,CACD,IAAImB,EAAcxB,EAAQ5C,KAAKoD,0BAA0B,GACrDiB,EAAcN,EAAmBjB,GAOrCR,EAAQD,EALJC,GADCvC,oBAAkBsE,IAAgBA,EAAYD,KAAiBzB,EAAQL,MAAM8B,KAAmC,IAAnBrB,EACtFkB,YAAWI,GAGXJ,YAAWtB,EAAQL,aAT/BA,EAAQD,EADRC,EAAQ2B,YAAWhB,KAcA,IAAnBF,IACAM,EAASc,QAAQ7B,GACjBmB,GAAS,GAGrB,OAASnB,MAAOA,EAAOmB,OAAQA,GAlJda,CAAU3B,EAASU,EAAUT,EAASC,EAAiBC,EAAaC,EAAeE,GAChGX,EAAQwB,EAAOxB,MACfmB,EAASK,EAAOL,OAQpB,GANInB,aAAiBiC,MACjBhB,EAAevB,EAAYM,GAG3BiB,EAAa1C,KAAKoD,YAAW3B,KAE5BmB,IAAsB,QAAXN,GAC6B,QAAxCP,EAAQc,aAAaQ,gBAAoE,WAAxCtB,EAAQc,aAAaQ,gBACvE,IAAK,IAAIM,EAAI,EAAGA,EAAIjB,EAAa3D,OAAQ4E,IAAK,CACJ,iBAA1BjB,EAAaiB,GAAGtE,KACxBqD,EAAaiB,GAAKjB,EAAaiB,GAAGtE,IAEtC,IAAIS,EAAOD,OAAOC,KAAK4C,EAAaiB,GAAGC,UACvC/E,EAAI2D,EAASzD,OA0Eb,IAzEA,IAAI8E,EAAU,WACV,GAAIrB,EAAS3D,GAAGQ,KAASqD,EAAaiB,GAAGtE,GAAM,CAC3C,GAAe,WAAXiD,EAuBC,CACD,GAAe,SAAXA,GACA,IAAKf,EAAI,EAAGA,EAAIzB,EAAKf,OAAQwC,IACzB,GAAIiB,EAAS3D,GAAGiF,eAAehE,EAAKyB,MAAuC,SAA9BQ,EAAQc,aAAaC,OACzD5D,oBAAkBmD,IAAyD,IAAxCA,EAA2B,eAAEtD,QAClEe,EAAKyB,KAAOY,GAAa,CAC5B,IAAI4B,EAAaxD,EAAcwB,EAASW,EAAaiB,GAAGnD,UACxDuD,EAAWH,SAAS9D,EAAKyB,IAAMwC,EAAWjE,EAAKyB,IAAMiB,EAAS3D,GAAGiB,EAAKyB,IAAMmB,EAAaiB,GAAG7D,EAAKyB,UAIxG,GAAe,QAAXe,GAA+B,cAAXA,EAAwB,CACjD,IAAIZ,OAAQ,EACgC,UAAxCK,EAAQc,aAAaQ,eACjBrB,GACAW,EAAaiB,SAAS7B,EAAQiC,iBAAmBxB,EAAS3D,GAAGkD,EAAQkC,WACrEzB,EAAS0B,OAAOrF,EAAI,EAAG,EAAG8D,EAAaiB,YAGlCpB,EAAS3D,GAAGiF,eAAe/B,EAAQoC,gBACpC3B,EAAS3D,GAAGkD,EAAQoC,kBAExB3B,EAAS3D,GAAGkD,EAAQoC,cAAcnE,KAAK2C,EAAaiB,UACpDQ,EAAgB/E,EAAKmD,EAAS3D,GAAIyD,EAAQP,EAASC,EAAiBW,IAG3B,UAAxCZ,EAAQc,aAAaQ,gBAC1Bb,EAAS0B,OAAOrF,EAAI,EAAG,EAAG8D,EAAaiB,UACvCQ,EAAgB/E,EAAKmD,EAAS3D,GAAIyD,EAAQP,EAASC,EAAiBW,IAE9DV,EAIuC,UAAxCF,EAAQc,aAAaQ,iBAC1Bb,EAAS0B,OAAOrF,EAAG,EAAG8D,EAAaiB,UACnCQ,EAAgB/E,EAAKmD,EAAS3D,GAAIyD,EAAQP,EAASC,EAAiBW,KALpEjB,EAAQ,EACRc,EAAS0B,OAAOxC,EAAO,EAAGiB,EAAaiB,WAO/C,MAAO,QA7DP,IAAIS,EAAgB7B,EAAS3D,GAE7B,GADA2D,EAAS0B,OAAOrF,EAAG,GACfmD,EAAiB,CACjB,IAAK9C,oBAAkBmF,EAActC,EAAQiC,kBAKzC,IAAK,IAJDM,EAAavC,EAAQwC,SAASC,OAAO,SAAUC,GAC/C,OAAOA,EAAE1C,EAAQkC,aAAeI,EAActC,EAAQiC,mBACvD,GACClD,EAAewD,EAAaA,EAAWvC,EAAQoC,iBAC1CO,EAAI5D,EAAa/B,OAAS,EAAG2F,GAAK,EAAGA,IAC1C,GAAI5D,EAAa4D,GAAG3C,EAAQkC,aAAeI,EAActC,EAAQkC,WAAY,CACzEnD,EAAaoD,OAAOQ,EAAG,GAClB5D,EAAa/B,SACduF,EAAWzD,iBAAkB,EAC7BuD,EAAgB/E,EAAKiF,EAAYhC,EAAQP,EAASC,IAEtD,MAIZ,MAAO,cA6CT9C,oBAAkBsD,EAAS3D,GAAGkD,EAAQoC,gBACxCQ,EAAmBnC,EAAS3D,GAAGkD,EAAQoC,cAAezB,EAAaiB,GAAIrB,EAAQjD,EAAK0C,EAASC,EAAiBW,EAAcR,IAC5HiC,EAAgB/E,EAAKmD,EAAS3D,GAAIyD,EAAQP,EAASC,IAIxDnD,KAAOA,GAAK,GAAG,CAElB,GAAgB,UADFgF,IAEV,QAsDpB,SAAgBc,EAAmB7D,EAAc4B,EAAcJ,EAAQjD,EAAK0C,EAASC,EAAiBW,EAAcR,GAGhH,IAFA,IAAIyC,GAAa,EACbrD,EAAIT,EAAa/B,OACdwC,KAAOA,GAAK,GACf,GAAIT,EAAaS,GAAGlC,KAASqD,EAAarD,IACrC2C,GAAmBlB,EAAaS,GAAGQ,EAAQiC,mBAAqBtB,EAAaX,EAAQkC,WAAa,CACnG,GAAe,SAAX3B,EAAmB,CAGnB,IAAK,IAFDxC,EAAOD,OAAOC,KAAK4C,GACnBqB,EAAaxD,EAAcwB,EAASW,EAAalC,UAC5C3B,EAAI,EAAGA,EAAIiB,EAAKf,OAAQF,KACzBiC,EAAaS,GAAGuC,eAAehE,EAAKjB,KAAsC,SAA9BkD,EAAQc,aAAaC,MAAmBhD,EAAKjB,KAAOsD,IAChG4B,EAAWjE,EAAKjB,IAAMkF,EAAWH,SAAS9D,EAAKjB,IAAMiC,EAAaS,GAAGzB,EAAKjB,IAAM6D,EAAa5C,EAAKjB,KAG1G,MAEC,GAAe,QAAXyD,GAA+B,cAAXA,EACmB,UAAxCP,EAAQc,aAAaQ,eACjBrB,GACAW,EAAaZ,EAAQiC,iBAAmBlD,EAAaS,GAAGQ,EAAQkC,WAChEnD,EAAaoD,OAAO3C,EAAI,EAAG,EAAGoB,GAC9ByB,EAAgB/E,EAAKyB,EAAaS,GAAIe,EAAQP,EAASC,EAAiBW,KAGnE7B,EAAaS,GAAGuC,eAAe/B,EAAQoC,gBACxCrD,EAAaS,GAAGQ,EAAQoC,kBAE5BrD,EAAaS,GAAGQ,EAAQoC,cAAcnE,KAAK2C,EAAaiB,UACxDQ,EAAgB/E,EAAKyB,EAAaS,GAAIe,EAAQP,EAASC,EAAiBW,IAG/B,UAAxCZ,EAAQc,aAAaQ,gBAC1BvC,EAAaoD,OAAO3C,EAAG,EAAGoB,EAAaiB,UACvCQ,EAAgB/E,EAAKyB,EAAaS,GAAIe,EAAQP,EAASC,EAAiBW,IAE3B,UAAxCZ,EAAQc,aAAaQ,iBAC1BvC,EAAaoD,OAAO3C,EAAI,EAAG,EAAGoB,EAAaiB,UAC3CQ,EAAgB/E,EAAKyB,EAAaS,GAAIe,EAAQP,EAASC,EAAiBW,QAG3E,CACgB7B,EAAaS,GAAGjB,WACjCQ,EAAaoD,OAAO3C,EAAG,GAClBT,EAAa/B,SACd6F,GAAa,SAIf1F,oBAAkB4B,EAAaS,GAAGQ,EAAQoC,gBAC5CQ,EAAmB7D,EAAaS,GAAGQ,EAAQoC,cAAezB,EAAcJ,EAAQjD,EAAK0C,EAASC,EAAiBW,EAAcR,IAC7HiC,EAAgB/E,EAAKyB,EAAaS,GAAIe,EAAQP,EAASC,GAInE,OAAO4C,EAEX,SAAgBR,EAAgB/E,EAAKa,EAAQoC,EAAQP,EAASC,EAAiB6C,GAC3E,GAA6C,UAAxC9C,EAAQc,aAAaQ,gBAAsE,UAAxCtB,EAAQc,aAAaQ,gBACzD,QAAXf,GAA+B,cAAXA,GAA6BpD,oBAAkB2F,EAAMvE,YAI7E,CACD,IACIwE,EADAC,EAAiBhD,EAAQ5C,KAAKgE,wBAWlC,GATA4B,EAAeC,IAAI,SAAUP,EAAG5F,GAAS4F,EAAEpF,KAASa,EAAOb,KACvDyF,EAAUjG,KAGdqB,EAAS6E,EAAeD,GACpB/C,EAAQkD,sBAAwB/F,oBAAkBgB,KAAYhB,oBAAkB2F,KAChF3E,EAASgF,WAAS,sBAAwBL,EAAMM,eAAgBpD,IAEpE7B,EAAOW,iBAAkB,EACV,QAAXyB,GAA+B,cAAXA,EAAwB,CAC5CpC,EAAOS,UAAW,EAClBT,EAAOW,iBAAkB,EACrBkB,EAAQqD,aAAatG,QAAQC,QAAUG,oBAAkB2F,KACzDA,EAAQE,EAAeP,OAAO,SAAUC,GACpC,OAAIA,EAAEU,iBAAmBjF,EAAOM,SACrBiE,EAGA,QAInB,IAAI3D,EAAe+D,EAAQA,aAAiBnB,MAAQmB,EAAM,GAAKA,EAAQE,EAAeD,EAAU,GACpD,UAAxC/C,EAAQc,aAAaQ,iBAChBnD,EAAO4D,eAAe,gBAIlB5E,oBAAkB2F,IAAU3E,EAAOb,KAASwF,EAAMxF,IACnDa,EAAOY,aAAad,KAAK6E,GAJ7B3E,EAAOY,iBAOwC,IAA/CZ,EAAOY,aAAauE,QAAQvE,IAAwBZ,EAAOb,KAASwF,EAAMxF,IAC1Ea,EAAOY,aAAawC,QAAQxC,GAE5BkB,IACK9B,EAAO4D,eAAe/B,EAAQoC,gBAC/BjE,EAAO6B,EAAQoC,mBAEyC,IAAxDjE,EAAO6B,EAAQoC,cAAckB,QAAQvE,IAAwBZ,EAAOb,KAASwF,EAAMxF,IACnFa,EAAO6B,EAAQoC,cAAcb,QAAQxC,KAQrD,IAAK,IAHDyC,EAAcxB,EAAQ5C,KAAKoD,0BAA0B,GACrD+C,EAAOvD,EAAQ5C,KAAKhB,sBAAsBC,cAC1C2D,EAAQ5C,KAAKhB,WAAWA,WAAWsE,KAAOV,EAAQ5C,KAAKhB,WAClDU,EAAI,EAAGA,EAAIyG,EAAKvG,OAAQF,IAC7B,GAAIyG,EAAKzG,GAAG0E,KAAiBrD,EAAOqD,GAAc,CAC9C+B,EAAKzG,GAAKqB,EACV,MAGR6B,EAAQ5C,KAAKoG,WAAWlG,EAAKa,GAC7B,IAAIsF,EAAMzD,EAAQ0D,cAAcX,GACE,UAA9B/C,EAAQc,aAAaC,OACrB0C,EAAMzD,EAAQ2D,UAAU3D,EAAQ5C,KAAKwG,wBAAwBzF,EAAOb,MAExE,IAAIuG,OAAa,GACb7D,EAAQ8D,YAAc9D,EAAQ+D,sBAC9BF,EAAa7D,EAAQgE,qBAAqBjB,KAEzC/C,EAAQkD,sBAAyB/F,oBAAkBsG,KAAStG,oBAAkB0G,IAC/E7D,EAAQiE,aAAaC,YACjBX,KAAMpF,EAAQgG,KAAMV,EAAIW,MAAMpE,EAAQqE,iBAAmBZ,EAAIW,MAAMpE,EAAQqE,iBACrER,EAAWO,MAAMpE,EAAQqE,gBAAkBrE,EAAQsE,eACzDC,OAAQvE,EAAQ5C,KAAKoH,aAAaxE,EAAQqE,iBAC1CI,YAAalE,QA3EsE,CAC1E/B,EAAcwB,EAAS8C,EAAMvE,WAAWE,UAC9CM,aAAad,KAAK6E,IClOrC,IAAI4B,EAAwB,WA6DxB,OA5DA,SAAgBC,GAMZC,KAAKC,cAAe,EAKpBD,KAAKE,QAKLF,KAAKG,mBAAoB,EAMzBH,KAAKI,iBAAkB,EAMvBJ,KAAKK,gBAAiB,EAMtBL,KAAKpH,gBAAiB,EAMtBoH,KAAKM,cAAe,EAMpBN,KAAKO,eAAgB,EAWrBP,KAAKnC,UACL2C,QAAMR,KAAMD,OC/DhBU,EAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBxH,OAAO2H,iBAChBC,wBAA2B/D,OAAS,SAAU4D,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI7C,KAAK6C,EAAOA,EAAEzD,eAAeY,KAAI4C,EAAE5C,GAAK6C,EAAE7C,MACpD4C,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAa1H,OAAOgI,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,IAAIF,IAV3C,GAaxCI,EAA0C,SAAUC,EAAYC,EAAQ3I,EAAK4I,GAC7E,IAA2HX,EAAvHY,EAAIC,UAAUpJ,OAAQqJ,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOpI,OAAOwI,yBAAyBL,EAAQ3I,GAAO4I,EACrH,GAAuB,iBAAZK,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQ3I,EAAK4I,QACpH,IAAK,IAAIpJ,EAAIkJ,EAAWhJ,OAAS,EAAGF,GAAK,EAAGA,KAASyI,EAAIS,EAAWlJ,MAAIuJ,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQ3I,EAAK+I,GAAKd,EAAEU,EAAQ3I,KAAS+I,GAChJ,OAAOF,EAAI,GAAKE,GAAKvI,OAAO2I,eAAeR,EAAQ3I,EAAK+I,GAAIA,GAM5DK,EAA2B,SAAUC,GAErC,SAASD,IACL,OAAkB,OAAXC,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KAsC/D,OAxCAS,EAAUqB,EAAWC,GAIrBZ,GACIc,cACDH,EAAUb,UAAW,aAAS,GACjCE,GACIc,cACDH,EAAUb,UAAW,gBAAY,GACpCE,GACIc,cACDH,EAAUb,UAAW,aAAS,GACjCE,GACIc,cACDH,EAAUb,UAAW,iBAAa,GACrCE,GACIc,cACDH,EAAUb,UAAW,oBAAgB,GACxCE,GACIc,cACDH,EAAUb,UAAW,iBAAa,GACrCE,GACIc,gBACDH,EAAUb,UAAW,yBAAqB,GAC7CE,GACIc,gBACDH,EAAUb,UAAW,sBAAkB,GAC1CE,GACIc,cACDH,EAAUb,UAAW,YAAQ,GAChCE,GACIc,cACDH,EAAUb,UAAW,mBAAe,GACvCE,GACIc,cACDH,EAAUb,UAAW,WAAO,GAC/BE,GACIc,cACDH,EAAUb,UAAW,oBAAgB,GACjCa,GACTI,iBAKEC,EAAgC,SAAUJ,GAE1C,SAASI,IACL,OAAkB,OAAXJ,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KA0B/D,OA5BAS,EAAU0B,EAAgBJ,GAI1BZ,GACIiB,gBAAeN,IAChBK,EAAelB,UAAW,eAAW,GACxCE,GACIc,WAAS,cACVE,EAAelB,UAAW,YAAQ,GACrCE,GACIc,cACDE,EAAelB,UAAW,YAAQ,GACrCE,GACIc,YAAS,IACVE,EAAelB,UAAW,2BAAuB,GACpDE,GACIc,WAAS,OACVE,EAAelB,UAAW,0BAAsB,GACnDE,GACIc,cACDE,EAAelB,UAAW,iBAAa,GAC1CE,GACIc,YAAS,IACVE,EAAelB,UAAW,oBAAgB,GAC7CE,GACIc,WAAS,WACVE,EAAelB,UAAW,qBAAiB,GACvCkB,GACTD,iBCpGEzB,EAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBxH,OAAO2H,iBAChBC,wBAA2B/D,OAAS,SAAU4D,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI7C,KAAK6C,EAAOA,EAAEzD,eAAeY,KAAI4C,EAAE5C,GAAK6C,EAAE7C,MACpD4C,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAa1H,OAAOgI,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,IAAIF,IAV3C,GAaxCI,EAA0C,SAAUC,EAAYC,EAAQ3I,EAAK4I,GAC7E,IAA2HX,EAAvHY,EAAIC,UAAUpJ,OAAQqJ,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOpI,OAAOwI,yBAAyBL,EAAQ3I,GAAO4I,EACrH,GAAuB,iBAAZK,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQ3I,EAAK4I,QACpH,IAAK,IAAIpJ,EAAIkJ,EAAWhJ,OAAS,EAAGF,GAAK,EAAGA,KAASyI,EAAIS,EAAWlJ,MAAIuJ,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQ3I,EAAK+I,GAAKd,EAAEU,EAAQ3I,KAAS+I,GAChJ,OAAOF,EAAI,GAAKE,GAAKvI,OAAO2I,eAAeR,EAAQ3I,EAAK+I,GAAIA,GAM5DY,EAAkC,SAAUN,GAE5C,SAASM,IACL,OAAkB,OAAXN,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KAK/D,OAPAS,EAAU4B,EAAkBN,GAI5BZ,GACIc,WAAS,SACVI,EAAiBpB,UAAW,gBAAY,GACpCoB,GACTH,iBC3BSI,EAAe,eAIfC,EAAgB,gBAEhBC,EAAkB,kBAElBC,EAAc,cAEdC,EAAkB,kBAElBC,EAAiB,iBAIjBC,EAAc,cAEdC,EAAiB,iBAEjBC,EAAgB,gBAEhBC,EAAe,eAEfC,EAAoB,oBAEpBC,EAAkB,kBAElBC,EAAa,aAEblJ,EAAW,WAIXmJ,EAAY,YAIZC,EAAe,eAEfC,EAA2B,2BAE3BC,EAAgB,gBAEhBC,EAAgB,iBAEhBC,EAAkB,kBAElBC,EAAmB,mBAQnBC,EAAa,aAEbC,EAAY,YAEZC,EAAW,WAEXC,EAAoB,oBAEpBC,EAAW,WAEXC,GAAY,YAEZC,GAAW,WAEXC,GAAc,cAEdC,GAAc,cAEdC,GAAW,WAEXC,GAAoB,oBAEpBC,GAAiB,iBAEjBC,GAAkB,kBAElBC,GAAY,YAEZC,GAAa,cAIbC,GAAY,aAIZC,GAAoB,sBAEpBC,GAAe,gBAEfC,GAAgB,iBAEhBC,GAAkB,YAElBC,GAAoB,sBAIpBC,GAAkB,kBAIlBC,GAAqB,qBAMrBC,GAAU,WAEVC,GAAa,cAEbC,GAAa,cAEbC,GAAa,cC7HpB3E,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBxH,OAAO2H,iBAChBC,wBAA2B/D,OAAS,SAAU4D,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI7C,KAAK6C,EAAOA,EAAEzD,eAAeY,KAAI4C,EAAE5C,GAAK6C,EAAE7C,MACpD4C,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAa1H,OAAOgI,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,IAAIF,IAV3C,GAmBxCsE,GAA+B,SAAUtD,GAEzC,SAASsD,EAAc9N,GACnB,IAAI+N,EAAQvD,EAAOwD,KAAKvF,KAAMzI,EAAOiB,OAASwH,KAI9C,OAHAsF,EAAME,gBAAkB,GACxBF,EAAMG,4BACNH,EAAMI,eAAiBnO,EAChB+N,EAsJX,OA5JA7E,GAAU4E,EAAetD,GAQzBsD,EAAcpE,UAAU0E,YAAc,SAAUC,GAC5C,IAAIC,EAAc,cAIdzH,EAAiB4B,KAAK0F,eAAelJ,wBACzC,GAAyC,KAArCsJ,OAAOC,eAAeC,WAAmB,CACzChG,KAAKiG,kBAAkBnL,MAAQkF,KAAK6F,GAAe,GACnD,IAAIK,EAAOlG,KAAK0F,eAAelN,KAAKuG,UACpC,GAAmD,SAA/CiB,KAAK0F,eAAeS,kBAAkBhK,KAAiB,CAIvD,IAAK,IAHDiK,EAAkBpG,KAAK0F,eAAeW,wBAAwBC,KAAK,SAAUC,EAAG3F,GAChF,OAAO2F,EAAI3F,IAEN1I,EAAI,EAAGA,EAAIkO,EAAgBhO,OAAQF,IAIxC,GAHIA,EAAI,IACJ8H,KAAKwF,iBAAmB,OAEvBU,EAAKE,EAAgBlO,IAAIsO,UAAUC,SAAS,gBAAiB,CAC9D,IAAIjH,KAAWkH,MAAMnB,KAAKW,EAAKE,EAAgBlO,IAAIyO,iBAAiB,eAChEC,EAAW5G,KAAK0F,eAAemB,qBAAqB3O,GAAW,UACV,IAArD8H,KAAKyF,yBAAyB/G,QAAQkI,KACQ,WAA1C5G,KAAK0F,eAAeoB,mBAA4E,SAA1C9G,KAAK0F,eAAeoB,mBAC1E9G,KAAK+G,kBAAkB3I,EAAgBgI,EAAgBlO,GAAIgO,EAAMN,EAAY1N,GAEjF8H,KAAgB,YAAER,GAAO,EAAO,KAAMoG,GACtC5F,KAAKwF,iBAAmBxF,KAAK6F,GAC7B7F,KAAKyF,yBAAyBpM,KAAKuN,GACnC5G,KAAK6F,GAAe,GAC0B,UAA1C7F,KAAK0F,eAAeoB,mBAA2E,SAA1C9G,KAAK0F,eAAeoB,mBACzE9G,KAAKgH,iBAAiB5I,EAAgBgI,EAAgBlO,GAAIgO,EAAMN,IAKhF,GAAIA,EAAY,CAEP,IADDqB,KACJ,IAAS/O,EAAI,EAAGA,EAAI8H,KAAK0F,eAAewB,oBAAoB9O,OAAQF,IAChE+O,EAAgB/O,GAAK8H,KAAK0F,eAAewB,oBAAoBhP,GAAGiP,WAEpEnH,KAAgB,YAAEiH,GAAiB,EAAO,KAAMrB,GAChD5F,KAAKwF,gBAAkBxF,KAAK6F,GAAe,KAAO7F,KAAKwF,gBAE3D,IAAI4B,GACAzI,KAAMqB,KAAKwF,gBACX6B,QAAQ,GAGZ,GADArH,KAAK0F,eAAe4B,QDnBZ,aCmBuCF,GAC3CA,EAAKC,OACL,OAEJrH,KAAKiG,kBAAkBnL,MAAQkF,KAAK6F,GAAeuB,EAAKzI,KACnD4I,UAAQC,UAAUC,MAAM,qBAIzBzH,KAAKiG,kBAAkByB,kBAAkB,EAAG1H,KAAKiG,kBAAkBnL,MAAM1C,QAHzE4H,KAAKiG,kBAAkB0B,SAK3B3H,KAAa,UAAI,EACjBA,KAAKyF,4BACLzF,KAAKwF,gBAAkB,QAGvBzD,EAAOd,UAAU0E,YAAYJ,KAAKvF,KAAM4F,KAIpDP,EAAcpE,UAAU8F,kBAAoB,SAAU3I,EAAgB7C,EAAe2K,EAAMN,EAAY7K,GACnG,IACI8K,EAAc,cACdlM,EAAa,aACbE,EAAW,WAEf,IAAKtB,oBAAkB6F,EAAe7C,GAAe5B,IAEjD,IAAK,IADDiO,EAAYxJ,EAAe7C,GAAe5B,GAAiB,MACtDzB,EAAI,EAAGA,EAAI0P,EAAY,EAAG1P,IAC/B,IAAK,IAAI0C,EAAI,EAAGA,EAAIwD,EAAehG,OAAQwC,IACvC,IAAKrC,oBAAkB6F,EAAe7C,GAAe5B,KACjDyE,EAAexD,GAAGf,KAAcuE,EAAe7C,GAAe5B,GAAYE,GAAW,CACrF0B,EAAgBX,EAChB,IAAI4E,KAAWkH,MAAMnB,KAAKW,EAAK3K,GAAeoL,iBAAiB,eAC3DC,EAAWxI,EAAexD,GAAGf,GACjC,IAAyD,IAArDmG,KAAKyF,yBAAyB/G,QAAQkI,GAAkB,CACxD5G,KAAgB,YAAER,GAAO,EAAO,KAAMoG,GAElC5F,KAAKwF,gBADLzK,EAAQ,EACeiF,KAAKwF,gBAAkBxF,KAAK6F,GAAe,KAG3C7F,KAAK6F,GAAe,KAAO7F,KAAKwF,gBAE3DxF,KAAKyF,yBAAyBpM,KAAKuN,GACnC5G,KAAK6F,GAAe,GACpB,SAOxBR,EAAcpE,UAAU4G,KAAO,SAAUjC,GACrC7D,EAAOd,UAAU4G,KAAKtC,KAAKvF,KAAM4F,IAErCP,EAAcpE,UAAU6G,MAAQ,SAAUnJ,EAAMoJ,EAAUC,GACtDjG,EAAOd,UAAU6G,MAAMvC,KAAKvF,KAAMrB,EAAMoJ,EAAUC,IAMtD3C,EAAcpE,UAAUgH,cAAgB,WACpC,MAAO,aAQX5C,EAAcpE,UAAUiH,QAAU,WAC9BnG,EAAOd,UAAUiH,QAAQ3C,KAAKvF,OAElCqF,EAAcpE,UAAU+F,iBAAmB,SAAU5I,EAAgB7C,EAAe2K,EAAMN,GACtF,IAII/L,EAAW,WACf,GAAIuE,EAAe7C,GAA8B,gBAE7C,IAAK,IADD4M,EAAY/J,EAAe7C,GAA2B,aACjDrD,EAAI,EAAGA,EAAIiQ,EAAU/P,OAAQF,IAClC,IAAK,IAAI0C,EAAI,EAAGA,EAAIwD,EAAehG,OAAQwC,IACvC,IAAKrC,oBAAkB4P,EAAUjQ,GAAG2B,KAAcuE,EAAexD,GAAGf,KAAcsO,EAAUjQ,GAAG2B,GAAW,CACtG,IAAMtB,oBAAkB2N,EAAKtL,MAASsL,EAAKtL,GAAG4L,UAAUC,SAAS,gBAAiB,CAC9E,IAAIjH,KAAWkH,MAAMnB,KAAKW,EAAKtL,GAAG+L,iBAAiB,eAC/CC,EAAWxI,EAAexD,GAAGf,IACwB,IAArDmG,KAAKyF,yBAAyB/G,QAAQkI,KACtC5G,KAAgB,YAAER,GAAO,EAAO,KAAMoG,GACtC5F,KAAKwF,iBAAoB,KAAOxF,KAAgB,YAChDA,KAAgB,YAAI,GACpBA,KAAKyF,yBAAyBpM,KAAKuN,GACnC5G,KAAKgH,iBAAiB5I,EAAgBxD,EAAGsL,EAAMN,IAGvD,QAMbP,GACT+C,aCxKEC,GAA2B,WAI3B,SAASA,EAAU9Q,GACfyI,KAAKzI,OAASA,EACdyI,KAAKsI,iBACLtI,KAAKoG,mBACLpG,KAAKuI,mBA2aT,OAraAF,EAAUpH,UAAUgH,cAAgB,WAChC,MAAO,aAEXI,EAAUpH,UAAUsH,iBAAmB,WACnCvI,KAAKzI,OAAOiR,GAAG,eAAgBxI,KAAKyI,eAAgBzI,MACpDA,KAAKzI,OAAOiR,GAAG,iBAAkBxI,KAAK0I,eAAgB1I,MACtDA,KAAKzI,OAAOiR,GAAG,oBAAqBxI,KAAK2I,kBAAmB3I,MAC5DA,KAAKzI,OAAOiB,KAAKgQ,GAAG,mBAAoBxI,KAAKyI,eAAgBzI,MAC7DA,KAAKzI,OAAOiR,GAAG,oBAAqBxI,KAAK4I,kBAAmB5I,OAEhEqI,EAAUpH,UAAU4H,oBAAsB,WAClC7I,KAAKzI,OAAOuR,cAGhB9I,KAAKzI,OAAOwR,IAAI,eAAgB/I,KAAKyI,gBACrCzI,KAAKzI,OAAOwR,IAAI,iBAAkB/I,KAAK0I,gBACvC1I,KAAKzI,OAAOiB,KAAKuQ,IAAI,mBAAoB/I,KAAKyI,gBAC9CzI,KAAKzI,OAAOwR,IAAI,oBAAqB/I,KAAK4I,mBAC1C5I,KAAKzI,OAAOwR,IAAI,oBAAqB/I,KAAK2I,qBAO9CN,EAAUpH,UAAUiH,QAAU,WAC1BlI,KAAK6I,uBAETR,EAAUpH,UAAU2H,kBAAoB,SAAUxB,GAC9C,IAEI4B,EAFA3H,EAASjI,YAAU,SAAUgO,GAC7B6B,EAAYC,eAAa7H,EAAQ,sBAErC,GAAI4H,GAAaA,EAAUtC,iBAAiB,sBAAsBvO,OAAS,EAAG,CAC1E4Q,EAAWC,EAAUE,cAAc,0BACnC,IAAIpB,OAAW,GACfA,MACS1O,KAAKgI,EAAO+H,QAAQ,MAAMrB,UACnC/H,KAAKqJ,iBAAiBtB,GACtB/H,KAAKsJ,sBAAsBN,EAAUA,EAASO,mBAAmB/C,UAAUC,SAAS,WAAYpF,EAAO+H,QAAQ,YAE9G,GAAIH,GAAaA,EAAUtC,iBAAiB,oBAAoBvO,OAAS,GAAK4H,KAAKzI,OAAOiS,mBAAoB,CAC/G,IAAIC,GAAiBR,EAAUE,cAAc,YAAY3C,UAAUC,SAAS,aACpEwC,EAAUE,cAAc,YAAY3C,UAAUC,SAAS,UAC/DzG,KAAK0J,gBAAgBD,GACrBT,EAAWC,EAAUE,cAAc,0BACnCnJ,KAAKsJ,sBAAsBN,EAAUS,EAAepI,EAAO+H,QAAQ,SAG3Ef,EAAUpH,UAAUqI,sBAAwB,SAAUN,EAAUW,EAAYC,GACxE,IAAIjL,EAAOqB,KAAKzI,OAAOiF,wBAAwBoN,EAAW7B,UACtDX,GAASyC,QAASF,EAAYtI,OAAQ2H,EAAUY,WAAYA,EAC5DE,QAASd,EAASxC,UAAUC,SAAS,mBAC/BzG,KAAKzI,OAAOwS,oBAAsBpL,GAC5CqB,KAAKzI,OAAO+P,QAAQ0C,EAAuB5C,IAE/CiB,EAAUpH,UAAUgJ,uBAAyB,WAIzC,IAAK,IAHDC,EACAC,EACAhS,EAAW6H,KAAKzI,OAAc,QACzB6S,EAAM,EAAGA,EAAMjS,EAAQC,OAAQgS,IAChCjS,EAAQiS,GAAK/R,eACb6R,EAAalK,KAAKzI,OAAOY,QAAQiS,GAAKC,KAI9C,IAAK,IADDC,EAAmBtK,KAAKzI,OAAOgT,mBAAmB5D,iBAAiB,oBAAoBvO,OAClFwC,EAAI,EAAGA,EAAI0P,EAAkB1P,IAAK,CACtBoF,KAAKzI,OAAOgT,mBAAmB5D,iBAAiB,oBAAoB/L,GACtE4P,aAAa,kBAAoBN,IAC5CC,EAAcvP,GAGtB,OAAOuP,GAEX9B,EAAUpH,UAAUwH,eAAiB,WAEjC,GADAzI,KAAKmK,YAAcnK,KAAKiK,yBACpBjK,KAAKmK,aAAe,GAAoF,IAA/EnK,KAAKzI,OAAOgT,mBAAmB5D,iBAAiB,oBAAoBvO,OAAc,CAC3G,IAAIqS,EAAgBzK,KAAKzI,OAAOgT,mBAAmB5D,iBAAiB,oBAAoB3G,KAAKmK,aACzFlB,OAAY,EAEZyB,EAAY1K,KAAKzI,OAAOoT,cAAc,SAAWC,UAAW,kBAAmBC,OAASC,KAAQ,eACpG7B,EAAY8B,iBAAe/K,KAAKzI,OAAOoT,eAAe,GAASd,SAFnD,EAEmEmB,MAAO,OAC5ExE,UAAUyE,IAAI,uBACxBhC,EAAUE,cAAc,YAAY+B,MAAMC,MAAQ,OAClDlC,EAAUmC,aAAaV,EAAUW,YAAapC,EAAUqC,YACnD/S,oBAAkBkS,IACnBA,EAAcW,aAAanC,EAAWwB,EAAca,YAEpDtL,KAAKzI,OAAOiS,oBACZxJ,KAAK0J,uBAGR,GAAI1J,KAAKmK,aAAe,GAAKnK,KAAKzI,OAAOgT,mBAAmB5D,iBAAiB,oBAAoBvO,OAAS,EAAG,CAC9G,IACIqR,GADAR,EAAYjJ,KAAKzI,OAAOgT,mBAAmB5D,iBAAiB,uBAAuB,IACzDwC,cAAc,YAAY3C,UAAUC,SAAS,WACvEzG,KAAKzI,OAAOiS,oBAAsBC,GAClCzJ,KAAK0J,gBAAgBD,KAIjCpB,EAAUpH,UAAUsK,qBAAuB,SAAUnE,GACjD,IAAI6B,EACAyB,EAAY1K,KAAKzI,OAAOoT,cAAc,SAAWC,UAAW,oBAAqBC,OAASC,KAAQ,cAClGnM,EAAOyI,EAAKzI,KAChByI,EAAK7H,KAAKiH,UAAUyE,IAAI,sBACxB7D,EAAK7H,KAAKiM,aAAa,aAAc,YACrC,IAAI1Q,GAASvC,oBAAkBoG,EAAK8M,gBAAyC,YAAvB9M,EAAK8M,cAI3D,IAHAxC,EAAY8B,iBAAe/K,KAAKzI,OAAOoT,eAAe,GAASd,QAAS/O,EAAOkQ,MAAO,OAC5ExE,UAAUyE,IAAI,uBACxBhC,EAAUE,cAAc,YAAY+B,MAAMC,MAAQ,OACvB,kBAAvBxM,EAAK8M,cAAmC,CACxC,IAAIC,EAAWzC,EAAUtC,iBAAiB,YAAY,GACtDgF,eAAaD,IAAY,UAAW,SAAU,cAC9CzC,EAAUE,cAAc,YAAY3C,UAAUyE,IAAI,UAGtD,OADAhC,EAAUmC,aAAaV,EAAUW,YAAapC,EAAUqC,YACjDrC,GAEXZ,EAAUpH,UAAUyH,eAAiB,SAAUkD,GAC3C,IAAI3C,EAAYjJ,KAAKuL,qBAAqBK,GACtCC,EAAeD,EAAUrM,KAAK4J,cAAc,2BAChD,GAAK5Q,oBAAkBsT,GAKlB,CACD,IAAIC,EAAU9L,KAAKzI,OAAOoT,cAAc,QAAUC,UAAW,mBACzDjM,EAAOiN,EAAUrM,KAAKwM,UAC1BH,EAAUrM,KAAKwM,UAAY,GAC3BD,EAAQC,UAAYpN,EACpB,IAAIqN,EAAShM,KAAKzI,OAAOoT,cAAc,OAASC,UAAW,6BAC3DoB,EAAOC,YAAYhD,GACnB+C,EAAOC,YAAYH,GACnBF,EAAUrM,KAAK0M,YAAYD,QAZtBJ,EAAUrM,KAAK4J,cAAc,yBAC9B0C,EAAaT,aAAanC,EAAW4C,EAAalF,iBAAiB,eAAe,KAc9F0B,EAAUpH,UAAUoI,iBAAmB,SAAU6C,GAE7C,IAAK,IAAIhU,EAAI,EAAGA,EAAIgU,EAAW9T,OAAQF,IAAK,CACxC,IAAIqB,EAASyG,KAAKzI,OAAOiF,wBAAwB0P,EAAWhU,IACxDiU,EAAavS,EAAcoG,KAAKzI,OAAQgC,EAAOM,UAG/C4R,EAA0C,aAF9ClS,EAAU6S,cAAsD,kBAAxCpM,KAAKzI,OAAOC,WAAsB,YACtD+B,EAAS4S,GACeV,cAA+B,QAAU,UACrElS,EAAOkS,cAAgBA,EAEvB,IAAK,IADDtS,EAAOD,OAAOC,KAAKI,GACdqB,EAAI,EAAGA,EAAIzB,EAAKf,OAAQwC,IACzBuR,EAAWhP,eAAehE,EAAKyB,MAC/BuR,EAAWhT,EAAKyB,IAAMrB,EAAOJ,EAAKyB,KAG1CoF,KAAKqM,gBAAgB9S,EAAQkS,GAAe,GACxCzL,KAAKzI,OAAOiS,oBACZxJ,KAAK0J,oBAIjBrB,EAAUpH,UAAUoL,gBAAkB,SAAU9S,EAAQkS,EAAea,GACnE,IAAIlU,EAAS,EAKb,GAJA4H,KAAKuM,oBAAoBhT,EAAQkS,IAC5Ba,GAAe/S,EAAOI,YAAcqG,KAAKzI,OAAOiS,oBACjDxJ,KAAKwM,sBAAsBjT,EAAOI,YAElCJ,EAAOY,cAAgB6F,KAAKzI,OAAOiS,mBAAoB,CACvD,IAAIrP,EAAeZ,EAAOY,cACrB5B,oBAAkByH,KAAKzI,OAAOkV,eAC/BzM,KAAKzI,OAAOkV,aAAaC,eAAetU,OAAS,GAAK4H,KAAKzI,OAAOiS,qBAClErP,EAAe6F,KAAK2M,wBAAwBxS,IAEhD/B,EAAS+B,EAAa/B,OACtB,IAAK,IAAIwU,EAAQ,EAAGA,EAAQxU,EAAQwU,IAC3BzS,EAAayS,GAAOC,eACjB1S,EAAayS,GAAO1S,gBACpB8F,KAAKqM,gBAAgBlS,EAAayS,GAAQnB,GAAe,GAGzDzL,KAAKuM,oBAAoBpS,EAAayS,GAAQnB,MAMlEpD,EAAUpH,UAAU0L,wBAA0B,SAAUxS,GACpD,IAAImL,EAAQtF,KAIZ,OAH2B7F,EAAa0D,OAAO,SAAUC,GACrD,OAAOwH,EAAM/N,OAAOkV,aAAaC,eAAehO,QAAQZ,IAAM,KAItEuK,EAAUpH,UAAUuL,sBAAwB,SAAU9S,GAClD,IACItB,EAAS,EACT+B,KACAZ,EAASK,EAAcoG,KAAKzI,OAAQmC,EAAaG,UACjDN,GAAUA,EAAOY,eACjBA,EAAeZ,EAAOY,eAErB5B,oBAAkByH,KAAKzI,OAAOkV,eAC/BzM,KAAKzI,OAAOkV,aAAaC,eAAetU,OAAS,GAAK4H,KAAKzI,OAAOiS,qBAClErP,EAAe6F,KAAK2M,wBAAwBxS,IAEhD/B,EAAS+B,GAAgBA,EAAa/B,OACtC,IAAI0U,EAAU,EACVC,EAAoB,EACxB,IAAKxU,oBAAkBgB,GAAS,CAkB5B,IAAK,IAjBD2D,EAAU,SAAUhF,GACpB,IAAI8U,EAAcC,EAAO1V,OAAOiF,wBAAwBqB,OAAO,SAAUC,GACrE,OAAOA,EAAEjE,WAAaM,EAAajC,GAAG2B,WAEtCqT,EAAgBtT,EAAcqT,EAAO1V,OAAQ4C,EAAajC,GAAG2B,UAC7DsT,EAAkBf,cAAwD,kBAA1Ca,EAAO1V,OAAOC,WAAsB,YACpEwV,EAAY,GAAKE,EAChB3U,oBAAkB4U,KACkB,kBAAjCA,EAAe1B,cACfqB,IAEsC,UAAjCK,EAAe1B,eACpBsB,MAIRE,EAASjN,KACJ9H,EAAI,EAAGA,EAAIiC,EAAa/B,OAAQF,IACrCgF,EAAQhF,GAGRqB,EAAOkS,cADPqB,EAAU,GAAMC,EAAoB,GAAKA,IAAsB3U,EACxC,gBAEI,IAAtB2U,GAAuC,IAAZD,EACT,UAGA,QAE3B9M,KAAKuM,oBAAoBhT,EAAQA,EAAOkS,eACpClS,EAAOI,YACPqG,KAAKwM,sBAAsBjT,EAAOI,cAI9C0O,EAAUpH,UAAUyI,gBAAkB,SAAU0D,GAC5C,IAAI9H,EAAQtF,KAGR5H,EAAS,EACTuG,GAASpG,oBAAkByH,KAAKzI,OAAOkV,eACvCzM,KAAKzI,OAAOkV,aAAaC,eAAetU,OAAS,EAAK4H,KAAKzI,OAAOkV,aAAaC,eAC/E1M,KAAKzI,OAAOqG,SAGhB,GAFAe,EAAQyN,cAAsD,kBAAxCpM,KAAKzI,OAAOC,WAAsB,aAA0BF,EAAa0I,KAAKzI,QAChGyI,KAAKzI,OAAOiF,wBAA0BmC,GACrCpG,oBAAkB6U,GACnB,IAAK,IAAIlV,EAAI,EAAGA,EAAIyG,EAAKvG,OAAQF,IAC7B,GAAIkV,EAAU,CACV,GAA8B,UAA1BzO,EAAKzG,GAAGuT,cACR,SAEJ9M,EAAKzG,GAAGuT,cAAgB,QACxBzL,KAAKuM,oBAAoB5N,EAAKzG,GAAIyG,EAAKzG,GAAGuT,oBAGlCzL,KAAKsI,cAAc5J,QAAQC,EAAKzG,KAC3B,IACTyG,EAAKzG,GAAGuT,cAAgB,UACxBzL,KAAKuM,oBAAoB5N,EAAKzG,GAAIyG,EAAKzG,GAAGuT,eACtCzL,KAAKzI,OAAOiS,oBACZxJ,KAAKwM,sBAAsB7N,EAAKzG,MAMnC,IAAbkV,GAAsBpN,KAAKzI,OAAO+G,uBAClC0B,KAAKsI,iBACLtI,KAAKoG,mBACLzH,EAAKd,OAAO,SAAUwP,GAClBA,EAAI5B,cAAgB,UACpBnG,EAAMiH,oBAAoBc,EAAKA,EAAI5B,kBAG3CrT,EAAS4H,KAAKsI,cAAclQ,OAC5B,IAAIsT,EAAW1L,KAAKzI,OAAOgT,mBAAmB5D,iBAAiB,YAAY,GACvEvO,EAAS,GAAKuG,EAAKvG,OAAS,EACxBA,IAAWuG,EAAKvG,QAAWgV,GAK3BzB,eAAaD,IAAY,WACzBA,EAASlF,UAAUyE,IAAI,aALvBU,eAAaD,IAAY,YACzBA,EAASlF,UAAUyE,IAAI,WAQ3BU,eAAaD,IAAY,UAAW,YAG5CrD,EAAUpH,UAAUsL,oBAAsB,SAAUW,EAAevD,EAAY9L,GAC3E,IAGIyP,EAIA5B,EAPAnS,EAASyG,KAAKzI,OAAOiF,wBAAwBqB,OAAO,SAAUC,GAC9D,OAAOA,EAAEjE,WAAaqT,EAAcrT,WAIpC0T,EAAcvN,KAAKzI,OAAOiF,wBAAwBkC,QAAQnF,EAAO,IACjEiU,EAAiB5T,EAAcoG,KAAKzI,OAAQ2V,EAAcrT,UAE9D,GAAI0T,GAAe,EAAG,CAClB,IAAIE,EAAKzN,KAAKzI,OAAOwH,UAAUwO,GAC3BG,OAAY,GACZ1N,KAAKzI,OAAO2H,YAAcc,KAAKzI,OAAO4H,sBACtCuO,EAAY1N,KAAKzI,OAAOoW,qBAAqBJ,IAEjD7B,EAAW+B,EAAG9G,iBAAiB,YAAY,GAAK8G,EAAG9G,iBAAiB,YAAY,GAC1E+G,EAAU/G,iBAAiB,YAAY,GACxCpO,oBAAkBmT,IACnBC,eAAaD,IAAY,UAAW,SAAU,cAStD,GANA4B,EAAiBlB,cAAsD,kBAAxCpM,KAAKzI,OAAOC,WAAsB,YAC7D+B,EAAO,GAAKiU,EACZjV,oBAAkB+U,KAClBA,EAAgBJ,GAEpBI,EAAc7B,cAAgB9B,EACX,UAAfA,GAA0BpR,oBAAkB2U,EAAcL,eACrC,IAAjBU,IAAqE,IAA/CvN,KAAKoG,gBAAgB1H,QAAQ6O,IACnDvN,KAAKoG,gBAAgB/M,KAAKkU,IAEqB,IAA/CvN,KAAKsI,cAAc5J,QAAQ4O,KAA2C,IAAjBC,IACnDhV,oBAAkByH,KAAKzI,OAAOkV,eAAiBzM,KAAKzI,OAAOkV,aAAaC,eAAetU,OAAS,GAClG4H,KAAKsI,cAAcjP,KAAKiU,IAEuB,IAA/CtN,KAAKsI,cAAc5J,QAAQ4O,IAA2B/U,oBAAkByH,KAAKzI,OAAOkV,eACjC,IAAnDzM,KAAKzI,OAAOkV,aAAaC,eAAetU,QACxC4H,KAAKsI,cAAcjP,KAAKiU,IAEuB,IAA/CtN,KAAKsI,cAAc5J,QAAQ4O,IAAyB/U,oBAAkByH,KAAKzI,OAAOkV,eAClFzM,KAAKsI,cAAcjP,KAAKiU,QAG3B,IAAoB,YAAf3D,GAA2C,kBAAfA,IAAmCpR,oBAAkB2U,EAAcL,cAAe,CACpH,IAAI9R,EAAQiF,KAAKsI,cAAc5J,QAAQ4O,GAIvC,IAHe,IAAXvS,GACAiF,KAAKsI,cAAc/K,OAAOxC,EAAO,IAEc,IAA/CiF,KAAKoG,gBAAgB1H,QAAQ6O,GAAqB,CAClD,IAAIK,EAAe5N,KAAKoG,gBAAgB1H,QAAQ6O,GAChDvN,KAAKoG,gBAAgB7I,OAAOqQ,EAAc,IAGlD,IAAIC,EAA+B,kBAAflE,EAAiC,SAAW,KAAOA,EACnE4D,GAAe,IACVhV,oBAAkBmT,IACnBA,EAASlF,UAAUyE,IAAI4C,KAInCxF,EAAUpH,UAAU0H,kBAAoB,SAAUvB,GAC9C,IAEIe,EACA2F,EAHAxI,EAAQtF,KACRH,EAAcuH,EAAKvH,YAGvB,GAAI5H,EAAiB+H,KAAKzI,SAClByI,KAAKzI,OAAOiS,mBACZ,GAAqB,YAAhB3J,GAA6C,WAAhBA,EAA2B,CACzD,IAAIqG,EAAOlG,KAAKzI,OAAOiB,KAAKuG,UAE5B+O,GADA3F,EAAYnI,KAAKzI,OAAOiF,yBACApE,OACxB4H,KAAKoG,mBACL,IAAK,IAAIlO,EAAI,EAAGA,EAAI4V,EAAa5V,IACxBgO,EAAKhO,GAAGsO,UAAUC,SAAS,iBAC5BzG,KAAKuM,oBAAoBpE,EAAUjQ,GAAIiQ,EAAUjQ,GAAGuT,eAAe,QAI1E,GAAoB,WAAhB5L,GAA4C,QAAhBuH,EAAKzL,OAAkB,CACxD,IAAIoS,KACgB,WAAhBlO,EACAkO,EAAc3G,EAAKzI,KAGnBoP,EAAY1U,KAAK+N,EAAKzI,MAE1B,IAASzG,EAAI,EAAGA,EAAI6V,EAAY3V,OAAQF,IAAK,CACzC,GAAoB,WAAhB2H,EAA0B,CAC1B,IAAI9E,EAAQiF,KAAKzI,OAAOqG,SAASc,QAAQqP,EAAY7V,IACjD0V,EAAe5N,KAAKoG,gBAAgB1H,QAAQ3D,GAChDiF,KAAKoG,gBAAgB7I,OAAOqQ,EAAc,GAC1C5N,KAAKuM,oBAAoBwB,EAAY7V,GAAI,WAExCK,oBAAkBwV,EAAY7V,GAAGyB,aAClCqG,KAAKwM,sBAAsBuB,EAAY7V,GAAGyB,iBAIxB,QAArByN,EAAKvH,aAAyBG,KAAKzI,OAAOiS,mBAC/CpC,EAAKzI,KAAK8M,cAAgB,WAEL,cAAhB5L,GAA+C,cAAhBA,GAA+C,YAAhBA,IAC/DvI,EAAa0I,KAAKzI,WACtByI,KAAKsI,iBACLtI,KAAKoG,oBACL+B,GAAc5P,oBAAkByH,KAAKzI,OAAOkV,eAAiBzM,KAAKzI,OAAOkV,aAAaC,eAAetU,OAAS,EAC1G4H,KAAKzI,OAAOiF,wBAA0BwD,KAAKzI,OAAOqG,UAC5CoQ,QAAQ,SAAUzU,GACpBA,EAAOW,gBACPoL,EAAMkH,sBAAsBjT,GAG5B+L,EAAMiH,oBAAoBhT,EAAQA,EAAOkS,iBAGjDzL,KAAK0J,oBAKrBrB,EAAUpH,UAAUgN,kBAAoB,WACpC,OAAOjO,KAAKsI,eAEhBD,EAAUpH,UAAUiN,qBAAuB,WACvC,OAAOlO,KAAKoG,iBAETiC,KCrbP8F,GAAuB,WAIvB,SAASA,EAAM5W,GACXyI,KAAKzI,OAASA,EACd6W,OAAKC,OAAOC,SACZtO,KAAKuI,mBAqCT,OA/BA4F,EAAMlN,UAAUgH,cAAgB,WAC5B,MAAO,SAKXkG,EAAMlN,UAAUsH,iBAAmB,WAC/BvI,KAAKzI,OAAOiB,KAAKgQ,GAAG+F,EAAsBvO,KAAKwO,cAAexO,OAElEmO,EAAMlN,UAAU4H,oBAAsB,WAClC7I,KAAKzI,OAAOiB,KAAKuQ,IAAIwF,EAAsBvO,KAAKwO,gBAEpDL,EAAMlN,UAAUuN,cAAgB,SAAUC,GACtC,IAAIjW,EAAOY,YAAU,YAAaqV,GAC9BC,EAActV,YAAU,UAAWqV,GACvCjW,EAAK+P,iBAAiBoG,EAAsB3O,KAAKzI,OAAOiB,KAAK+J,eAC7D/J,EAAK+P,iBAAiBqG,EAAqB5O,KAAKzI,OAAOiB,KAAK8J,cAC5D9J,EAAK+P,iBAAiBsG,EAAwB7O,KAAKzI,OAAOiB,KAAKgK,iBAC/DsM,YAAUJ,GAAc,eAE5BP,EAAMlN,UAAU8N,MAAQ,WACpB/O,KAAKzI,OAAOiB,KAAKuW,SAOrBZ,EAAMlN,UAAUiH,QAAU,WACtBlI,KAAK6I,uBAEFsF,KCnDP1N,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBxH,OAAO2H,iBAChBC,wBAA2B/D,OAAS,SAAU4D,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI7C,KAAK6C,EAAOA,EAAEzD,eAAeY,KAAI4C,EAAE5C,GAAK6C,EAAE7C,MACpD4C,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAa1H,OAAOgI,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,IAAIF,IAV3C,GAaxCI,GAA0C,SAAUC,EAAYC,EAAQ3I,EAAK4I,GAC7E,IAA2HX,EAAvHY,EAAIC,UAAUpJ,OAAQqJ,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOpI,OAAOwI,yBAAyBL,EAAQ3I,GAAO4I,EACrH,GAAuB,iBAAZK,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQ3I,EAAK4I,QACpH,IAAK,IAAIpJ,EAAIkJ,EAAWhJ,OAAS,EAAGF,GAAK,EAAGA,KAASyI,EAAIS,EAAWlJ,MAAIuJ,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQ3I,EAAK+I,GAAKd,EAAEU,EAAQ3I,KAAS+I,GAChJ,OAAOF,EAAI,GAAKE,GAAKvI,OAAO2I,eAAeR,EAAQ3I,EAAK+I,GAAIA,GAM5DuN,GAAgC,SAAUjN,GAE1C,SAASiN,IACL,OAAkB,OAAXjN,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KAiB/D,OAnBAS,GAAUuO,EAAgBjN,GAI1BZ,IACIc,cACD+M,EAAe/N,UAAW,cAAU,GACvCE,IACIc,YAAS,IACV+M,EAAe/N,UAAW,kBAAc,GAC3CE,IACIc,WAAS,aACV+M,EAAe/N,UAAW,gBAAY,GACzCE,IACIc,cACD+M,EAAe/N,UAAW,WAAO,GACpCE,IACIc,cACD+M,EAAe/N,UAAW,qBAAiB,GACvC+N,GACT9M,iBC5CEzB,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBxH,OAAO2H,iBAChBC,wBAA2B/D,OAAS,SAAU4D,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI7C,KAAK6C,EAAOA,EAAEzD,eAAeY,KAAI4C,EAAE5C,GAAK6C,EAAE7C,MACpD4C,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAa1H,OAAOgI,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,IAAIF,IAV3C,GAaxCI,GAA0C,SAAUC,EAAYC,EAAQ3I,EAAK4I,GAC7E,IAA2HX,EAAvHY,EAAIC,UAAUpJ,OAAQqJ,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOpI,OAAOwI,yBAAyBL,EAAQ3I,GAAO4I,EACrH,GAAuB,iBAAZK,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQ3I,EAAK4I,QACpH,IAAK,IAAIpJ,EAAIkJ,EAAWhJ,OAAS,EAAGF,GAAK,EAAGA,KAASyI,EAAIS,EAAWlJ,MAAIuJ,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQ3I,EAAK+I,GAAKd,EAAEU,EAAQ3I,KAAS+I,GAChJ,OAAOF,EAAI,GAAKE,GAAKvI,OAAO2I,eAAeR,EAAQ3I,EAAK+I,GAAIA,GAM5DwN,GAAmC,SAAUlN,GAE7C,SAASkN,IACL,OAAkB,OAAXlN,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KAuB/D,OAzBAS,GAAUwO,EAAmBlN,GAI7BZ,IACIc,WAAS,QACVgN,EAAkBhO,UAAW,YAAQ,GACxCE,IACIc,WAAS,SACVgN,EAAkBhO,UAAW,yBAAqB,GACrDE,IACIc,WAAS,WACVgN,EAAkBhO,UAAW,YAAQ,GACxCE,IACIc,YAAS,IACVgN,EAAkBhO,UAAW,wBAAoB,GACpDE,IACIc,WAAS,YACVgN,EAAkBhO,UAAW,oBAAgB,GAChDE,IACIc,YAAS,IACVgN,EAAkBhO,UAAW,oBAAgB,GAChDE,IACIc,YAAS,IACVgN,EAAkBhO,UAAW,oBAAgB,GACzCgO,GACT/M,iBC1CEgN,GAAwB,WAIxB,SAASA,EAAO3X,GACZyI,KAAKzI,OAASA,EACdyI,KAAKmP,eAAiB,KACtBnP,KAAKzI,OAAOiB,KAAKgQ,GAAG,kBAAmBxI,KAAKoP,qBAAsBpP,MAmMtE,OA9LAkP,EAAOjO,UAAUoO,YAAc,SAAUjI,GACrC,GAAKA,EAAKzI,KAAV,CAGA,IAAIA,EAAOyI,EAAKzI,KACZhB,EAAagB,EAAKhF,WAEtB,GAAKpB,oBAAkBoG,EAAKhF,aAAgBrB,EAAuB0H,KAAKzI,SACjEyI,KAAKzI,OAAO+X,aAA2D,SAA1CtP,KAAKzI,OAAOgY,aAAaC,gBACpDlY,EAAa0I,KAAKzI,SAAY8C,EAAU2F,KAAKzI,UAUzC6P,EAAKvI,IAAI2L,aAAa,qBAV8B,CACrD7L,EAAKhF,WAAWoB,OACPiF,KAAKzI,OAAOuC,kBAAoBvB,oBAAkBoF,EAAWqC,KAAKzI,OAAOwC,sBACtF4D,EAAWqC,KAAKzI,OAAOwC,sBAAwBiG,KAAKzI,OAAOkY,qBAC1DnW,EAAgB0G,KAAKzI,OAAQ6P,EAAKzI,KAAMqB,KAAKzI,OAAOiB,KAAKgE,4BAE1D4K,EAAKvI,IAAIqM,MAAMwE,QAAU,QAMjC,GAAIpY,EAAa0I,KAAKzI,UAAY8C,EAAU2F,KAAKzI,QAAS,CACtD,IAAIoY,EAAU3P,KAAKzI,OACfqY,EAAY5P,KAAKzI,OAAOiF,wBAAwBqB,OAAO,SAAUwP,GACjE,OAAO9O,WAASoR,EAAQrS,UAAW+P,KAAS9O,WAASoR,EAAQtS,gBAAiBsB,KAElF,GAAIiR,EAAUxX,OAAS,EAAG,CACtB,IAAIsX,EAAUE,EAAU,GAAG5V,SAAW,YAAc,OACpDoN,EAAKvI,IAAI2M,aAAa,QAAS,YAAckE,EAAU,MAI9CtW,YAAU,eAAgBgO,EAAKzI,OAE5CmQ,YAAU1H,EAAKvI,KAAM,gBAErBuI,EAAKvI,IAAIsK,cAAc,qBACvB/B,EAAKvI,IAAI2M,aAAa,gBAAiB,QAElCpE,EAAKvI,IAAIsK,cAAc,wBAC5B/B,EAAKvI,IAAI2M,aAAa,gBAAiB,SAEvCxL,KAAKzI,OAAOkY,mBAAqBzP,KAAKzI,OAAOuC,gBACxCvB,oBAAkBoG,EAAKhF,cACxByN,EAAKvI,IAAIqM,MAAMwE,QAAU,SAGjC1P,KAAKzI,OAAO+P,QAAQsH,EAAqBxH,KAK7C8H,EAAOjO,UAAU3B,WAAa,SAAU8H,GACpC,GAAKA,EAAKzI,KAAV,CAGA,IAEI5D,EAIA8U,EANArX,EAAOwH,KAAKzI,OAAOiB,KACnBmG,EAAOyI,EAAKzI,KAGZmR,EADcvX,oBAAkBoG,EAAKoR,aACjBpR,EAAK3D,MAAQ2D,EAAKoR,YACtCC,EAAkB,EAElBrQ,EAASK,KAAKzI,OAAO0Y,iBAAiB7I,EAAKzH,OAAOuQ,OAClDC,EAAaxR,EAAKkO,aAOtB,GAFI9R,EAJCxC,oBAAkBoG,EAAKhF,YAIhBgF,EAAK5D,MAHL4D,EAAKhF,WAAWoB,MAKxBvC,EAAK4X,oBAAoBhJ,EAAKzH,OAAO0K,OAASrK,KAAKzI,OAAOkI,kBACjC,QAArB2H,EAAKvH,aAA8C,WAArBuH,EAAKvH,aAA4BtH,oBAAkB6O,EAAK7H,KAAK4J,cAAc,iBAAkB,CAM/H,IAAK,IALDyC,EAAYjB,gBAAc,OAASC,UAAW,2BAC9CyF,EAAkB1F,gBAAc,QAChCC,UAAW,iBACX0F,OAAQ,uCAEHC,EAAI,EAAGA,EAAIT,EAAKS,IACrBP,GAAmB,GACnBpE,EAAUK,YAAYoE,EAAgBhF,aAE1C,IAAImF,EAAgBjY,oBAAkBoG,EAAK8R,yBACN9R,EAAKzE,gBAApCyE,EAAK8R,wBAIX,GAHID,IAAiBjY,oBAAkBoG,EAAKxE,gBACxCqW,IAA8C,IAA7B7R,EAAKxE,aAAa/B,SAEnCoY,EAAc,CACd1B,YAAU1H,EAAK7H,MAAO,iBACtB,IAAImR,EAAa/F,gBAAc,QAAUC,UAAW,YAChD+F,OAAS,EAETA,EADA3Q,KAAKzI,OAAOuC,cACH6E,EAAK3E,WACTzB,oBAAkBoG,EAAKqB,KAAKzI,OAAOwC,sBAAwB4E,EAAKqB,KAAKzI,OAAOwC,uBAC5EiG,KAAKzI,OAAOkY,qBAGL9Q,EAAK3E,WAAaV,EAAgB0G,KAAKzI,OAAQoH,EAAMqB,KAAKzI,OAAOiB,KAAKgE,0BAEtF,IAAI2G,GAAY,EACX5K,oBAAkBoG,EAAKhF,aAAiBpB,oBAAkBoG,EAAKqB,KAAKzI,OAAOwC,uBACzE4E,EAAKqB,KAAKzI,OAAOwC,qBACfiG,KAAKzI,OAAO+X,aAA2D,SAA1CtP,KAAKzI,OAAOgY,aAAaC,eAC3DrM,GAAa7J,EAAgB0G,KAAKzI,OAAQ6P,EAAKzI,KAAMqB,KAAKzI,OAAOiB,KAAKgE,0BAE1EsS,YAAU4B,GAAcC,GAAUxN,EAAa,mBAAqB,sBACpE6M,GAAmB,GACnBpE,EAAUK,YAAYyE,GACtBL,EAAgBnF,MAAMC,MAAQ,MAC9B6E,GAAmB,EACnBpE,EAAUK,YAAYoE,EAAgBhF,kBAEjCyE,IAAQA,IAAQnR,EAAK3D,SAE1BgV,GAAmB,GACnBpE,EAAUK,YAAYoE,EAAgBhF,aACtCO,EAAUK,YAAYoE,EAAgBhF,cAM1CwE,EAAclF,gBAAc,QAAUC,UAAW,eAC7C5K,KAAKzI,OAAOqZ,gBACZf,EAAY3E,MAAMC,MAAQ,eAAiB6E,EAAkB,OAEjElB,YAAU1H,EAAK7H,MAAO,iBAAmBxE,EAAQ,QAAU4D,EAAK3D,OAChEgF,KAAK6Q,eAAezJ,EAAMyI,EAAajE,GACvCA,EAAUK,YAAY4D,GACtBzI,EAAK7H,KAAK0M,YAAYL,GAU1B,GARI5L,KAAKzI,OAAOmI,cAAgBM,KAAKzI,OAAOkI,iBACxCjH,EAAK4X,oBAAoBhJ,EAAKzH,OAAO0K,OAASrK,KAAKzI,OAAOmI,cAAgB,EAC1EoP,YAAU1H,EAAK7H,MAAO,iBAAmBxE,EAAQ,QAAU4D,EAAK3D,OAE3DgF,KAAKzI,OAAOmI,eAAiBM,KAAKzI,OAAOkI,iBAC9CjH,EAAK4X,oBAAoBhJ,EAAKzH,OAAO0K,OAASrK,KAAKzI,OAAOmI,cAAgB,GAC1EoP,YAAU1H,EAAK7H,MAAO,iBAAmBxE,EAAQ,QAAU4D,EAAK3D,QAE/DzC,oBAAkBoH,IAAWA,EAAOtH,eACrC2H,KAAKzI,OAAOuZ,OAAO,iBAAkB1J,GACjCpH,KAAKzI,OAAOqZ,eAAe,CAC3B,IAAIG,EAAkB3J,EAAK7H,KAAKoH,iBAAiB,YAAY,GAE7DqJ,GADYgB,SAASD,EAAgB7F,MAAMC,MAAO,IAElD6E,GAAmB,IAEfH,EADArX,EAAK4X,oBAAoBhJ,EAAKzH,OAAO0K,OAASrK,KAAKzI,OAAOkI,gBAC5C2H,EAAK7H,KAAK4J,cAAc,eAGxB/B,EAAK7H,KAAK4J,cAAc,oBAE9B+B,MAAMC,MAAQ,eAAiB6E,EAAkB,MAGrE,GAAIG,EAAY,CACZrB,YAAU1H,EAAK7H,MAAO,iBACtB,IAAI0R,EAAc7X,YAAUgO,EAAKzH,OAAOuQ,MAAO9I,EAAKzI,MACV,MAA1CyI,EAAK7H,KAAK4J,cAAc,eACpB/B,EAAK7H,KAAK4J,cAAc,eAAe4C,UAAYkF,EAAc7J,EAAK7H,KAAKwM,UAAYkF,EAE3F1Y,oBAAkByH,KAAKzI,OAAO2Z,cAC9BlR,KAAKzI,OAAO+P,QAAQqH,EAAsBvH,KAGlD8H,EAAOjO,UAAU4P,eAAiB,SAAUzJ,EAAMyI,EAAajE,GAC3D,IAAIuF,EAAwD,MAA1C/J,EAAK7H,KAAK4J,cAAc,eACtC/B,EAAK7H,KAAK4J,cAAc,eAAe4C,UAAY3E,EAAK7H,KAAKwM,UACjE,GAAsC,iBAA1B3E,EAAKzH,OAAe,UAAkBK,KAAKmP,eACnDiC,iBAAevB,EAAa7P,KAAKmP,gBACjCnP,KAAKmP,eAAiB,KACtB/H,EAAK7H,KAAKwM,UAAY,QAErB,GAAI3E,EAAK7H,KAAKiH,UAAUC,SAAS,kBAElC,IAAK,IADDxN,EAAMmO,EAAK7H,KAAK8R,SAASjZ,OAChB,EAAOa,EAAKA,EAAMmO,EAAK7H,KAAK8R,SAASjZ,OAC9CyX,EAAY5D,YAAY7E,EAAK7H,KAAK8R,SADzB,SAKbxB,EAAY9D,UAAYoF,EACxB/J,EAAK7H,KAAKwM,UAAY,IAG9BmD,EAAOjO,UAAUmO,qBAAuB,SAAUhI,GAC9CpH,KAAKmP,eAAiB/H,EAAKkK,UAE/BpC,EAAOjO,UAAUiH,QAAU,WACvBlI,KAAKzI,OAAOiB,KAAKuQ,IAAI,kBAAmB/I,KAAKoP,uBAE1CF,KCxMPqC,GAAkC,WAClC,SAASA,EAAiB/Y,GACtBwH,KAAKwR,aAAe,eACpBxR,KAAKzI,OAASiB,EACdwH,KAAKyR,eACLzR,KAAK0R,WACL1R,KAAK2R,iBACL3R,KAAK4R,aAAe,EACpB5R,KAAK6R,cACL7R,KAAK8R,cAAe,EACpB9R,KAAKuI,mBACLvI,KAAK+R,eACL/R,KAAK3E,iBAAmB9C,oBAAkByH,KAAKzI,OAAO8F,iBAkhB1D,OA7gBAkU,EAAiBtQ,UAAUsH,iBAAmB,WAC1CvI,KAAKzI,OAAOiR,GAAG,oBAAqBxI,KAAKgS,uBAAwBhS,MACjEA,KAAKzI,OAAOiB,KAAKgQ,GAAG,gBAAiBxI,KAAKiS,aAAcjS,MACxDA,KAAKzI,OAAOiR,GAAG,eAAgBxI,KAAKkS,WAAYlS,MAChDA,KAAKzI,OAAOiR,GAAG2J,EAAqBnS,KAAKoS,qBAAsBpS,MAC/DA,KAAKzI,OAAOiR,GAAG,gBAAiBxI,KAAKqS,cAAerS,OAKxDuR,EAAiBtQ,UAAU4H,oBAAsB,WACzC7I,KAAKzI,OAAOuR,cAGhB9I,KAAKzI,OAAOwR,IAAIoJ,EAAqBnS,KAAKoS,sBAC1CpS,KAAKzI,OAAOwR,IAAI,oBAAqB/I,KAAKgS,wBAC1ChS,KAAKzI,OAAOwR,IAAI,eAAgB/I,KAAKkS,YACrClS,KAAKzI,OAAOwR,IAAI,gBAAiB/I,KAAKqS,eACtCrS,KAAKzI,OAAOiB,KAAKuQ,IAAI,gBAAiB/I,KAAKiS,gBAO/CV,EAAiBtQ,UAAUiH,QAAU,WACjClI,KAAK6I,uBAGT0I,EAAiBtQ,UAAUqR,SAAW,WAClC,OAAMtS,KAAKzI,OAAOC,sBAAsBC,eAW5C8Z,EAAiBtQ,UAAUsR,kBAAoB,SAAU5T,GACrD,IAAI2G,EAAQtF,KACZA,KAAKzI,OAAOqG,SAAyC,IAA7B1E,OAAOC,KAAKwF,GAAMvG,QAAkB4H,KAAKzI,OAAOC,sBAAsBC,iBAC1FuI,KAAKzI,OAAOC,WAChBwI,KAAKzI,OAAOoG,cAEZ,GAAKrG,EAAa0I,KAAKzI,UAAY8C,EAAU2F,KAAKzI,SAAYoH,aAAgBlH,iBAAiBkH,aAAgB5B,OAAQ,CACnH,IAAIzC,EAAK0F,KAAKzI,OAAOC,WACrB,GAAIwI,KAAKzI,OAAO8F,gBAAiB,CAG7B,GAFA2C,KAAKzI,OAAOib,MAAQja,oBAAkByH,KAAKzI,OAAOib,OAC9C,IAAIC,QAAUzS,KAAKzI,OAAOib,MAC1BxS,KAAKzI,OAAO8F,gBAAiB,CAC7B,IAAIqV,EAAY1S,KAAKzI,OAAOib,MAAMG,OAAO9U,OAAO,SAAU+U,GAAS,MAAqB,cAAdA,EAAMla,MAC5EsH,KAAKzI,OAAOuC,gBAAkB4Y,EAAUta,SACxC4H,KAAKzI,OAAOib,MAAMK,MAAM7S,KAAKzI,OAAO8F,gBAAiB,QAAS,MAC9D2C,KAAKzI,OAAOib,MAAMM,UAAU,YAAa9S,KAAKzI,OAAO+F,YAI7D,IAAK0C,KAAKzI,OAAOwb,kBAA6D,kBAAxC/S,KAAKzI,OAAOC,WAAsB,aAA0BwI,KAAKzI,OAAmB,gBAAI,CAC1H,IAAIyb,EAAMhT,KAAKzI,OAAOib,MAAMS,QAC5BD,EAAIE,YACJF,EAAMA,EAAIrL,QAAQ3H,KAAKzI,OAAO8F,mBAC1BrF,iBAAkB,EACtBsC,EAAG6Y,aAAaH,GAAKI,KAAK,SAAUtV,GAChCwH,EAAMmM,YAAc4B,WAASC,SAASxV,EAAEyV,OAAQjO,EAAM/N,OAAO8F,iBAAiB,GAIlE,IAHFjE,YAAU,sBAAuBkM,EAAM/N,QAAQsG,OAAO,SAAUC,GACtE,MAAoC,OAA7BA,EAAE0V,YAAYC,aACtBrb,SAECsb,WAAS,+BAA+B,EAAMpO,EAAM/N,QAC/CgB,oBAAkB+M,EAAMqO,mBACzBD,WAAS,UAAU,EAAOpO,EAAMqO,iBAChCpV,WAAS,oBAAqB+G,EAAM/N,QAAQqc,mBAAmBtO,EAAMqO,iBACrErO,EAAMqO,gBAAkB,MAE5BrO,EAAM/N,OAAOiB,KAAKqb,wBAM7BlV,aAAgB5B,OACrBiD,KAAK8T,gBAAgBnV,IAG7B4S,EAAiBtQ,UAAU6S,gBAAkB,SAAUnV,GACnDqB,KAAK2R,iBACL3R,KAAK0R,WACL,IAAK,IAAIxZ,EAAI,EAAGA,EAAIgB,OAAOC,KAAKwF,GAAMvG,OAAQF,IAAK,CAC/C,IAAI6b,EAAWpV,EAAKzG,GACpB8H,KAAK2R,cAActY,KAAKoD,YAAWsX,IAC9Bxb,oBAAkBwb,EAAS/T,KAAKzI,OAAO+F,aACxC0C,KAAK0R,QAAQrY,KAAK0a,EAAS/T,KAAKzI,OAAO+F,YAG/C,GAAI0C,KAAK3E,gBAAiB,CAIjB,IAHD2Y,KACAC,EAAc,IAAIxc,cAAYuI,KAAK2R,eAAeuC,cAAa,IAAIzB,SAClE0B,MAAMnU,KAAKzI,OAAO8F,kBACvB,IAASnF,EAAI,EAAGA,EAAI+b,EAAY7b,OAAQF,IAAK,CACzC,IAAIkc,EAAYH,EAAY/b,GACxB6C,EAAQiF,KAAK0R,QAAQhT,QAAQ0V,EAAU1b,KAC3C,IAAKH,oBAAkB6b,EAAU1b,MACzBqC,GAAS,EADjB,CAEQ,IAAIoN,EAAaiM,EAAe,MAChCpU,KAAK2R,cAAc5W,GAAOiF,KAAKzI,OAAOiG,cAAgB2K,OAI9D6L,EAAS3a,KAAK2I,MAAMgS,EAAUI,EAAUC,OAE5CrU,KAAK2R,cAAgB3R,KAAKsU,oBAAoBN,GAElD,GAAK9a,OAAOC,KAAK6G,KAAK2R,eAAevZ,OAMjC4H,KAAKuU,cAAcvU,KAAK2R,mBANiB,CACzC,IACI6C,IAAkBxU,KAAKzI,OAAOC,sBAAsBC,gBAAgBuI,KAAKzI,OAAc,QAC3FyI,KAAKzI,OAAOqG,SAAW4W,EAAiBxU,KAAKzI,OAAiB,cAKlEyI,KAAK4R,aAAe,GAYxBL,EAAiBtQ,UAAUqT,oBAAsB,SAAUN,GAEvD,IADA,IAAIT,KACGvT,KAAK2R,cAAcvZ,OAAS,GAAK4b,EAAS5b,OAAS,GAAG,CACzD,IAAI2C,EAAQiZ,EAAStV,QAAQsB,KAAK2R,cAAc,KACjC,IAAX5W,EACAiF,KAAK2R,cAAc8C,SAGnBlB,EAAOla,KAAK2G,KAAK2R,cAAc8C,SAC/BT,EAASzW,OAAOxC,EAAO,IAG/B,OAAOwY,GAMXhC,EAAiBtQ,UAAU+Q,uBAAyB,SAAU5K,GAC1D,IAAIrO,EAAUqO,EAAKmM,OACfmB,EAAc,cACdC,EAAe,iBACnB,GAAK3U,KAAKzI,OAAOwb,iBAAoB/S,KAAKyR,YAAYrZ,QACP,kBAAxC4H,KAAKzI,OAAOC,WAAWkd,KAAqC1U,KAAKzI,OAAOod,IAAmB3U,KAAKzI,OAAOqd,kBAK1G,GAA8C,kBAAxC5U,KAAKzI,OAAOC,WAAWkd,KAAqC1U,KAAKzI,OAAOod,IAAmB3U,KAAKzI,OAAOqd,kBAgBpGrc,oBAAkBQ,IACnBiH,KAAKuS,kBAAkBxZ,QAhB3B,IAAK,IAAIsU,EAAM,EAAGA,EAAMtU,EAAQX,OAAQiV,IAChC9U,oBAAkBQ,EAAQsU,GAAKtS,SAC/BhC,EAAQsU,GAAKpQ,SAAWR,YAAW1D,EAAQsU,IAC3CtU,EAAQsU,GAAKxT,SAAWgb,SAAO7U,KAAKzI,OAAOud,QAAQC,GAAK,UACxDrB,WAAS,sBAAwB3a,EAAQsU,GAAKxT,SAAUd,EAAQsU,GAAMrN,KAAKzI,QAC3EwB,EAAQsU,GAAKrS,MAAQ,EACrBjC,EAAQsU,GAAKtS,MAAQia,KAAKC,KAAqB,IAAhBD,KAAKE,WAC/Bnc,EAAQsU,GAAKrN,KAAKzI,OAAOwb,mBAAuF,IAAnE/S,KAAKyR,YAAY/S,QAAQ3F,EAAQsU,GAAKrN,KAAKzI,OAAO+F,eAChGvE,EAAQsU,GAAKnT,iBAAkB,GAEnCnB,EAAQsU,GAAK5B,cAAgB,gBAfzCzL,KAAK2T,gBAAkBvM,EACvBsM,WAAS,UAAU,EAAMtM,GAwB7BA,EAAKmM,OAAkD,kBAAxCvT,KAAKzI,OAAOC,WAAWkd,KAAqC1U,KAAKzI,OAAOod,KAAkBpc,oBAAkBQ,IACpHiH,KAAKzI,OAAOqd,kBAAoB5U,KAAKzI,OAAOqG,SAAW7E,EAC9DiH,KAAKzI,OAAOuZ,OAAO,gBAAiB1J,IAMxCmK,EAAiBtQ,UAAUmR,qBAAuB,SAAU+C,EAAYC,GACpE,IAAIC,EAAWrV,KAAKzI,OAAOwH,UAC3B,GAAIiB,KAAKzI,OAAO2Z,YAAa,CACzB,IAAIhL,EAAOlG,KAAKzI,OAAO+d,kBAAkBpP,KACzCmP,KAAc3O,MAAMnB,KAAKW,GAE7B,IAAI8G,EAGJ,GAAImI,EAAWjP,KAAK9N,OAAS,EAAG,CACvBgd,IACDD,EAAW5b,OAAOS,UAAW,GAEjC,IAAK,IAAI9B,EAAI,EAAGA,EAAIid,EAAWjP,KAAK9N,OAAQF,IAAK,CAQ7C,GAPIkU,cAAcpM,KAAKzI,OAAOge,kBAC1B5J,eAAawJ,EAAWjP,KAAKhO,IAAK,sBAClC4W,YAAUqG,EAAWjP,KAAKhO,IAAK,sBAG/Bid,EAAWjP,KAAKhO,GAAGgT,MAAMwE,QAAU,YAElCtD,cAAuD,kBAAxCpM,KAAKzI,OAAOC,WAAsB,cAA0BwI,KAAKzI,OAAmB,gBACjGyI,KAAKzI,OAAOqd,kBAAmB,CAClC,IAAIY,EAAYL,EAAWjP,KAAKhO,GAAGud,uBAAuB,sBAAsB,GAChFzI,EAAchN,KAAKzI,OAAO2Z,YAAclR,KAAKzI,OAAOiB,KAAKgE,wBAAwB2Y,EAAWjP,KAAKhO,GAAG6P,UAChG/H,KAAKzI,OAAOiB,KAAKkd,oBAAoBP,EAAWjP,KAAKhO,GAAGsS,aAAa,aAAa7L,MACjFpG,oBAAkBid,IAAcxI,EAAYhT,WAC7C8U,YAAU0G,GAAY,oBACtB7J,eAAa6J,GAAY,uBAE7B,IAAIG,MACJA,EAAYN,EAASxX,OAAO,SAAU4D,GAClC,OAAOA,EAAE0H,cAAc,kBAAoB6D,EAAYjS,MAAQ,SAAWiS,EAAYhS,MAAQ,OAEpF5C,QAAU4U,EAAYhT,UAChCgG,KAAKoS,sBAAuB7Y,OAAQyT,EAAa9G,KAAMyP,EAAWC,UAAWT,EAAWS,YAAa,GAG7G,IAAIC,EAAcV,EAAWjP,KAAKhO,GAAGiR,cAAc,wBAC9C5Q,oBAAkBsd,IACnB7V,KAAKzI,OAAOiB,KAAKsd,gBAAgBnF,OAAOkF,SAKhD7V,KAAK+V,sBAAuBxc,OAAQ4b,EAAW5b,OAAQ2M,KAAMiP,EAAWjP,KAAM0P,UAAWT,EAAWS,aAG5GrE,EAAiBtQ,UAAU8U,qBAAuB,SAAUZ,EAAYC,GACpE,IAAI9P,EAAQtF,KACRoH,GAASvI,IAAKsW,EAAWS,UAAWjX,KAAMwW,EAAW5b,QACrDe,EAAK0F,KAAKzI,OAAOC,WACjBwb,EAAMhT,KAAKzI,OAAOiB,KAAKwd,gBAAgBC,gBACvCC,EAAclD,EAAIE,QAAQrV,OAAO,SAAUC,GAAK,MAAgB,WAATA,EAAEqY,IAA4B,YAATrY,EAAEqY,KAClFnD,EAAIE,QAAUgD,EACdlD,EAAIhb,iBAAkB,EACtBgb,EAAIH,MAAM7S,KAAKzI,OAAO8F,gBAAiB,QAAS8X,EAAW5b,OAAOyG,KAAKzI,OAAO+F,YAC9E8Y,cAAYpW,KAAKzI,OAAOud,SACxBxa,EAAG6Y,aAAaH,GAAKI,KAAK,SAAUtV,GAChC,IAAI9E,EAAQsM,EAAM/N,OAAOiB,KAAK6d,gBAC1BC,EAAMtd,EAAM0F,QAAQyW,EAAW5b,QAC/Bgd,EAAYnd,YAAU,mBAAoB0E,GAC1CyV,EAASzV,EAAEyV,OACf4B,EAAW5b,OAAOY,aAAeoZ,EACjC,IAAK,IAAI9R,EAAI,EAAGA,EAAI8R,EAAOnb,OAAQqJ,IAAK,CACpC8R,EAAO9R,GAAGxE,SAAWR,YAAW8W,EAAO9R,IACvC8R,EAAO9R,GAAGzG,MAAQma,EAAW5b,OAAOyB,MAAQ,EAC5CuY,EAAO9R,GAAG1G,MAAQia,KAAKC,KAAqB,IAAhBD,KAAKE,UACjC,IAAIvX,EAAalB,YAAW0Y,EAAW5b,eAChCoE,EAAWxD,aAClBoZ,EAAO9R,GAAG9H,WAAagE,EACvB4V,EAAO9R,GAAGjD,eAAiB2W,EAAW5b,OAAOM,SAC7C0Z,EAAO9R,GAAG5H,SAAWgb,SAAOvP,EAAM/N,OAAOud,QAAQC,GAAK,UACtDxB,EAAO9R,GAAGgK,cAAgB,UAC1BiI,WAAS,sBAAwBH,EAAO9R,GAAG5H,SAAU0Z,EAAO9R,GAAI6D,EAAM/N,SAEjEgc,EAAO9R,GAAG6D,EAAM/N,OAAOwb,mBAAsF,IAAlEzN,EAAMmM,YAAY/S,QAAQ6U,EAAO9R,GAAG6D,EAAM/N,OAAO+F,aACxFiZ,IAAcA,EAAU9U,KAC7B8R,EAAO9R,GAAGvH,iBAAkB,EAC5BqZ,EAAO9R,GAAGzH,UAAW,GAEzBhB,EAAMuE,OAAO+Y,EAAM7U,EAAI,EAAG,EAAG8R,EAAO9R,IAMxC,GAJAiS,WAAS,SAAU1a,EAAO8E,GAC1B4V,WAAS,SAAU,sBAAuB5V,GAC1CwH,EAAM/N,OAAO+P,QAAQkP,EAAuB1Y,GAC5C+V,cAAYvO,EAAM/N,OAAOud,SACrBxP,EAAM/N,OAAOiB,KAAKie,WAAWre,OAAS,IAAMkN,EAAM/N,OAAO+G,qBAAsB,CAC/E,IAAIoY,EAAYtd,YAAU,QAAS0E,GAKnC,GAHIvF,oBAAkBme,KAClBA,EAAYnY,WAAS,yBAA0B+G,EAAM/N,QAAQof,eAAe,IAAIlE,WAE/Ela,oBAAkBme,GAAY,CAC/B,IAAIE,EAAeF,EAAUxD,QAAQrV,OAAO,SAAUgZ,GAAK,MAAgB,iBAATA,EAAEV,KACpErY,EAAU,OAAIwH,EAAM/N,OAAOuf,cAAcC,sBAAsBH,EAAc9Y,EAAU,QAAG,IAGlGA,EAAE8O,MAAQtH,EAAM/N,OAAOiB,KAAK+W,aAAayH,kBACzC,IAAIC,KACA3R,EAAM/N,OAAO+G,sBACbgH,EAAM4R,oBAAoBD,GAE9B1Y,WAAS,oBAAqB+G,EAAM/N,QAAQqc,mBAAmB9V,EAAGmZ,GAClE3R,EAAM/N,OAAO+P,QAAQ6P,EAAiB/P,MAG9CmK,EAAiBtQ,UAAUiW,oBAAsB,SAAUD,GACvDA,EAAYpX,YAAc,UAC1B6T,WAAS,oBAAoB,EAAMuD,GACnC,IAAIG,EAAgB7Y,WAAS,qBAAsByB,KAAKzI,QACpD8f,EAAc9Y,WAAS,cAAe6Y,GACtCE,EAAW/Y,WAAS,WAAY6Y,GAChCC,EAAYE,UAAYvX,KAAKzI,OAAOiB,KAAK+W,aAAaiI,cAAgBH,EAAYI,SAASC,OAC3F1X,KAAKzI,OAAOiB,KAAK+W,aAAaiI,YAAcF,EAASI,OAG7DnG,EAAiBtQ,UAAUgR,aAAe,WACtCjS,KAAK8R,cAAe,GAExBP,EAAiBtQ,UAAUsT,cAAgB,SAAU5V,EAAMgZ,GAEvD,IAAK,IADDC,KACK1f,EAAI,EAAGe,EAAMC,OAAOC,KAAKwF,GAAMvG,OAAQF,EAAIe,EAAKf,IAAK,CAC1D,IAAI2f,EAAcpb,YAAWkC,EAAKzG,IAClC2f,EAAY5a,SAAW0B,EAAKzG,GAC5B,IAAI8C,EAAQ,EAyBZ,GAxBAgF,KAAK4R,cACAiG,EAAY1a,eAAe,WAC5B0a,EAAY9c,MAAQiF,KAAK4R,eAExBrZ,oBAAkBsf,EAAY7X,KAAKzI,OAAOiG,gBAC1Cqa,EAAY7X,KAAKzI,OAAOwb,kBAAoB/a,EAAgBgI,KAAKzI,WAClEsgB,EAAY3d,iBAAkB,EAC1B8F,KAAKzI,OAAOkY,oBAAsBlX,oBAAkByH,KAAKzI,OAAOmL,kBAC7DnK,oBAAkBsf,EAAY7X,KAAKzI,OAAOiG,eAC7Cqa,EAAY7d,UAAW,EAGvB6d,EAAY7d,WAAYzB,oBAAkBsf,EAAY7X,KAAKzI,OAAOwC,sBAC5D8d,EAAY7X,KAAKzI,OAAOwC,qBAGjC8d,EAAY1a,eAAe,WAC5B0a,EAAY9c,OAAQ8c,EAAY3d,gBAAkB8F,KAAK4R,cAEvD5R,KAAK3E,iBAAmB9C,oBAAkBsf,EAAY7X,KAAKzI,OAAO8F,mBAClE2C,KAAKzI,OAAOoG,WAAWtE,KAAKwe,GAEhCA,EAAYhe,SAAWgb,SAAO7U,KAAKzI,OAAOud,QAAQC,GAAK,UACvDrB,WAAS,sBAAwBmE,EAAYhe,SAAUge,EAAa7X,KAAKzI,SACpEgB,oBAAkBof,GAAgB,CACnC,IAAIha,EAAalB,YAAWkb,UACrBha,EAAWxD,oBACXwD,EAAWqC,KAAKzI,OAAOiG,cAC1BwC,KAAK3E,wBACEsC,EAAWV,SAAS+C,KAAKzI,OAAOiG,cAE3Cqa,EAAYle,WAAagE,EACzBka,EAAYrZ,eAAiBb,EAAW9D,SACxCmB,EAAQ2c,EAAc3c,MAAQ,EAYlC,GAVK6c,EAAY1a,eAAe,WAC5B0a,EAAY7c,MAAQA,GAExB6c,EAAYpM,cAAgB,WACxBlT,oBAAkBsf,EAAY7X,KAAKzI,OAAO8F,mBAAqBwa,EAAYle,aAC3EqG,KAAKzI,OAAOqG,SAASvE,KAAKwe,GAEzB7X,KAAK3E,iBAAyC,IAAtBwc,EAAY7c,OACrCgF,KAAKzI,OAAOoG,WAAWtE,KAAKwe,IAE3Btf,oBAAkBsf,EAAY7X,KAAKzI,OAAOiG,eAAiBqa,EAAY7X,KAAKzI,OAAOiG,cAAcpF,QAAS,CAC3G,IAAImB,EAASyG,KAAKuU,cAAcsD,EAAY7X,KAAKzI,OAAOiG,cAAeqa,GACvEA,EAAY1d,aAAeZ,EAE/Bqe,EAAave,KAAKwe,GAEtB,OAAOD,GAMXrG,EAAiBtQ,UAAUoR,cAAgB,SAAUjL,GACjD,IAII0Q,EAJAC,EAAW3e,YAAU,WAAYgO,GACjC4Q,EAAa5e,YAAU,aAAcgO,GACrC6Q,EAAa7e,YAAU,aAAcgO,GACrC8Q,EAAa9e,YAAU,aAAcgO,GAErC+Q,EAAa/e,YAAU,aAAcgO,GACrCvH,EAAczG,YAAU,cAAegO,GACvCgR,EAAahf,YAAU,OAAQgO,GAC/BzL,EAASvC,YAAU,SAAUgO,GAC7BiR,EAAgBF,EAChBG,EAAuBtY,KAAKzI,OAAOqE,0BAA0B,GAC7D2c,EAAYnf,YAAU,OAAQif,GAC5B9f,oBAAkB8f,IAAqB9f,oBAAkB8f,EAAc1c,SAAsC,QAAzB0c,EAAc1c,QAC/FpD,oBAAkB8f,EAAc1Z,QAAUpG,oBAAkB8f,EAAc1Z,KAAK2Z,MACpFD,EAAc1Z,KAAK2Z,GAAwBlR,EAAKmM,OAAO8E,EAActd,OAAOud,GAC5EC,EAAUtb,SAASqb,GAAwBlR,EAAKmM,OAAO8E,EAActd,OAAOud,MAE1E/f,oBAAkB4f,IAAejf,OAAOC,KAAKgf,GAAY/f,QAA2B,SAAhByH,KACtEA,EAAcA,GAA4BsY,EAAWtY,YACrDuY,EAAaA,GAA0Bhf,YAAU,OAAQ+e,GACzDxc,EAASA,GAAkBvC,YAAU,SAAU+e,GACT,UAAlCnY,KAAKzI,OAAO2E,aAAaC,OACzB6D,KAAKtE,aAAesE,KAAKzI,OAAOiB,KAAK4D,WAAWC,oBAErC,QAAXV,GAAqC,cAAhBkE,GAAkE,UAAlCG,KAAKzI,OAAO2E,aAAaC,MAC3E6D,KAAKtE,aAAasE,KAAKwR,cAAcpZ,UACxC4H,KAAKzI,OAAOiB,KAAK6d,gBAAkBjP,EAAKmM,QAExCvT,KAAKzI,OAAOihB,aACZxY,KAAKyY,aAAaL,EAAYzc,EAAQkE,IAU9C,IAAI6Y,GANAZ,EADAC,IAAaxf,oBAAkByf,GACrBA,EAGAhgB,EAAgBgI,KAAKzI,QAAUgH,WAAS,SAAUyB,KAAKzI,OAAOiB,KAAKhB,YACvEwI,KAAKzI,OAAOiB,KAAKhB,sBAEMC,cAAcqgB,EAAQtgB,WAAWsE,KAAOgc,EACrElL,EAAQ5U,EAAgBgI,KAAKzI,QAAUgH,WAAS,QAASyB,KAAKzI,OAAOC,YACnEkhB,EAAQtgB,OACd,GAAK4H,KAAKzI,OAAOiB,KAAKI,gBAAkBoH,KAAKzI,OAAOiB,KAAKK,eAAeV,QAAQC,QAC3E4H,KAAKzI,OAAOiB,KAAKC,eAAeC,IAAIN,OAAS,EAAI,CAClD,IAAI4a,EAAM,IAAIP,QACViE,EAAYtd,YAAU,QAASgO,GAC/B7O,oBAAkBme,KAClBA,EAAY,IAAIjE,QAChBiE,EAAYnY,WAAS,yBAA0ByB,KAAKzI,QAAQohB,YAAYjC,GACxEA,EAAYnY,WAAS,yBAA0ByB,KAAKzI,QAAQqhB,YAAYlC,IAE5E,IAAImC,EAAYnC,EAAUxD,QAAQrV,OAAO,SAAUgZ,GAAK,MAAgB,YAATA,EAAEV,KAC7D2C,EAAYpC,EAAUxD,QAAQrV,OAAO,SAAUgZ,GAAK,MAAgB,aAATA,EAAEV,KACjEnD,EAAIE,QAAU2F,EAAUze,OAAO0e,GAC/B,IAAIC,EAAe,IAAIthB,cAAYihB,GAASxE,aAAalB,GAIzD,GAHAhT,KAAKzI,OAAOuZ,OAAO,oBAAsBnS,KAAMoa,IAC/CL,EAAU1Y,KAAK+R,YAAYwB,OAC3BvT,KAAK+R,YAAYwB,OAAS,KACtBvT,KAAKzI,OAAOiB,KAAKie,WAAWre,OAAS,EAAG,CACxC,IAAIoa,EAAQpZ,YAAU,QAASgO,GAI/B,GAHI7O,oBAAkBme,KAClBA,EAAYnY,WAAS,yBAA0ByB,KAAKzI,QAAQof,eAAe,IAAIlE,WAE9Ela,oBAAkBia,GAAQ,CAC3B,IAAIoE,EAAepE,EAAMU,QAAQrV,OAAO,SAAUgZ,GAAK,MAAgB,iBAATA,EAAEV,KAChEuC,EAAU1Y,KAAKzI,OAAOuf,cAAcC,sBAAsBH,EAAc8B,GAAS,KAI7F,GAAI1Y,KAAKzI,OAAOiB,KAAKie,WAAWre,QAA2D,IAAjD4H,KAAKzI,OAAOiB,KAAKiG,aAAatG,QAAQC,QACtB,IAAnD4H,KAAKzI,OAAOiB,KAAKK,eAAeV,QAAQC,SAAiB4H,KAAKzI,OAAOiB,KAAKC,eAAeC,IAAIN,OAAQ,CACpGse,EAAYtd,YAAU,QAASgO,GAC/B7O,oBAAkBme,KAClBA,EAAYnY,WAAS,yBAA0ByB,KAAKzI,QAAQof,eAAe,IAAIlE,UAE/EmE,EAAeF,EAAUxD,QAAQrV,OAAO,SAAUgZ,GAAK,MAAgB,iBAATA,EAAEV,KACpEuC,EAAU1Y,KAAKzI,OAAOuf,cAAcC,sBAAsBH,EAAc5W,KAAKzI,OAAOqG,UAAU,GAElG,GAAIoC,KAAKzI,OAAOiB,KAAKiG,aAAatG,QAAQC,OAAS,GAAK4H,KAAK8R,aAAc,CACvE9R,KAAK8R,cAAe,EACpB,IAAInU,OAAa,EACjBA,EAEaqC,KAAKzI,OAAOoG,WAErB6U,EAAQpZ,YAAU,QAASgO,GAE/B,IAAK,IADD4R,EAAS,IAAIvG,QACRwG,EAAMjZ,KAAKzI,OAAOiB,KAAKiG,aAAatG,QAAQC,OAAS,EAAG6gB,GAAO,EAAGA,IAAO,CAC9E,IAAI7O,EAAMpK,KAAKzI,OAAO0Y,iBAAiBjQ,KAAKzI,OAAOiB,KAAKiG,aAAatG,QAAQ8gB,GAAK/I,OAC9EgJ,EAAU9O,EAAI+O,eAAiBnZ,KAAKsS,WACpClI,EAAI+O,aAAaC,KAAKhP,GACtBpK,KAAKzI,OAAOiB,KAAKiG,aAAatG,QAAQ8gB,GAAKI,UAC/CL,EAAOM,OAAOtZ,KAAKzI,OAAOiB,KAAKiG,aAAatG,QAAQ8gB,GAAK/I,MAAOgJ,GAEpE,IAEIK,GAAaxd,aAFE,IAAItE,cAAYkG,GAAYuW,aAAa8E,GAEfD,aAAcL,EAASM,OAAQA,GAM5E,GALAhZ,KAAKzI,OAAOuZ,OAAO,aAAcyI,GACjCb,EAAUa,EAASxd,aACnBiE,KAAK+R,YAAYwB,OAAS,KAC1BvT,KAAK6R,WAAa6G,EAClB1Y,KAAKzI,OAAOuZ,OAAO,kBACf9Q,KAAKzI,OAAOiB,KAAKie,WAAWre,OAAS,IAAMG,oBAAkBia,GAAQ,CAGjEoE,EADUxd,YAAU,QAASgO,GACN8L,QAAQrV,OAAO,SAAUgZ,GAAK,MAAgB,iBAATA,EAAEV,KAClEuC,EAAU1Y,KAAKzI,OAAOuf,cAAcC,sBAAsBH,EAAc5W,KAAK6R,YAHhE,IAMrBjF,EAAQ5U,EAAgBgI,KAAKzI,QAAUgH,WAAS,QAASyB,KAAKzI,OAAOC,YAC/DkhB,EAAQtgB,OACd,IAAIohB,EAAOxZ,KAAKyZ,OAAOf,EAAS9L,EAAOmL,EAAUG,EAAYD,EAAY7Q,GACzEsR,EAAUc,EAAKjG,OACf3G,EAAQ4M,EAAK5M,MACbxF,EAAKmM,OAASmF,EACdtR,EAAKwF,MAAQA,EACb5M,KAAKzI,OAAOuZ,OAAO,gBAAiB1J,IAExCmK,EAAiBtQ,UAAUwY,OAAS,SAAUf,EAAS9L,EAAOmL,EAAUG,EAAYD,EAAY7Q,IACxFpH,KAAKzI,OAAO+X,aAAiByI,GAA2B,gBAAfE,GACpCC,GAAwC,gBAA1BlY,KAAKzI,OAAOmiB,WAM1B1Z,KAAKzI,OAAO+G,sBAA0ByZ,GAA2B,gBAAfE,GAClB,SAAlC1Z,WAAS,cAAe6I,KAC3BpH,KAAKzI,OAAOuZ,OAAO6I,GAAwBpG,OAAQmF,EAAS9L,MAAOA,EAAOuL,WAAY5Z,WAAS,aAAc6I,KAC7GsR,EAAU1Y,KAAK+R,YAAYwB,OAC3B3G,EAAQ5M,KAAK+R,YAAYnF,QATzB5M,KAAKzI,OAAOuZ,OAAO6I,GAAwBpG,OAAQmF,EAAS9L,MAAOA,IACnE8L,EAAU1Y,KAAK+R,YAAYwB,OAC3B3G,EAAQ5U,EAAgBgI,KAAKzI,QAAUgH,WAAS,QAASyB,KAAKzI,OAAOC,YAC/DwI,KAAK+R,YAAYnF,OAS3B,OADc2G,OAAQmF,EAAS9L,MAAOA,IAM1C2E,EAAiBtQ,UAAUiR,WAAa,SAAU0H,GAC9C5Z,KAAK+R,YAAc6H,GAEvBrI,EAAiBtQ,UAAUwX,aAAe,SAAUL,EAAYzc,EAAQkE,GAC/C,WAAhBA,GAA4C,SAAhBA,GAC7BG,KAAKzI,OAAOuZ,OAAO+I,GAAqB/e,MAAOsd,EAAYzc,OAAQA,GAAUkE,IAE7D,cAAhBA,GAAiE,UAAlCG,KAAKzI,OAAO2E,aAAaC,MACxD6D,KAAKzI,OAAOuZ,OAAOgJ,QAGpBvI,MCniBX,SAAWwI,GACPA,EAAYA,EAAiB,IAAI,GAAK,MACtCA,EAAYA,EAAkB,KAAI,GAAK,OACvCA,EAAYA,EAAoB,OAAI,GAAK,SACzCA,EAAYA,EAAoB,OAAI,GAAK,SACzCA,EAAYA,EAAoB,OAAI,GAAK,SACzCA,EAAYA,EAAoB,OAAI,GAAK,SACzCA,EAAYA,EAAuB,UAAI,GAAK,YAC5CA,EAAYA,EAAyB,YAAI,GAAK,cAC9CA,EAAYA,EAAyB,YAAI,GAAK,cAC9CA,EAAYA,EAAuB,UAAI,GAAK,YAC5CA,EAAYA,EAAuB,UAAI,IAAM,YAC7CA,EAAYA,EAAmB,MAAI,IAAM,QACzCA,EAAYA,EAAuB,UAAI,IAAM,YAC7CA,EAAYA,EAAwB,WAAI,IAAM,aAdlD,CAeGA,gBAAgBA,mBAMnB,SAAWC,GACPA,EAAiBA,EAA0B,QAAI,GAAK,UACpDA,EAAiBA,EAA6B,WAAI,GAAK,aACvDA,EAAiBA,EAAgC,cAAI,GAAK,gBAC1DA,EAAiBA,EAAiC,eAAI,GAAK,iBAC3DA,EAAiBA,EAAuB,KAAI,GAAK,OACjDA,EAAiBA,EAAyB,OAAI,GAAK,SACnDA,EAAiBA,EAAuB,KAAI,GAAK,OACjDA,EAAiBA,EAAyB,OAAI,GAAK,SACnDA,EAAiBA,EAA4B,UAAI,GAAK,YACtDA,EAAiBA,EAA8B,YAAI,GAAK,cACxDA,EAAiBA,EAA4B,UAAI,IAAM,YACvDA,EAAiBA,EAA4B,UAAI,IAAM,YACvDA,EAAiBA,EAA2B,SAAI,IAAM,WACtDA,EAAiBA,EAA2B,SAAI,IAAM,WACtDA,EAAiBA,EAA2B,SAAI,IAAM,WACtDA,EAAiBA,EAAyB,OAAI,IAAM,SAhBxD,CAiBGA,qBAAqBA,wBC3CxB,IAAIvZ,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBxH,OAAO2H,iBAChBC,wBAA2B/D,OAAS,SAAU4D,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI7C,KAAK6C,EAAOA,EAAEzD,eAAeY,KAAI4C,EAAE5C,GAAK6C,EAAE7C,MACpD4C,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAa1H,OAAOgI,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,IAAIF,IAV3C,GAaxCI,GAA0C,SAAUC,EAAYC,EAAQ3I,EAAK4I,GAC7E,IAA2HX,EAAvHY,EAAIC,UAAUpJ,OAAQqJ,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOpI,OAAOwI,yBAAyBL,EAAQ3I,GAAO4I,EACrH,GAAuB,iBAAZK,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQ3I,EAAK4I,QACpH,IAAK,IAAIpJ,EAAIkJ,EAAWhJ,OAAS,EAAGF,GAAK,EAAGA,KAASyI,EAAIS,EAAWlJ,MAAIuJ,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQ3I,EAAK+I,GAAKd,EAAEU,EAAQ3I,KAAS+I,GAChJ,OAAOF,EAAI,GAAKE,GAAKvI,OAAO2I,eAAeR,EAAQ3I,EAAK+I,GAAIA,GAM5DwY,GAA8B,SAAUlY,GAExC,SAASkY,IACL,OAAkB,OAAXlY,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KA0B/D,OA5BAS,GAAUwZ,EAAclY,GAIxBZ,IACIc,WAAS,KACVgY,EAAahZ,UAAW,gBAAY,GACvCE,IACIc,WAAS,IACVgY,EAAahZ,UAAW,iBAAa,GACxCE,IACIc,WAAS,IACVgY,EAAahZ,UAAW,mBAAe,GAC1CE,IACIc,cACDgY,EAAahZ,UAAW,yBAAqB,GAChDE,IACIc,YAAS,IACVgY,EAAahZ,UAAW,yBAAqB,GAChDE,IACIc,YAAS,IACVgY,EAAahZ,UAAW,iBAAa,GACxCE,IACIc,WAAS,OACVgY,EAAahZ,UAAW,gBAAY,GACvCE,IACIc,WAAS,QACVgY,EAAahZ,UAAW,oBAAgB,GACpCgZ,GACT/X,iBCrDEzB,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBxH,OAAO2H,iBAChBC,wBAA2B/D,OAAS,SAAU4D,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI7C,KAAK6C,EAAOA,EAAEzD,eAAeY,KAAI4C,EAAE5C,GAAK6C,EAAE7C,MACpD4C,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAa1H,OAAOgI,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,IAAIF,IAV3C,GAaxCI,GAA0C,SAAUC,EAAYC,EAAQ3I,EAAK4I,GAC7E,IAA2HX,EAAvHY,EAAIC,UAAUpJ,OAAQqJ,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOpI,OAAOwI,yBAAyBL,EAAQ3I,GAAO4I,EACrH,GAAuB,iBAAZK,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQ3I,EAAK4I,QACpH,IAAK,IAAIpJ,EAAIkJ,EAAWhJ,OAAS,EAAGF,GAAK,EAAGA,KAASyI,EAAIS,EAAWlJ,MAAIuJ,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQ3I,EAAK+I,GAAKd,EAAEU,EAAQ3I,KAAS+I,GAChJ,OAAOF,EAAI,GAAKE,GAAKvI,OAAO2I,eAAeR,EAAQ3I,EAAK+I,GAAIA,GAQ5DyY,GAAiC,SAAUnY,GAE3C,SAASmY,IACL,IAAI5U,EAAmB,OAAXvD,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KAGhE,OAFAsF,EAAM6U,KAAO,IAAIC,uBACjB9U,EAAM+U,cACC/U,EAmEX,OAxEA7E,GAAUyZ,EAAiBnY,GAU3BmY,EAAgBjZ,UAAUqZ,aAAe,SAAUC,GAC3Cva,KAAKwa,SAAWxa,KAAKwa,OAAOC,UAAYza,KAAKwa,OAAOA,UACpDxa,KAAK0a,SAAW1a,KAAK2a,kBAAkB3a,KAAKwa,UAMpDN,EAAgBjZ,UAAU0Z,kBAAoB,SAAUH,GACpD,OAAIA,EAAO1P,KACA9K,KAAKma,KAAKS,cAAcJ,GAGxBxa,KAAKma,KAAKU,gBAAgBL,IAMzCN,EAAgBjZ,UAAU6Z,aAAe,WACrC,OAAO9a,KAAK0a,UAKhBR,EAAgBjZ,UAAU8Z,YAAc,SAAUC,QAC/B,IAAXA,IAAqBA,WACGC,IAAxBjb,KAAKkb,iBACLlb,KAAKqa,WAAWc,eAAaC,WAAUA,WAASC,WAAclF,GAAImF,UAAQtb,KAAKkb,eAAgBF,GAC3FO,SAAU,oBAMtBrB,EAAgBjZ,UAAUua,YAAc,SAAU1Q,GAC9C,OAAO9K,KAAKqa,WAAWc,eAAaC,WAAUtQ,KAKlDoP,EAAgBjZ,UAAUwa,oBAAsB,SAAUC,GACtD1b,KAAK2b,cAAcD,GAAM,IAE7Bva,IACIc,cACDiY,EAAgBjZ,UAAW,YAAQ,GACtCE,IACIc,cACDiY,EAAgBjZ,UAAW,sBAAkB,GAChDE,IACIc,cACDiY,EAAgBjZ,UAAW,aAAS,GACvCE,IACIc,cACDiY,EAAgBjZ,UAAW,cAAU,GACxCE,IACIc,cACDiY,EAAgBjZ,UAAW,kBAAc,GAC5CE,IACIc,cACDiY,EAAgBjZ,UAAW,uBAAmB,GAC1CiZ,GACThY,iBAEE0Z,GAA8B,SAAU7Z,GAExC,SAAS6Z,IACL,OAAkB,OAAX7Z,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KAQ/D,OAVAS,GAAUmb,EAAc7Z,GAIxBZ,IACIiB,gBAAe8X,KAChB0B,EAAa3a,UAAW,eAAW,GACtCE,IACIc,YAAS,IACV2Z,EAAa3a,UAAW,wBAAoB,GACxC2a,GACT1Z,iBCjHEzB,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBxH,OAAO2H,iBAChBC,wBAA2B/D,OAAS,SAAU4D,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI7C,KAAK6C,EAAOA,EAAEzD,eAAeY,KAAI4C,EAAE5C,GAAK6C,EAAE7C,MACpD4C,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAa1H,OAAOgI,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,IAAIF,IAV3C,GAaxCI,GAA0C,SAAUC,EAAYC,EAAQ3I,EAAK4I,GAC7E,IAA2HX,EAAvHY,EAAIC,UAAUpJ,OAAQqJ,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOpI,OAAOwI,yBAAyBL,EAAQ3I,GAAO4I,EACrH,GAAuB,iBAAZK,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQ3I,EAAK4I,QACpH,IAAK,IAAIpJ,EAAIkJ,EAAWhJ,OAAS,EAAGF,GAAK,EAAGA,KAASyI,EAAIS,EAAWlJ,MAAIuJ,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQ3I,EAAK+I,GAAKd,EAAEU,EAAQ3I,KAAS+I,GAChJ,OAAOF,EAAI,GAAKE,GAAKvI,OAAO2I,eAAeR,EAAQ3I,EAAK+I,GAAIA,GAM5Doa,GAA8B,SAAU9Z,GAExC,SAAS8Z,IACL,OAAkB,OAAX9Z,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KAgC/D,OAlCAS,GAAUob,EAAc9Z,GAIxBZ,IACIc,YAAS,IACV4Z,EAAa5a,UAAW,mBAAe,GAC1CE,IACIc,YAAS,IACV4Z,EAAa5a,UAAW,oBAAgB,GAC3CE,IACIc,YAAS,IACV4Z,EAAa5a,UAAW,qBAAiB,GAC5CE,IACIc,WAAS,SACV4Z,EAAa5a,UAAW,YAAQ,GACnCE,IACIc,WAAS,QACV4Z,EAAa5a,UAAW,sBAAkB,GAC7CE,IACIc,YAAS,IACV4Z,EAAa5a,UAAW,2BAAuB,GAClDE,IACIc,YAAS,IACV4Z,EAAa5a,UAAW,yBAAqB,GAChDE,IACIc,YAAS,IACV4Z,EAAa5a,UAAW,+BAA2B,GACtDE,IACIc,WAAS,KACV4Z,EAAa5a,UAAW,gBAAY,GACvCE,IACIc,gBACD4Z,EAAa5a,UAAW,cAAU,GAC9B4a,GACT3Z,iBC3DEzB,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBxH,OAAO2H,iBAChBC,wBAA2B/D,OAAS,SAAU4D,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI7C,KAAK6C,EAAOA,EAAEzD,eAAeY,KAAI4C,EAAE5C,GAAK6C,EAAE7C,MACpD4C,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAa1H,OAAOgI,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,IAAIF,IAV3C,GAaxCI,GAA0C,SAAUC,EAAYC,EAAQ3I,EAAK4I,GAC7E,IAA2HX,EAAvHY,EAAIC,UAAUpJ,OAAQqJ,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOpI,OAAOwI,yBAAyBL,EAAQ3I,GAAO4I,EACrH,GAAuB,iBAAZK,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQ3I,EAAK4I,QACpH,IAAK,IAAIpJ,EAAIkJ,EAAWhJ,OAAS,EAAGF,GAAK,EAAGA,KAASyI,EAAIS,EAAWlJ,MAAIuJ,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQ3I,EAAK+I,GAAKd,EAAEU,EAAQ3I,KAAS+I,GAChJ,OAAOF,EAAI,GAAKE,GAAKvI,OAAO2I,eAAeR,EAAQ3I,EAAK+I,GAAIA,GAM5Dqa,GAAgC,SAAU/Z,GAE1C,SAAS+Z,IACL,OAAkB,OAAX/Z,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KAQ/D,OAVAS,GAAUqb,EAAgB/Z,GAI1BZ,IACIc,cACD6Z,EAAe7a,UAAW,aAAS,GACtCE,IACIc,cACD6Z,EAAe7a,UAAW,iBAAa,GACnC6a,GACT5Z,iBAKE6Z,GAA8B,SAAUha,GAExC,SAASga,IACL,OAAkB,OAAXha,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KAQ/D,OAVAS,GAAUsb,EAAcha,GAIxBZ,IACIiB,gBAAe0Z,KAChBC,EAAa9a,UAAW,eAAW,GACtCE,IACIc,YAAS,IACV8Z,EAAa9a,UAAW,mBAAe,GACnC8a,GACT7Z,iBCpDEzB,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBxH,OAAO2H,iBAChBC,wBAA2B/D,OAAS,SAAU4D,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI7C,KAAK6C,EAAOA,EAAEzD,eAAeY,KAAI4C,EAAE5C,GAAK6C,EAAE7C,MACpD4C,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAa1H,OAAOgI,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,IAAIF,IAV3C,GAaxCI,GAA0C,SAAUC,EAAYC,EAAQ3I,EAAK4I,GAC7E,IAA2HX,EAAvHY,EAAIC,UAAUpJ,OAAQqJ,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOpI,OAAOwI,yBAAyBL,EAAQ3I,GAAO4I,EACrH,GAAuB,iBAAZK,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQ3I,EAAK4I,QACpH,IAAK,IAAIpJ,EAAIkJ,EAAWhJ,OAAS,EAAGF,GAAK,EAAGA,KAASyI,EAAIS,EAAWlJ,MAAIuJ,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQ3I,EAAK+I,GAAKd,EAAEU,EAAQ3I,KAAS+I,GAChJ,OAAOF,EAAI,GAAKE,GAAKvI,OAAO2I,eAAeR,EAAQ3I,EAAK+I,GAAIA,GAuC5Dua,GAA0B,SAAUja,GAEpC,SAASia,EAASjc,EAAS+U,GACvB,IAAIxP,EAAQvD,EAAOwD,KAAKvF,KAAMD,EAAS+U,IAAY9U,KAUnD,OATAsF,EAAMyM,eACNzM,EAAM2W,sBACN3W,EAAM4W,4BACN5W,EAAM6W,eAAiB,iBACvB7W,EAAM8W,eAAiB,iBACvB9W,EAAMkM,aAAe,eACrB6K,EAAWhO,OAAOiO,IAClB5I,WAAS,mBAAoBpO,EAAMiX,yBAA0BjX,GAC7DA,EAAM9M,KAAO,IAAI4V,OACV9I,EAZX7E,GAAUub,EAAUja,GAcpBsa,EAAaL,EAUbA,EAAS/a,UAAUub,YAAc,SAAUC,EAAuBC,EAElEC,EAAUC,GACN,OAAIxQ,cACApM,KAAK6c,kBAAkBC,IAAIL,EAAuBC,EAAkBC,EAAUC,GAAQ,GAC/E,MAEJ5c,KAAK6c,kBAAkBC,IAAIL,EAAuBC,EAAkBC,EAAUC,GAAQ,IAWjGZ,EAAS/a,UAAU8b,UAAY,SAAUN,EAEzCC,EAAkBC,EAAUC,GACxB,OAAIxQ,cACApM,KAAK6c,kBAAkBC,IAAIL,EAAuBC,EAAkBC,EAAUC,GAAQ,GAC/E,MAEJ5c,KAAK6c,kBAAkBC,IAAIL,EAAuBC,EAAkBC,EAAUC,GAAQ,IAWjGZ,EAAS/a,UAAU+b,UAAY,SAAUC,EAEzCP,EAAkBQ,EAAQN,GACtB,OAAIxQ,cACApM,KAAKmd,gBAAgBL,IAAIG,EAAqBP,EAAkBQ,EAAQN,GACjE,MAEJ5c,KAAKmd,gBAAgBL,IAAIG,EAAqBP,EAAkBQ,EAAQN,IAMnFZ,EAAS/a,UAAUgH,cAAgB,WAC/B,MAAO,YAMX+T,EAAS/a,UAAUmc,UAAY,WAC3Bpd,KAAKqd,iBACLrd,KAAKsd,iBACLtd,KAAKud,eACDC,MAAO,QACPC,MAAO,QACPC,OAAQ,UACRC,UAAW,aACXC,YAAa,eACbC,UAAW,SACXC,WAAY,WAEhB9d,KAAK+d,KAAO,IAAIC,OAAK,WAAYhe,KAAKud,cAAevd,KAAKie,QACtDje,KAAK3E,iBAAmB9C,oBAAkByH,KAAKxC,gBAC/CwC,KAAKxC,aAAe,aAU5Bwe,EAAS/a,UAAUid,aAAe,SAAU1iB,EAAY6d,EAAW8E,GAC/Dne,KAAKoe,WAAWC,WAAW7iB,EAAY6d,EAAW8E,IAMtDnC,EAAS/a,UAAUqd,aAAe,WAC1Bte,KAAKoe,YACLpe,KAAKoe,WAAWE,gBASxBtC,EAAS/a,UAAUsd,iBAAmB,SAAUrO,GAC5ClQ,KAAKoe,WAAWG,iBAAiBrO,IASrC8L,EAAS/a,UAAUud,OAAS,SAAUC,GAClCze,KAAKxH,KAAKgmB,OAAOC,IAYrBzC,EAAS/a,UAAUyd,eAAiB,SAAUC,GAC1C3e,KAAK4e,aAAaF,eAAeC,GACjC3e,KAAK6e,qBAQT7C,EAAS/a,UAAU6d,eAAiB,SAAUC,EAAWC,GACrDhf,KAAKxH,KAAKsmB,eAAeC,EAAWC,IAExChD,EAAS/a,UAAUoc,eAAiB,WAEhC,IACI4B,EADAhB,EAASD,OAAKC,OAElBgB,KACAvL,WAAS1T,KAAKie,UAAYgB,GAC1B,IAAIC,EACJA,KACAA,EAAa9lB,YAAU4G,KAAKie,OAAQA,GACpC,IAAIkB,EACJA,KACAA,EAAiB/lB,YAAU4G,KAAKiI,gBAAiBiX,GACjDxL,WAAS,OAAQyL,EAAgB/lB,YAAU4G,KAAKie,OAAQgB,IACxDjB,OAAKoB,KAAKH,IAQdjD,EAAS/a,UAAU8N,MAAQ,WACvB/O,KAAKqf,YAAYtQ,SAErBiN,EAAS/a,UAAUqe,yBAA2B,SAAUxhB,GACpD,GAAIkC,KAAKuf,cACL,OAAQzhB,EAAEnC,QACN,IAAK,gBACDqE,KAAKwf,YACL,MACJ,IAAK,cACDxf,KAAKyf,cACL,MACJ,IAAK,mBACD,IAEIC,EAFiB5hB,EAAEuD,OACa+H,QAAQ,cACXA,QAAQ,MACrCuW,EAAcD,EAAYvW,cAAc,qBACxB,OAAhBwW,QAAwC1E,IAAhB0E,GACxB3f,KAAK4f,sBAAsBF,EAAYvW,cAAc,sBAEzD,MACJ,IAAK,qBACD,IAEI0W,EAFe/hB,EAAEuD,OACW+H,QAAQ,cACXA,QAAQ,MACjC0W,EAAYD,EAAU1W,cAAc,uBACtB,OAAd2W,QAAoC7E,IAAd6E,GACtB9f,KAAK4f,sBAAsBC,EAAU1W,cAAc,wBAEvD,MACJ,IAAK,YACD,IAAI9H,EAASvD,EAAEuD,OAAO0e,cAClBC,EAAiBhgB,KAAKigB,mBAAmB5e,GAC7C,GAAuB,OAAnB2e,EAAyB,CACzB,IAAIjY,EAAWiY,EAAejY,SAC9B/H,KAAKkgB,UAAUnY,GACf,IAAIoY,EAAYriB,EAAEuD,OAAO8e,UACrBthB,EAAMmhB,EAAe3O,SAAS8O,GAClCrR,YAAUjQ,GAAM,aAChBiQ,YAAUjQ,GAAM,gBAGhBmB,KAAKogB,iBAET,MACJ,IAAK,UACD,IAAIC,EAAYviB,EAAEuD,OAAO0e,cACrBO,EAAoBtgB,KAAKugB,uBAAuBF,GACpD,GAA0B,OAAtBC,EAA4B,CAC5B,IAAIE,EAASF,EAAkBvY,SAC/B/H,KAAKkgB,UAAUM,GACf,IAAIC,EAAS3iB,EAAEuD,OAAO8e,UAClBja,EAAOoa,EAAkBjP,SAASoP,GACtC3R,YAAU5I,GAAO,aACjB4I,YAAU5I,GAAO,gBAGjBlG,KAAKogB,mBAMzBpE,EAAS/a,UAAUgf,mBAAqB,SAAUK,GAC9C,IAAI1W,EAAa0W,EAAkB/W,mBAKnC,OAJmB,OAAfK,IAA0E,IAAlDA,EAAWgB,UAAUlM,QAAQ,iBACxB,SAA7BkL,EAAWsB,MAAMwE,UACjB9F,EAAa5J,KAAKigB,mBAAmBrW,IAElCA,GAGXoS,EAAS/a,UAAUsf,uBAAyB,SAAUD,GAClD,IAAI1W,EAAa0W,EAAkBI,uBAKnC,OAJmB,OAAf9W,IAA0E,IAAlDA,EAAWgB,UAAUlM,QAAQ,iBACxB,SAA7BkL,EAAWsB,MAAMwE,UACjB9F,EAAa5J,KAAKugB,uBAAuB3W,IAEtCA,GAEXoS,EAAS/a,UAAUqc,eAAiB,WAChCtd,KAAKud,iBACLvd,KAAKpC,YACLoC,KAAKrC,cACLqC,KAAK2gB,eACL3gB,KAAK4gB,aAAc,EACnB5gB,KAAK6gB,eAAgB,EACrB7gB,KAAK8gB,YACDC,cAAe,iBACfC,YAAa,eACbC,iBAAkB,qBAClBC,mBAAoB,uBACpBC,UAAW,YACXC,QAAS,WAEbphB,KAAKwY,cAAiBxY,KAAKxI,sBAAsBC,gBAAgBuI,KAAKxI,WAAWA,WAAW6pB,UACnF9oB,oBAAkByH,KAAKxI,WAAW+C,QAAWyF,KAAKxI,WAAWE,mBAAmB4pB,oBACzFthB,KAAK3E,iBAAmB9C,oBAAkByH,KAAK3C,kBAMnD2e,EAAS/a,UAAUsgB,WAAa,WAC5BC,eAAavW,IAAIjL,KAAKxH,KAAKsc,QAAS,QAAS9U,KAAKyhB,kBAAmBzhB,MACrEwhB,eAAavW,IAAIjL,KAAK8U,QAAS,WAAY9U,KAAKyhB,kBAAmBzhB,MACnEA,KAAK0hB,eAAiB,IAAIC,iBAAe3hB,KAAK8U,SAC1C8M,UAAW5hB,KAAKsf,yBAAyBlG,KAAKpZ,MAC9C8gB,WAAY9gB,KAAK8gB,WACjBe,UAAW,YAEX7hB,KAAKuf,gBACLvf,KAAK8U,QAAQgN,UAAsC,IAA3B9hB,KAAK8U,QAAQgN,SAAkB,EAAI9hB,KAAK8U,QAAQgN,WAQhF9F,EAAS/a,UAAU8gB,gBAAkB,WACjC,IAAIC,KACJ,OAAIhiB,KAAK8I,YACEkZ,GAEXA,EAAQ3oB,MACJ4oB,OAAQ,SAAU7a,MAAOpH,KAAMA,KAAKnH,kBAEnCN,oBAAkByH,KAAKkiB,UACxBF,EAAQ3oB,MACJ4oB,OAAQ,UACR7a,MAAOpH,QAGXA,KAAKmiB,kBACLH,EAAQ3oB,MACJ4oB,OAAQ,cACR7a,MAAOpH,QAGXA,KAAKsP,aACL0S,EAAQ3oB,MACJ4oB,OAAQ,QACR7a,MAAOpH,KAAMA,KAAKuP,gBAGtBvP,KAAKI,iBACL4hB,EAAQ3oB,MACJ4oB,OAAQ,UACR7a,MAAOpH,QAGXA,KAAKM,cACL0hB,EAAQ3oB,MACJ4oB,OAAQ,OACR7a,MAAOpH,QAGXA,KAAKyW,WAAWre,OAAS,GACzB4pB,EAAQ3oB,MACJ4oB,OAAQ,UAAW7a,MAAOpH,QAGlCgiB,EAAQ3oB,MACJ4oB,OAAQ,SAAU7a,MAAOpH,QAEzBA,KAAKoiB,kBACLJ,EAAQ3oB,MACJ4oB,OAAQ,cAAe7a,MAAOpH,SAGlCA,KAAKN,eAAiBM,KAAKd,YAAcc,KAAKb,qBAC9C6iB,EAAQ3oB,MACJ4oB,OAAQ,SAAU7a,MAAOpH,QAG7BA,KAAKqiB,gBACLL,EAAQ3oB,MACJ4oB,OAAQ,YAAa7a,MAAOpH,QAGhCA,KAAKsiB,gBACLN,EAAQ3oB,MACJ4oB,OAAQ,YAAa7a,MAAOpH,QAGhCA,KAAKK,gBACL2hB,EAAQ3oB,MACJ4oB,OAAQ,aAAc7a,MAAOpH,QAGjCA,KAAKuiB,mBACLP,EAAQ3oB,MACJ4oB,OAAQ,gBAAiB7a,MAAOpH,QAGxCA,KAAKwiB,sBAAsBR,GACpBA,IAEXhG,EAAS/a,UAAUuhB,sBAAwB,SAAUR,GAC7ChiB,KAAKyiB,qBACLT,EAAQ3oB,MACJ4oB,OAAQ,iBACR7a,MAAOpH,SAGXA,KAAK9D,aAAawmB,aAAe1iB,KAAK9D,aAAaymB,eAAiB3iB,KAAK9D,aAAa+D,eACtF+hB,EAAQ3oB,MACJ4oB,OAAQ,OACR7a,MAAOpH,QAGXA,KAAK4iB,gBAAgB5iB,KAAK7H,UAC1B6pB,EAAQ3oB,MACJ4oB,OAAQ,gBACR7a,MAAOpH,QAGXA,KAAK6iB,gBACLb,EAAQ3oB,MACJ4oB,OAAQ,YACR7a,MAAOpH,QAGXA,KAAK1B,sBACL0jB,EAAQ3oB,MACJ4oB,OAAQ,gBACR7a,MAAOpH,SAInBgc,EAAS/a,UAAU2hB,gBAAkB,SAAUzqB,GAC3C,IAAImN,EAAQtF,KACZ,OAAO7H,EAAQ2qB,KAAK,SAAU1Y,GAC1B,OAAIA,EAAIjS,QACGmN,EAAMsd,gBAAgBxY,EAAIjS,YAE3BiS,EAAI2Y,WAAY3Y,EAAI4Y,qBAOtChH,EAAS/a,UAAUgiB,aAAe,WAC1BjjB,KAAKxH,MAAQwH,KAAKxH,KAAKsc,SACvB0M,eAAa0B,OAAOljB,KAAKxH,KAAKsc,QAAS,QAAS9U,KAAKyhB,oBAO7DzF,EAAS/a,UAAUkiB,OAAS,WACxB,IAAI7d,EAAQtF,KACZojB,iBAAgB/hB,OAAQrB,KAAK8U,SAAW9U,KAAK2K,eAC7C3K,KAAKX,aAAe,IAAI6P,GAAOlP,MAC/BA,KAAKqjB,WAAa,IAAI9R,GAAiBvR,MACvCA,KAAKqf,YAAc,IAAIlR,GAAMnO,MAW7B,GATIA,KAAiB,iBACjBA,KAAKuV,kBAAmB,GAE5BvV,KAAKsH,QbhfK,QaifVtH,KAAKsjB,sBACLtjB,KAAKlG,eAAgB,EAChBvB,oBAAkByH,KAAKxI,aACxBwI,KAAKujB,gBAAgBvjB,KAAKxI,aAEzB4U,eAAepM,KAAKuV,iBAAkB,CACvCvV,KAAKwjB,WACDxjB,KAAK8U,QAAQtO,UAAUC,SAAS,eAAiBzG,KAAKyjB,gBAAgBC,WACtE1jB,KAAKxH,KAAKirB,gBAAgBC,UAAY,gBAE1C1jB,KAAK2jB,cACL,IAAIC,EAAgBjZ,gBAAc,OAASoK,GAAI/U,KAAK8U,QAAQC,GAAK,iBACjEjG,YAAU9O,KAAK8U,SAAU,cACpBvc,oBAAkByH,KAAK6jB,SAAoC,iBAAjB7jB,KAAW,SAAgD,IAA9BA,KAAK6jB,OAAOnlB,QAAQ,OAC5FsB,KAAK8U,QAAQ5J,MAAM2Y,OAAS7jB,KAAK6jB,QAEhCtrB,oBAAkByH,KAAKmL,QAAkC,iBAAhBnL,KAAU,QAA+C,IAA7BA,KAAKmL,MAAMzM,QAAQ,OACzFsB,KAAK8U,QAAQ5J,MAAMC,MAAQnL,KAAKmL,OAEpCnL,KAAK8U,QAAQ7I,YAAY2X,GACzB5jB,KAAKxH,KAAKsrB,SAASF,GACnB5jB,KAAKuhB,aAETvhB,KAAK+jB,iBACL,IAAIC,EAAkB,kBAClBC,EAAoBjkB,KAAKxH,KAAKwrB,GAMlC,GAJAhkB,KAAKxH,KAAKwrB,GAAmB,SAAU5c,EAAMrM,GACzCkpB,EAAkBjiB,MAAMsD,EAAM9M,MAC9B8M,EAAM4e,cAAc9c,EAAMrM,IAE1BqR,cAAcpM,KAAKuV,iBAAkB,CACrC,IAAI4O,EAAO,SAAU/c,GAAQ,OAAO9B,EAAM8e,aAAahd,EAAM+c,IAC7DE,eAAa7b,GAAG,qBAAsB2b,EAAMnkB,QAGpDgc,EAAS/a,UAAUqjB,gBAAkB,WAC5B/rB,oBAAkByH,KAAKxH,KAAK+rB,kBAC7BvkB,KAAKxH,KAAK+rB,gBAAgBrc,UAE9BlI,KAAKukB,gBAAkBvkB,KAAKxH,KAAK+rB,gBAAkB,IAAIlf,GAAcrF,OAEzEgc,EAAS/a,UAAUmjB,aAAe,SAAUhd,EAAM+O,GAC9C,GAAI/O,EAAK2N,KAAO/U,KAAK8U,QAAQC,GAAK,eAAlC,CACI/U,KAAKxH,KAAO4O,EAAK5O,KAKrBwH,KAAKxH,KAAKga,MAAMU,WAGXlT,KAAKuV,iBAINvV,KAAKxH,KAAa,UAAI,EAHtBwH,KAAKxH,KAAkB,eAAI,EAK/BwH,KAAKwkB,gBACLxkB,KAAKykB,YAAYzkB,KAAKxH,KAAKL,SAC3B6H,KAAK0kB,iBAEAnsB,oBAAkByH,KAAK2kB,kBACxB3kB,KAAKxH,KAAKgQ,GAAG,mBAAoBxI,KAAK2kB,gBAA8B,eAAG3kB,KAAK2kB,iBAEhF,IAAK,IAAIzsB,EAAI,EAAGA,EAAI8H,KAAK7H,QAAQC,OAAQF,IACrC8H,KAAK7H,QAAQD,GAAGmS,IAAMrK,KAAKxH,KAAKL,QAAQD,GAAGmS,IAE/CrK,KAAKuhB,aACLvhB,KAAKskB,kBAELtkB,KAAKxH,KAAiB,eACtB6rB,eAAatb,IAAI,qBAAsB/I,KAAKokB,gBAEhDpI,EAAS/a,UAAUwjB,YAAc,SAAU9D,EAAaiE,QACxC,IAARA,IAAkBA,EAAM,GAC5B,IAAK,IAAI1sB,EAAI,EAAGe,EAAM0nB,EAAYvoB,OAAQF,EAAIe,EAAKf,IAC3CyoB,EAAYzoB,GAAGC,SACfwoB,EAAYzoB,GAAG6C,MAAQxC,oBAAkBooB,EAAYzoB,GAAG6C,OAAS6pB,EAC7DjE,EAAYzoB,GAAG6C,MACnB6pB,IACAA,EAAM5kB,KAAKykB,YAAY9D,EAAYzoB,GAAGC,QAASysB,KAG/CjE,EAAYzoB,GAAG6C,MAAQxC,oBAAkBooB,EAAYzoB,GAAG6C,OAAS6pB,EAC7DjE,EAAYzoB,GAAG6C,MACnB6pB,KAGR,OAAOA,GAEX5I,EAAS/a,UAAUujB,cAAgB,WAE3BxkB,KAAK9D,eACL8D,KAAKxH,KAAK0D,aAAiB,KAAI8D,KAAK9D,aAAiB,KACrD8D,KAAKxH,KAAK0D,aAAaoV,SAAWtR,KAAK9D,aAAaoV,UAExD,IAAK,IAAIpZ,EAAI,EAAGA,EAAI8H,KAAKyW,WAAWre,OAAQF,IACxC,IAAK,IAAI0C,EAAI,EAAGA,EAAIoF,KAAKyW,WAAWve,GAAGC,QAAQC,OAAQwC,IACnDoF,KAAKxH,KAAKie,WAAWve,GAAGC,QAAQyC,GAAO,KAAIoF,KAAKyW,WAAWve,GAAGC,QAAQyC,GAAO,KAGrF,IAAS1C,EAAI,EAAGA,EAAI8H,KAAK7H,QAAQC,OAAQF,IACrC8H,KAAKxH,KAAKL,QAAQD,GAAO,KAAI8H,KAAK7H,QAAQD,GAAO,MAIzD8jB,EAAS/a,UAAUsiB,gBAAkB,SAAU5kB,GAC3C,IAAI2G,EAAQtF,KACZ,GAAIrB,aAAgB5B,OAAS4B,EAAKvG,OAAS,GAAKuG,EAAK,GAAGxB,eAAe,SACnE6C,KAAKpC,SAAW5F,EAAgBgI,MAAQzB,WAAS,SAAUI,GAAQA,EACnEqB,KAAKpC,SAASC,OAAO,SAAUC,GAC3B4V,WAAS,sBAAwB5V,EAAEjE,SAAUiE,EAAGwH,GAChC,IAAZxH,EAAE9C,OACFsK,EAAM3H,WAAWtE,KAAKyE,UAK9B,GAAI9F,EAAgBgI,MAAO,CACvB,IAAI6kB,EAAWtmB,WAAS,SAAUyB,KAAKxI,YACvCwI,KAAKqjB,WAAW9Q,kBAAkBsS,QAGlC7kB,KAAKqjB,WAAW9Q,kBAAkB5T,IAa9Cqd,EAAS/a,UAAU6jB,mBAAqB,WACpC9kB,KACK+kB,mBACL/kB,KAAKxH,KAAKwsB,UAAYhlB,KAAKglB,UAC3BhlB,KAAKxH,KAAK+mB,cAAgBvf,KAAKuf,cAC/Bvf,KAAKxH,KAAKL,QAAU6H,KAAKilB,eAAejlB,KAAK7H,SAC7C6H,KAAKxH,KAAK4pB,iBAAmBpiB,KAAKoiB,iBAClCpiB,KAAKxH,KAAK8pB,eAAiBtiB,KAAKsiB,eAChCtiB,KAAKxH,KAAKga,MAAQxS,KAAKwS,MACvBxS,KAAKxH,KAAK0sB,gBAAkBllB,KAAKklB,gBACjCllB,KAAKxH,KAAK8W,YAActP,KAAKsP,YAC7BtP,KAAKxH,KAAK+W,aAAe4V,sBAAoBnlB,KAAKuP,cAClDvP,KAAKxH,KAAK4sB,cAAgBplB,KAAKolB,cAC/BplB,KAAKxH,KAAK6H,eAAiBL,KAAKK,eAChCL,KAAKxH,KAAK8H,aAAeN,KAAKM,aAC9BN,KAAKxH,KAAKI,eAAiBoH,KAAKpH,eAChCoH,KAAKxH,KAAK8F,qBAAuB0B,KAAK1B,qBACtC0B,KAAKxH,KAAK2S,MAAQnL,KAAKmL,MACvBnL,KAAKxH,KAAKqrB,OAAS7jB,KAAK6jB,OACxB7jB,KAAKxH,KAAK6sB,aAAerlB,KAAKqlB,aAC9BrlB,KAAKxH,KAAK4H,gBAAkBJ,KAAKI,gBACjCJ,KAAKxH,KAAKoY,cAAgB5Q,KAAK4Q,cAC/B5Q,KAAKxH,KAAK+H,cAAgBP,KAAKO,cAC/BP,KAAKxH,KAAK8sB,YAActlB,KAAKslB,YAC7BtlB,KAAKxH,KAAK+sB,eAAiBvlB,KAAKulB,eAChCvlB,KAAKxH,KAAKiqB,oBAAsBziB,KAAKyiB,oBACrCziB,KAAKxH,KAAKirB,gBAAkB0B,sBAAoBnlB,KAAKyjB,iBACrDzjB,KAAKxH,KAAKgtB,UAAYxlB,KAAKwlB,UAC3BxlB,KAAKxH,KAAKitB,UAAYzlB,KAAKylB,UAC3BzlB,KAAKxH,KAAKqqB,eAAiB7iB,KAAK6iB,eAChC7iB,KAAKxH,KAAK0pB,QAAUiD,sBAAoBnlB,KAAK0lB,kBAC7C1lB,KAAKxH,KAAKmtB,gBAAkB3lB,KAAK2lB,gBACjC3lB,KAAKxH,KAAK+pB,kBAAoBviB,KAAKuiB,kBACnCviB,KAAKxH,KAAKK,eAAiBssB,sBAAoBnlB,KAAKnH,gBACpDmH,KAAKxH,KAAK2N,kBAAoBgf,sBAAoBnlB,KAAKmG,mBACvDnG,KAAKxH,KAAKiG,aAAe0mB,sBAAoBnlB,KAAKvB,cAClDuB,KAAKxH,KAAKC,eAAiB0sB,sBAAoBnlB,KAAKvH,gBACpDuH,KAAKxH,KAAKie,WAAa0O,sBAAoBnlB,KAAKyW,YAChDzW,KAAKxH,KAAKotB,iBAAmBT,sBAAoBnlB,KAAK4lB,kBACtD5lB,KAAKxH,KAAKkhB,UAAYyL,sBAAoBnlB,KAAK0Z,WAC/C1Z,KAAKxH,KAAKylB,OAASkH,sBAAoBnlB,KAAKie,QAC5Cje,KAAKxH,KAAKqtB,iBAAmB7lB,KAAK6lB,iBAClC7lB,KAAKxH,KAAK2pB,iBAAmBgD,sBAAoBnlB,KAAK8lB,kBACtD9lB,KAAKxH,KAAKutB,gBAAkBZ,sBAAoBnlB,KAAK+lB,iBACrD/lB,KAAKxH,KAAK0D,aAAe8D,KAAKgmB,sBAC9BhmB,KAAKxH,KAAK0Y,YAAciU,sBAAoBnlB,KAAKkR,aACjDlR,KAAKxH,KAAK6pB,eAAiB8C,sBAAoBnlB,KAAKqiB,gBACpDriB,KAAKxH,KAAK0G,WAAac,KAAKd,WAC5Bc,KAAKxH,KAAKkH,cAAgBM,KAAKN,cAC/B,IAAIumB,EAAmB,yBACvBjmB,KAAKxH,KAAKytB,GAAoBjmB,KAAKimB,GAEnCjmB,KAAKxH,KAAkB,eAAI,GAE/BwjB,EAAS/a,UAAUilB,cAAgB,SAAU9e,GACzCpH,KAAKsH,QAAQlO,YAAU,OAAQgO,GAAOA,IAE1C4U,EAAS/a,UAAUyjB,eAAiB,WAChC,IAAIpf,EAAQtF,KACRmmB,EAAWnmB,KACfA,KAAKxH,KAAK4tB,aAAepmB,KAAKkmB,cAAc9M,KAAKpZ,MACjDA,KAAKxH,KAAKoK,YAAc,SAAUwE,GACzBgF,aAGIA,cAAc9G,EAAMiQ,mBACzBjQ,EAAM+gB,wBAAyB,EAC/B/gB,EAAMqW,eAAgBkK,iBAAkBvgB,EAAM9M,KAAKqtB,mBAAoB,GACvEvgB,EAAM+gB,wBAAyB,GAL/B/gB,EAAMugB,iBAAmBvgB,EAAM9M,KAAKqtB,iBAOxCM,EAASrV,OAAOwV,EAAoBlf,GACpC9B,EAAMgC,QAAQgf,EAAoBlf,IAEtCpH,KAAKxH,KAAKsK,cAAgB,SAAUsE,GAChC9B,EAAMugB,iBAAmBvgB,EAAM9M,KAAKqtB,iBACpCvgB,EAAMgC,QAAQif,EAAsBnf,IAExCpH,KAAKxH,KAAK0K,WAAa,SAAUkE,GAC7B9B,EAAMuZ,oBACNvZ,EAAMgC,QAAQkf,EAAmBpf,IAErCpH,KAAKxH,KAAKiuB,mBAAqB,SAAUrf,GACrC9B,EAAMwL,OAAO,gBAAiB1J,GAC9BA,EAAO9B,EAAMyM,aAEjB/R,KAAKxH,KAAKkuB,iBAAmB,SAAUtf,GACnC9B,EAAMwL,OAAO,cAAe1J,GAC5BA,EAAO9B,EAAMyM,aAEjB/R,KAAKxH,KAAKmuB,eAAiB,SAAUvf,GACjC9B,EAAMgC,QAAQ0C,EAAuB5C,IAEzCpH,KAAKxH,KAAKouB,kBAAoB5mB,KAAKkmB,cAAc9M,KAAKpZ,MACtDA,KAAKxH,KAAKquB,oBAAsB7mB,KAAKkmB,cAAc9M,KAAKpZ,MACxDA,KAAKxH,KAAKsuB,yBAA2B9mB,KAAKkmB,cAAc9M,KAAKpZ,MAC7DA,KAAKxH,KAAKuuB,uBAAyB/mB,KAAKkmB,cAAc9M,KAAKpZ,MAC3DA,KAAKxH,KAAKwuB,kBAAoBhnB,KAAKkmB,cAAc9M,KAAKpZ,MACtDA,KAAKxH,KAAKqL,kBAAoB7D,KAAKkmB,cAAc9M,KAAKpZ,MACtDA,KAAKxH,KAAKyuB,eAAiBjnB,KAAKkmB,cAAc9M,KAAKpZ,MACnDA,KAAKxH,KAAK0uB,eAAiBlnB,KAAKkmB,cAAc9M,KAAKpZ,MACnDA,KAAKxH,KAAK2uB,gBAAkBnnB,KAAKkmB,cAAc9M,KAAKpZ,MACpDA,KAAKxH,KAAK4uB,eAAiBpnB,KAAKkmB,cAAc9M,KAAKpZ,MACnDA,KAAKxH,KAAK6uB,gBAAkBrnB,KAAKkmB,cAAc9M,KAAKpZ,MACpDA,KAAKxH,KAAK8uB,aAAetnB,KAAKkmB,cAAc9M,KAAKpZ,MACjDA,KAAKxH,KAAK+uB,eAAiBvnB,KAAKkmB,cAAc9M,KAAKpZ,MACnDA,KAAKxH,KAAKgvB,YAAcxnB,KAAKkmB,cAAc9M,KAAKpZ,MAChDA,KAAKxH,KAAKivB,SAAWznB,KAAKkmB,cAAc9M,KAAKpZ,MAC7CA,KAAKxH,KAAKkvB,WAAa1nB,KAAKkmB,cAAc9M,KAAKpZ,MAC/CA,KAAKxH,KAAKmvB,gBAAkB3nB,KAAKkmB,cAAc9M,KAAKpZ,MACpDA,KAAKxH,KAAKovB,WAAa5nB,KAAKkmB,cAAc9M,KAAKpZ,MAC/CA,KAAKxH,KAAKqvB,YAAc7nB,KAAKkmB,cAAc9M,KAAKpZ,MAChDA,KAAKxH,KAAKsvB,WAAa9nB,KAAKkmB,cAAc9M,KAAKpZ,MAC/CA,KAAKxH,KAAKuvB,YAAc,SAAU3gB,GAG9B,IAFA,IAAIlB,EAAOZ,EAAMvG,UAEVmH,EAAKkB,EAAa,UAAGZ,UAAUC,SAAS,iBAC3CW,EAAa,WAEjB9B,EAAMgC,Qb1rBO,ca0rBqBF,IAEtCpH,KAAKxH,KAAK4mB,KAAO,WACb+G,EAAS3tB,KAAKgQ,GAAG,cAAe2d,EAAS7B,gBAAiB6B,IAE9DnmB,KAAKxH,KAAKwvB,cAAgBhoB,KAAKkmB,cAAc9M,KAAKpZ,MAClDA,KAAKxH,KAAKyvB,cAAgBjoB,KAAKkmB,cAAc9M,KAAKpZ,MAClDA,KAAKkoB,6BACLloB,KAAKmoB,qBACLnoB,KAAKooB,2BACLpoB,KAAKqoB,yBACLroB,KAAKsoB,qBACLtoB,KAAKuoB,sBAETvM,EAAS/a,UAAUinB,2BAA6B,WAC5C,IAAI5iB,EAAQtF,KACRmmB,EAAWnmB,KACfA,KAAKxH,KAAKgwB,UAAY,SAAUphB,GAM5B,GALA9B,EAAMmjB,kBAAkBrhB,GACxB9B,EAAMuZ,oBACNvZ,EAAMojB,aAAapjB,EAAMvG,WACzBuG,EAAMwL,OAAO,eAAgB1J,GAC7B9B,EAAMgC,QblwBK,YakwBqBF,GAC5B9P,EAAagO,KAAWjL,EAAUiL,KAAWA,EAAMyN,gBAAiB,CACpE,IAAI4V,EAAMvvB,YAAU,sBAAuBkM,GAAOzH,OAAO,SAAUC,GAC/D,MAAoC,OAA7BA,EAAE0V,YAAYC,aACtBrb,OACHsb,WAAS,gCAAiCiV,EAAM,GAAIrjB,GAExDA,EAAMxL,eAAgB,GAE1BkG,KAAKxH,KAAKgK,gBAAkB,SAAU4E,GAClC,IACIvH,EAAczG,YAAU,SAAUgO,GACtC,GAAI9P,EAAa6uB,KAAc9rB,EAAU8rB,IAA6B,SAAhBtmB,EAClDsmB,EAASrV,OAAO,oBAAqB1J,GACrCA,EAAQ+e,EAAoB,iBAE3B,GAAiC,IAA7BA,EAASvoB,SAASxF,QAAgBiC,EAAU8rB,IAAaA,EAAS3uB,sBAAsBC,cAAa,CAC1G,IAAI6C,EAAK6rB,EAAS3uB,WAClB2uB,EAAS9C,WAAW9Q,kBAAkBjY,EAAG9C,WAAWsE,MACpDsL,EAAKmM,OAAS4S,EAAS3tB,KAAKhB,WAAqB,WAAEsE,KAAOqqB,EAASvoB,SAWvE,GATKtG,EAAa6uB,IAAcnuB,EAAgBgI,OAAUzH,oBAAkB4tB,EAAS3uB,cAC7EwI,KAAKkY,YACLxE,WAAS,cAAc,EAAMtM,GAEjC+e,EAASrV,OAAO,gBAAiB1J,IAGrC3K,SAAO2K,EAAM+e,EAASpU,cAEjB/R,KAAKkY,WAAY,CAClB,IAAI0Q,EAAoB,IAAIC,WAI5B,OAHA1C,EAAS7e,QAAQuH,EAAwBzH,EAAM,SAAU0hB,GACrDF,EAAkBG,QAAQD,KAEvBF,KAInB5M,EAAS/a,UAAUsnB,mBAAqB,WACpC,IACI5kB,EADA2B,EAAQtF,KAERoM,cAAcpM,KAAKuV,mBACdhd,oBAAkByH,KAAKxH,KAAKmL,aAC7BA,EAAY3D,KAAKxH,KAAKmL,YAG9B3D,KAAKxH,KAAKuK,aAAe,SAAUqE,GAC/B,IAAI4hB,EAAkB,IAAIH,WAO1B,OANAvjB,EAAMgC,QAAQ2hB,EAAqB7hB,EAAM,SAAU8hB,GAC1CA,EAAY7hB,QACb/B,EAAMwL,OAAOmY,EAAqB7hB,GAEtC4hB,EAAgBD,QAAQG,KAErBF,GAEXhpB,KAAKxH,KAAK2wB,cAAgB,SAAU/hB,GAChC,IAAI4hB,EAAkB,IAAIH,WAI1B,OAHAvjB,EAAMgC,QAAQlO,YAAU,OAAQgO,GAAOA,EAAM,SAAUgiB,GACnDJ,EAAgBD,QAAQK,KAErBJ,GAEXhpB,KAAKxH,KAAKmL,UAAY,SAAUyD,GACxBgF,cAAc9G,EAAMiQ,kBAChB5R,GAAkC,mBAAdA,GACpBA,EAAU3B,MAAMsD,GAAQ8B,IAGhC,IAAI4hB,EAAkB,IAAIH,WAI1B,OAHAvjB,EAAMgC,QAAQ+hB,EAAkBjiB,EAAM,SAAUkiB,GAC5CN,EAAgBD,QAAQO,KAErBN,IAGfhN,EAAS/a,UAAUonB,uBAAyB,WACxC,IAIIrkB,EACAF,EALAwB,EAAQtF,KAcZ,GARIoM,cAAcpM,KAAKuV,mBACdhd,oBAAkByH,KAAKxH,KAAKwL,YAC7BA,EAAWhE,KAAKxH,KAAKwL,UAEpBzL,oBAAkByH,KAAKxH,KAAKsL,YAC7BA,EAAW9D,KAAKxH,KAAKsL,WAGzB9D,KAAK5D,YAAcgQ,cAAcpM,KAAKuV,iBAAkB,CACxDvV,KAAKxH,KAAKgQ,GAdG,cAcYxI,KAAK5D,WAAuB,WAAG4D,KAAK5D,YAC7D,IAAImtB,EAAWvpB,KAAKxH,KAAkB,cAAEgxB,cAAc,eACtDD,EAAShsB,OAAO,EAAG,EAAGgsB,EAASE,OAEnCzpB,KAAKxH,KAAKkK,gBAAkB,SAAU0E,GAC9B9B,EAAMokB,iBACNpkB,EAAMokB,iBAAkB,EACxBpkB,EAAM9M,KAAKhB,YAAe+b,OAAQjO,EAAM1H,SAAUgP,MAAOrO,WAAS,QAAS+G,EAAM9M,KAAKhB,cAGtF8N,EAAMgC,QAAQqiB,EAAwBviB,IAG9CpH,KAAKxH,KAAKsL,SAAW,SAAUsD,GAM3B,GALIgF,cAAc9G,EAAMiQ,kBAChBzR,GAAgC,mBAAbA,GACnBA,EAAS9B,MAAMsD,GAAQ8B,IAG3B9B,EAAM9M,KAAKoxB,oBAAqB,CAChC,IAAIC,OAAe,EACnBA,EAAevkB,EAAM9M,KAAKsxB,kBAAkBC,YAAYjV,QAAQW,uBAAuB,cAAc,IAChGld,oBAAkBsxB,IAAiBA,EAAa9U,KAAOzP,EAAMwP,QAAQC,GAAK,6BAC3E3N,EAAKC,QAAS,GAGtB,IAAI2hB,EAAkB,IAAIH,WAU1B,OATAvjB,EAAMgC,QAAQ0iB,EAAiB5iB,EAAM,SAAU6iB,GACvC7d,eAAe9G,EAAMiQ,mBACrB0U,EAAa1qB,KAAO2qB,aAAWD,EAAa1qB,OAE3C0qB,EAAa5iB,QACd/B,EAAMwL,OAAOkZ,EAAiBC,GAElCjB,EAAgBD,QAAQkB,KAErBjB,GAEXhpB,KAAKxH,KAAKuL,UAAY,SAAUqD,GAC5B9B,EAAMgC,QAAQ6iB,GAAkB/iB,GAChC9B,EAAMwL,OAAOqZ,GAAkB/iB,IAEnCpH,KAAKxH,KAAKwL,SAAW,SAAUoD,GACvBgF,cAAc9G,EAAMiQ,kBAChBvR,GAAgC,mBAAbA,GACnBA,EAAShC,MAAMsD,GAAQ8B,IAG/B,IACIgjB,EAAU,IAAIvB,WAGlB,OAFAzhB,EAAS,QAAIgjB,EACb9kB,EAAMwL,OAAOuZ,GAAiBjjB,GACvBgjB,GAEXpqB,KAAKxH,KAAK2L,SAAW,SAAUiD,GAC3B9B,EAAMgC,QAAQgjB,GAAiBljB,GAC/B9B,EAAMwL,OAAOwZ,GAAiBljB,IAElCpH,KAAKxH,KAAK8L,gBAAkB,SAAU8C,GAClC9B,EAAMgC,QAAQijB,GAAwBnjB,GACtC9B,EAAMwL,OAAOyZ,GAAwBnjB,IAEzCpH,KAAKxH,KAAK6L,eAAiB,SAAU+C,GACjC9B,EAAMgC,QAAQkjB,GAAuBpjB,GACrC9B,EAAMwL,OAAO0Z,GAAuBpjB,IAExCpH,KAAKxH,KAAKyL,YAAc,SAAUmD,GAC9B9B,EAAMgC,QAAQmjB,GAAoBrjB,GAClC9B,EAAMwL,OAAO2Z,GAAoBrjB,IAErCpH,KAAKxH,KAAK4L,kBAAoB,SAAUgD,GACpC9B,EAAMgC,QAAQojB,GAA0BtjB,GACxC9B,EAAMwL,OAAO4Z,GAA0BtjB,IAE3CpH,KAAKxH,KAAK0L,YAAc,SAAUkD,GACE,SAA5B9B,EAAMpJ,aAAaC,MACnBmJ,EAAMgC,QAAQqjB,GAAoBvjB,GAEtC9B,EAAMwL,OAAO6Z,GAAoBvjB,KAGzC4U,EAAS/a,UAAUwnB,kBAAoB,SAAUrhB,GAC7C,IAAI9B,EAAQtF,KACRoM,eAAepM,KAAKuV,iBACpBqV,WAAW,WACPtlB,EAAMulB,sBAAsBzjB,IAC7B,KAGHpH,KAAK6qB,sBAAsBzjB,IAGnC4U,EAAS/a,UAAU8jB,iBAAmB,WAClC,IAAIvtB,EAAa,aAOjB,GAAIwI,KAAKxI,YAAcQ,EAAgBgI,MAAO,CAC1C,IAAIrB,EAAOqB,KAAKpC,SACZktB,EAAYvsB,WAAS,QAASyB,KAAKxI,YACvCwI,KAAKxH,KAAKhB,YAAe+b,OAAQ5U,EAAMiO,MAAOke,QAG9C9qB,KAAKxH,KAAKhB,WAAewI,KAAKxI,sBAAsBC,cAChC,IAAIA,cAAYuI,KAAKxI,WAAWA,WAAYwI,KAAKxI,WAAWuzB,aAAc/qB,KAAKxI,WAAWE,SAA1GsI,KAAKpC,SAOb,GALIwO,cAAcpM,KAAKxI,sBAAsBC,gBACzCuI,KAAKxH,KAAKhB,WAAsB,YAAIwI,KAAKxI,WAAsB,YAC/DwI,KAAKxH,KAAKhB,WAAyB,eAAIwI,KAAKxI,WAAyB,eACrEwI,KAAKxH,KAAKhB,WAAc,IAAIwI,KAAKxI,WAAc,KAE/CwI,KAAKxI,sBAAsBC,gBAAgBuI,KAAKxI,WAAWA,WAAW6pB,SAAWrhB,KAAKxI,WAAW+C,OAAQ,CACzGyF,KAAKxH,KAAKhB,WAAWA,GAAYsE,KAAOtB,EAAYwF,KAAKxI,WAAWA,GAAYsE,MAChFkE,KAAKxH,KAAKhB,WAAgB,MAAIwI,KAAKxI,WAAW+C,MAC9C,IAAIywB,EAAOhrB,KAAKxH,KAAKhB,WAChBe,oBAAkByH,KAAKxH,KAAKhB,WAAgB,QAC7CwI,KAAKxH,KAAKhB,WAAgB,MAAE4b,KAAK,SAAUtV,GACvCktB,EAAKxzB,GAAY6pB,SAAU,EAC3B2J,EAAoB,iBAAI,EACxBA,EAAKxzB,GAAYsE,KAAOgC,EAAEyV,OAC1ByX,EAAY,QAAI,IAAIC,kBAKpCjP,EAAS/a,UAAUmnB,yBAA2B,WAC1C,IACIzlB,EADA2C,EAAQtF,KAERoM,cAAcpM,KAAKuV,mBACdhd,oBAAkByH,KAAKxH,KAAKmK,kBAC7BA,EAAiB3C,KAAKxH,KAAKmK,iBAGnC3C,KAAKxH,KAAKiK,YAAc,SAAU2E,GACL,YAArBA,EAAKvH,aAA6BuH,EAAK/F,QAAU+F,EAAK/F,OAAO0e,eAC7D3Y,EAAK/F,OAAO0e,cAAcvZ,UAAUC,SAAS,yBAC7CW,EAAKC,QAAS,GAGE,YADFjO,YAAU,cAAegO,IAEvC9B,EAAMwL,OAAO,qBAEjBxL,EAAMwL,OAAO,eAAiB5V,WAAYkM,IACrC9P,EAAagO,IAAW/M,oBAAkB+M,EAAMmH,eAAkBzU,EAAgBsN,IAClC,IAA7CA,EAAM9M,KAAKK,eAAeV,QAAQC,QAAyD,IAAzCkN,EAAM9M,KAAKC,eAAeC,IAAIN,SACpFkN,EAAMwL,OAAO,gBAAkBlT,SAAU0H,EAAM9M,KAAKhB,aACpD8N,EAAM9M,KAAKhB,WAAa8N,EAAMyM,YAAYwB,QAE9C,IAAIyV,EAAkB,IAAIH,WAC1B,GAAIzc,cAAmC,WAArBhF,EAAKvH,cAA6ByF,EAAMiQ,iBAAkB,CAExEnO,EAAS,KAAIA,EAAS,KAAE,GAe5B,OAbA9B,EAAMgC,QAAQ4jB,EAAoB9jB,EAAM,SAAU+Q,GAC9C,GAAI/L,cAAyC,WAA3B+L,EAAWtY,cAA6ByF,EAAMiQ,iBAAkB,CAE9E4C,EAAe,MAAKA,EAAe,MAElCA,EAAW9Q,QACZ/B,EAAMwL,OAAOuY,EAAkBlR,GAE/B/L,cAAyC,cAA3B+L,EAAWtY,cAAgCyF,EAAMiQ,mBAC/D4C,EAAWtZ,IAAMqrB,aAAW/R,EAAWtZ,MAE3CmqB,EAAgBD,QAAQ5Q,KAErB6Q,GAEXhpB,KAAKxH,KAAKmK,eAAiB,SAAUyE,GACjC,GAAIgF,cAAc9G,EAAMiQ,kBAAyC,oBAArBnO,EAAKvH,YAAmC,CAEhF,IAAK,IADDqG,EAAOZ,EAAMvG,UACR7G,EAAI,EAAGA,EAAIgO,EAAK9N,OAAQF,IAAK,EAC9BgO,EAAKhO,GAAGsO,UAAUC,SAAS,uBAAyBP,EAAKhO,GAAGsO,UAAUC,SAAS,wBAC9EnB,EAAMmK,mBAA0C,WAArBrI,EAAKvH,YAA4B8L,eAAazF,EAAKhO,IAAK,qBAChFyT,eAAazF,EAAKhO,IAAK,sBAC1BoN,EAAMmK,mBAA0C,WAArBrI,EAAKvH,YAA4BiP,YAAU5I,EAAKhO,IAAK,sBAC7E4W,YAAU5I,EAAKhO,IAAK,sBAE5B,IAAIsH,EAAQ0G,EAAKhO,GAAGyO,iBAAiB,cACjCwkB,EAAa3rB,EAAM8F,EAAM7F,iBAAiBgW,uBAAuB,sBAAsB,IACvFjW,EAAM8F,EAAM7F,iBAAiBgW,uBAAuB,oBAAoB,GACxE0V,IACC7lB,EAAMmK,mBAA0C,WAArBrI,EAAKvH,YAA4B8L,eAAawf,GAAa,oBACnFxf,eAAawf,GAAa,sBAC7B7lB,EAAMmK,mBAA0C,WAArBrI,EAAKvH,YAA4BiP,YAAUqc,GAAa,sBAChFrc,YAAUqc,GAAa,qBAG/BxoB,GAA4C,mBAAnBA,GACzBA,EAAeX,MAAMsD,GAAQ8B,IAiBrC,GAdA9B,EAAMwL,OAAO,iBAAkB1J,GAC/B9B,EAAMuZ,oBACNvZ,EAAM8lB,sBACmB,YAArBhkB,EAAKvH,aACLyF,EAAMwL,OAAO,qBAEjBxL,EAAMwL,OAAO,kBAAoB5V,WAAYkM,IACpB,QAArBA,EAAKvH,aAAgE,QAAtCyF,EAAMpJ,aAAaQ,gBAAkE,WAAtC4I,EAAMpJ,aAAaQ,gBACjG4I,EAAMwL,OAAOua,EAAiBjkB,GAET,cAArBA,EAAKvH,aACLyF,EAAMwL,OAAOgJ,GAAkB1S,GAEnC9B,EAAMwL,OAAO,oBAAqB1J,GAC9BgF,cAAmC,WAArBhF,EAAKvH,cAA6ByF,EAAMiQ,iBAAkB,CAExEnO,EAAS,KAAIA,EAAS,KAAE,GAE5B9B,EAAMgC,QAAQkP,EAAuBpP,KAG7C4U,EAAS/a,UAAUknB,mBAAqB,WACpC,IAAI7iB,EAAQtF,KACRmmB,EAAWnmB,KACfA,KAAKxH,KAAKqL,kBAAoB,SAAUuD,GACpC9B,EAAMgC,QAAQgkB,EAA0BlkB,GACxC9B,EAAMwL,OAAOwa,EAA0BlkB,IAE3CpH,KAAKxH,KAAKuM,gBAAkB,SAAUqC,GAClC9B,EAAMwL,OAAO,kBAAmB1J,GAChC9B,EAAMgC,QAAQikB,GAAwBnkB,IAE1CpH,KAAKxH,KAAK8J,aAAe,SAAU8E,GAC3B7O,oBAAkByH,KAAKkY,YACvBxE,WAAS,cAAc,EAAOtM,GAG9BsM,WAAS,aAAc1T,KAAKkY,WAAY9Q,GAE5C+e,EAAS9mB,aAAagQ,YAAYjI,IAEtCpH,KAAKxH,KAAK+J,cAAgB,SAAU6E,GAC5B7O,oBAAkByH,KAAKkY,YACvBxE,WAAS,cAAc,EAAOtM,GAG9BsM,WAAS,aAAc1T,KAAKkY,WAAY9Q,GAE5C+e,EAAS9mB,aAAaC,WAAW8H,IAErCpH,KAAKxH,KAAKiL,iBAAmB,SAAU2D,GACnC9B,EAAMwL,OAAO0a,EAAyBpkB,GACtC9B,EAAMgC,QAAQkkB,EAAyBpkB,IAE3CpH,KAAKxH,KAAKgL,gBAAkB,SAAU4D,GAClC9B,EAAMwL,OAAO2a,EAAwBrkB,GACrC9B,EAAMgC,QAAQmkB,EAAwBrkB,IAE1CpH,KAAKxH,KAAK+J,cAAgB,SAAU6E,GAChC9B,EAAMjG,aAAaC,WAAW8H,KAGtC4U,EAAS/a,UAAUqnB,mBAAqB,WACpC,IAAIhjB,EAAQtF,KACRmmB,EAAWnmB,KACfA,KAAKxH,KAAKwM,mBAAqB,SAAUoC,GACrC+e,EAAS7e,QAAQokB,GAA2BtkB,IAEhDpH,KAAKxH,KAAKmzB,aAAe,SAAUvkB,GAC/B+e,EAAS7e,Qbz/BK,eay/BwBF,IAE1CpH,KAAKxH,KAAKozB,QAAU,SAAUxkB,GACtB9B,EAAM9M,KAAKqzB,OACXzkB,EAAKC,QAAS,GAGlB8e,EAASrV,OAAOgb,GAAmB1kB,GACnC+e,EAAS7e,QbvgCA,UaugCwBF,KAErCpH,KAAKxH,KAAKuzB,QAAU,SAAU3kB,GACtB9B,EAAM9M,KAAKqzB,OACXzkB,EAAKC,QAAS,GAGlB8e,EAASrV,OAAOkb,GAAmB5kB,GACnCA,EAAKC,QAAS,KAOtB2U,EAAS/a,UAAUuiB,SAAW,WAC1BxjB,KAAK8kB,qBACL9kB,KAAK0kB,iBACLhR,WAAS,qBAAsB1T,KAAKisB,mBAAoBjsB,KAAKxH,MAE7Dkb,WAAS,mBAAoB1T,KAAQ,iBAAGA,KAAKxH,OAMjDwjB,EAAS/a,UAAUqiB,oBAAsB,WACrC,IAAKtjB,KAAK7H,QAAQC,SAAY4H,KAAKqjB,WAAW/Q,YAAcpZ,OAAOC,KAAK6G,KAAKxI,YAAYY,OAAS,CAC9F4H,KAAK7H,WACL,IAAIoB,OAAS,EAIbA,EAASyG,KAAKxI,WAAW,GAGzB,IAAK,IADD2B,EAAOD,OAAOC,KAAKI,GACdrB,EAAI,EAAGA,EAAIiB,EAAKf,OAAQF,KACuC,KAA/D8H,KAAKxC,aAAcwC,KAAK3C,iBAAiBqB,QAAQvF,EAAKjB,KACvD8H,KAAK7H,QAAQkB,KAAKF,EAAKjB,MAKvC8jB,EAAS/a,UAAU+kB,oBAAsB,WACrC,IAAI9lB,KAYJ,OAVAA,EAAKwiB,YAAc1iB,KAAK9D,aAAawmB,YACrCxiB,EAAKD,aAAeD,KAAK9D,aAAa+D,aACtCC,EAAKyiB,cAAgB3iB,KAAK9D,aAAaymB,cACvCziB,EAAKxD,eAAsD,WAArCsD,KAAK9D,aAAaQ,eAA8B,SAAW,MACjFwD,EAAKgsB,oBAAsBlsB,KAAK9D,aAAagwB,oBAC7ChsB,EAAKisB,kBAAoBnsB,KAAK9D,aAAaiwB,kBAC3CjsB,EAAKoR,SAAWtR,KAAK9D,aAAaoV,SAClCpR,EAAKksB,wBAA0BpsB,KAAK9D,aAAakwB,wBACjDlsB,EAAS,KAAIF,KAAK9D,aAAiB,KACnCgE,EAAKmsB,OAASrsB,KAAK9D,aAAamwB,OACxBrsB,KAAK9D,aAAaC,MACtB,IAAK,SAGL,IAAK,QACD+D,EAAK/D,KAAO6D,KAAK9D,aAAaC,KAC9B,MACJ,IAAK,MACD+D,EAAK/D,KAAO,SACZ,MACJ,IAAK,OACD+D,EAAK/D,KAAO,SACZ+D,EAAKisB,mBAAoB,EAGjC,OAAOjsB,GAMX8b,EAAS/a,UAAU6kB,eAAiB,WAChC,GAAI9lB,KAAKmiB,iBAAkB,CAEvB,IAAK,IADD9N,KACKnc,EAAI,EAAGA,EAAI8H,KAAKmiB,iBAAiB/pB,OAAQF,IAC9C,OACQ8H,KAAKmiB,iBAAiBjqB,IAC1B,IAAK,SACL,KAAK8hB,mBAAiB0D,OAClBrJ,EAAMhb,MAAOizB,KAAMtsB,KAAK+d,KAAKwO,YAAY,UACrClrB,OAAQ,aAAc0T,GAAI/U,KAAK8U,QAAQC,GAAK,4BAC5CV,QAAUiY,KAAMtsB,KAAK+d,KAAKwO,YAAY,SAAUxX,GAAI,UAAauX,KAAMtsB,KAAK+d,KAAKwO,YAAY,SAAUxX,GAAI,YAC/G,MACJ,QACIV,EAAMhb,KAAK2G,KAAKmiB,iBAAiBjqB,IAG7C,OAAOmc,EAGP,OAAO,MAOf2H,EAAS/a,UAAUykB,eAAiB,WAChC,GAAI1lB,KAAKkiB,QAAS,CAEd,IAAK,IADD7N,KACKnc,EAAI,EAAGA,EAAI8H,KAAKkiB,QAAQ9pB,OAAQF,IACrC,OACQ8H,KAAKkiB,QAAQhqB,IACjB,IAAK,SACL,KAAK6hB,cAAYyS,OACbnY,EAAMhb,KAAK,UACX,MACJ,IAAK,QACL,KAAK0gB,cAAY5L,MACbkG,EAAMhb,KAAK,SACX,MACJ,IAAK,YACL,KAAK0gB,cAAY4D,UACb,IAAI8O,EAAczsB,KAAK+d,KAAKwO,YAAY,aACxClY,EAAMhb,MAAOizB,KAAMG,EAAaA,YAAaA,EACzCC,WAAY,WAAY3X,GAAI/U,KAAK8U,QAAQC,GAAK,2BAClD,MACJ,IAAK,cACL,KAAKgF,cAAY6D,YACb,IAAI+O,EAAU3sB,KAAK+d,KAAKwO,YAAY,eACpClY,EAAMhb,MAAOizB,KAAMK,EACfF,YAAaE,EAASD,WAAY,aAAc3X,GAAI/U,KAAK8U,QAAQC,GAAK,6BAE1E,MACJ,IAAK,SACL,KAAKgF,cAAY8D,UACb,IAAI+O,EAAgB5sB,KAAK+d,KAAKwO,YAAY,aAC1ClY,EAAMhb,MACFizB,KAAMM,EAAeH,YAAaG,EAClCF,WAAY,WAAY3X,GAAI/U,KAAK8U,QAAQC,GAAK,wBAElD,MACJ,IAAK,UACL,KAAKgF,cAAY+D,WACb,IAAI+O,EAAiB7sB,KAAK+d,KAAKwO,YAAY,cAC3ClY,EAAMhb,MACFizB,KAAMO,EAAgBJ,YAAaI,EACnCH,WAAY,YAAa3X,GAAI/U,KAAK8U,QAAQC,GAAK,yBAEnD,MACJ,QACIV,EAAMhb,KAAK2G,KAAKkiB,QAAQhqB,IAGpC,OAAOmc,EAGP,OAAO,MAOf2H,EAAS/a,UAAUgkB,eAAiB,SAAU9sB,GAC1C,IAAIwH,EAASxH,EACb6H,KAAK2gB,eAIL,IAAK,IAHDmM,EACAC,EACAC,KACK90B,EAAI,EAAGA,EAAIyH,EAAOvH,OAAQF,IAAK,CACpC,IAAI+0B,EAAajtB,KAAKxH,KAAK00B,eAAevtB,EAAOzH,GAAGmS,KAGpD,GAFA0iB,EAAaE,MACbH,KAC+B,iBAApB9sB,KAAK7H,QAAQD,GACpB60B,EAAW7c,MAAQ4c,EAAe5c,MAAQlQ,KAAK7H,QAAQD,QAGvD,IAAK,IAAIi1B,EAAK,EAAGC,EAAKl0B,OAAOC,KAAKwG,EAAOzH,IAAKi1B,EAAKC,EAAGh1B,OAAQ+0B,IAAM,CAChE,IAAIzR,EAAO0R,EAAGD,GACdJ,EAAWrR,GAAQoR,EAAepR,GAAQ/b,EAAOzH,GAAGwjB,GAGxD/b,EAAOzH,GAAGC,QACV6H,KAAKilB,eAAe9sB,EAAQD,GAAGC,SAG/B6H,KAAK2gB,YAAYtnB,KAAK,IAAIyG,EAAOgtB,IAErCE,EAAqB3zB,KAAK0zB,GAE9B,OAAOC,GAQXhR,EAAS/a,UAAUosB,kBAAoB,SAAUC,EAASC,GAItD,IAAK,IAFDC,GAAiB,EAEZL,EAAK,EAAGM,EAHAv0B,OAAOC,KAAKm0B,GAGeH,EAAKM,EAAar1B,OAAQ+0B,IAAM,CACxE,IAAIzR,EAAO+R,EAAaN,GACxB,OAAQzR,GACJ,IAAK,UACKtP,cAAcpM,KAAKuV,kBAAoBvV,KAAkB,gBAC3DA,KAAKxH,KAAKL,QAAU6H,KAAKilB,eAAejlB,KAAK7H,UAEjD,MACJ,IAAK,kBACD6H,KAAKxH,KAAKk1B,iBACV,MACJ,IAAK,cACD1tB,KAAKxH,KAAK8W,YAActP,KAAKsP,YAC7B,MACJ,IAAK,eACDtP,KAAKxH,KAAK+W,aAAe4V,sBAAoBnlB,KAAKuP,cAClDie,GAAiB,EACjB,MACJ,IAAK,uBACDxtB,KAAKxH,KAAK8F,qBAAuB0B,KAAK1B,qBACtC,MACJ,IAAK,UACD0B,KAAKxH,KAAK0pB,QAAUliB,KAAK0lB,iBACzB,MACJ,IAAK,iBACD1lB,KAAKxH,KAAKqqB,eAAiB7iB,KAAK6iB,eAChC,MACJ,IAAK,oBACD7iB,KAAKxH,KAAK2N,kBAAoBgf,sBAAoBnlB,KAAKmG,mBACvD,MACJ,IAAK,eACDnG,KAAKxH,KAAK8H,aAAeN,KAAKM,aAC9B,MACJ,IAAK,oBACDN,KAAKxH,KAAKm1B,kBAAoB3tB,KAAK2tB,kBACnC,MACJ,IAAK,eACD3tB,KAAKxH,KAAKiG,aAAe0mB,sBAAoBnlB,KAAKvB,cAClD,MACJ,IAAK,iBACDuB,KAAKxH,KAAKC,eAAiB0sB,sBAAoBnlB,KAAKvH,gBACpD,MACJ,IAAK,iBACDuH,KAAKxH,KAAKI,eAAiBoH,KAAKpH,eAChC,MACJ,IAAK,iBACDoH,KAAKxH,KAAKK,eAAiBssB,sBAAoBnlB,KAAKnH,gBACpD,MACJ,IAAK,iBACDmH,KAAKxH,KAAK6H,eAAiBL,KAAKK,eAChC,MACJ,IAAK,sBACDL,KAAKxH,KAAKiqB,oBAAsBziB,KAAKyiB,oBACrC,MACJ,IAAK,aACDziB,KAAKxH,KAAKie,WAAa0O,sBAAoBnlB,KAAKyW,YAChD,MACJ,IAAK,aAID,GAHAzW,KAAKwY,cAAiBxY,KAAKxI,sBAAsBC,iBAAkBc,oBAAkByH,KAAKxI,WAAW+C,QAC9FyF,KAAKxI,WAAWE,mBAAmB4pB,oBAC1CthB,KAAKujB,gBAAgBvjB,KAAKxI,YACtBwI,KAAKwY,YACL,GAAIxgB,EAAgBgI,MAAO,CACvB,IAAI4M,EAAQrO,WAAS,QAASyB,KAAKxI,YACnCwI,KAAKxH,KAAKhB,YAAe+b,OAAQvT,KAAKpC,SAAUgP,MAAOA,QAGvD5M,KAAKxH,KAAKhB,WAAawI,KAAKpC,cAIhCoC,KAAK+kB,mBACD/kB,KAAK1B,uBACL0B,KAAKxH,KAAK4e,cAAcvO,sBACxB7I,KAAKxH,KAAK4e,cAAcwW,cAAc,MACtC5tB,KAAKxH,KAAK4e,cAAcyW,eAGhC,MACJ,IAAK,QACD7tB,KAAKxH,KAAKga,MAAQxS,KAAKwS,MACvB,MACJ,IAAK,oBACG8a,EAAQ5R,GACR1b,KAAKyf,cAGLzf,KAAKwf,YAET,MACJ,IAAK,qBACDxf,KAAK8tB,UACL,MACJ,IAAK,YACD9tB,KAAKxH,KAAKitB,UAAYzlB,KAAKylB,UAC3B,MACJ,IAAK,cACDzlB,KAAKxH,KAAK0Y,YAAciU,sBAAoBnlB,KAAKkR,aACjD,MACJ,IAAK,aACDlR,KAAKxH,KAAK0G,WAAac,KAAKd,WAC5B,MACJ,IAAK,gBACDc,KAAKxH,KAAKkH,cAAgBM,KAAKN,cAC/B,MACJ,IAAK,YACDM,KAAKxH,KAAKgtB,UAAYxlB,KAAKwlB,UAC3B,MACJ,IAAK,SACIjtB,oBAAkByH,KAAK6jB,SAAoC,iBAAjB7jB,KAAW,SAAgD,IAA9BA,KAAK6jB,OAAOnlB,QAAQ,OAC5FsB,KAAK8U,QAAQ5J,MAAM2Y,OAAS7jB,KAAK6jB,QAErC7jB,KAAKxH,KAAKqrB,OAAS7jB,KAAK6jB,OACxB,MACJ,IAAK,QACItrB,oBAAkByH,KAAKmL,QAAkC,iBAAhBnL,KAAU,QAA+C,IAA7BA,KAAKmL,MAAMzM,QAAQ,OACzFsB,KAAK8U,QAAQ5J,MAAMC,MAAQnL,KAAKmL,OAEpCnL,KAAKxH,KAAK2S,MAAQnL,KAAKmL,MACvB,MACJ,IAAK,SACDnL,KAAKxH,KAAKylB,OAASje,KAAKie,OACxB,MACJ,IAAK,mBACDje,KAAKxH,KAAKqtB,iBAAmB7lB,KAAK6lB,iBAClC,MACJ,IAAK,eACD7lB,KAAKxH,KAAK6sB,aAAerlB,KAAKqlB,aAC9B,MACJ,IAAK,cACDrlB,KAAKxH,KAAK8sB,YAActlB,KAAKslB,YAC7B,MACJ,IAAK,iBACDtlB,KAAKxH,KAAK+sB,eAAiBvlB,KAAKulB,eAChC,MACJ,IAAK,mBACDvlB,KAAKxH,KAAK4pB,iBAAmBpiB,KAAKoiB,iBAClC,MACJ,IAAK,iBACDpiB,KAAKxH,KAAK8pB,eAAiBtiB,KAAKsiB,eAChC,MACJ,IAAK,YACDtiB,KAAKxH,KAAKwsB,UAAYhlB,KAAKglB,UAC3B,MACJ,IAAK,kBACDhlB,KAAKxH,KAAK4H,gBAAkBJ,KAAKI,gBACjC,MACJ,IAAK,gBACDJ,KAAKxH,KAAK+H,cAAgBP,KAAKO,cAC/B,MACJ,IAAK,mBACDP,KAAKxH,KAAKotB,iBAAmBT,sBAAoBnlB,KAAK4lB,kBACtD,MACJ,IAAK,gBACD5lB,KAAKxH,KAAKoY,cAAgBuU,sBAAoBnlB,KAAK4Q,eACnD5Q,KAAK8tB,UACL,MACJ,IAAK,mBACD9tB,KAAKxH,KAAK2pB,iBAAmBniB,KAAK8lB,iBAClC,MACJ,IAAK,oBACD9lB,KAAKxH,KAAK+pB,kBAAoBviB,KAAKuiB,kBACnC,MACJ,IAAK,iBACDviB,KAAKxH,KAAK6pB,eAAiB8C,sBAAoBnlB,KAAKqiB,gBACpD,MACJ,IAAK,kBACDriB,KAAKxH,KAAKutB,gBAAkBZ,sBAAoBnlB,KAAK+lB,iBACrD,MACJ,IAAK,eACG/lB,KAAKxH,KAAKqzB,QAA0C,WAAhC7rB,KAAKxH,KAAK0D,aAAaC,MAAqBmxB,EAAQ5R,GAAMvf,OACtD,SAAvBmxB,EAAQ5R,GAAMvf,MAA0C,QAAvBmxB,EAAQ5R,GAAMvf,OAChD6D,KAAKxH,KAAKu1B,YAEd/tB,KAAKxH,KAAK0D,aAAe8D,KAAKgmB,sBAGlCwH,GACAxtB,KAAK8tB,YASjB9R,EAAS/a,UAAUiH,QAAU,WACzBlI,KAAKguB,iBACLhuB,KAAKijB,eACLlhB,EAAOd,UAAUiH,QAAQ3C,KAAKvF,MAC1BA,KAAKxH,MACLwH,KAAKxH,KAAK0P,UAEVlI,KAAKqjB,YACLrjB,KAAKqjB,WAAWnb,UAMpB,IAAK,IAJD8Z,GAAW,aAAc,aAAc,eAAgB,eAAgB,cAAe,kBACtF,oBAAqB,kBAAmB,gBAAiB,gBAAiB,gBAAiB,eAC3F,cAAe,iBAAkB,mBAAoB,oBAAqB,aAAc,sBACxF,kBAAmB,YAAa,uBAAwB,gBACnD9pB,EAAI,EAAGA,EAAI8pB,EAAQ5pB,OAAQF,IAC5B8H,KAAKgiB,EAAQ9pB,MACb8H,KAAKgiB,EAAQ9pB,IAAM,MAG3B8H,KAAK8U,QAAQ/I,UAAY,GACzB/L,KAAKxH,KAAO,MAQhBwjB,EAAS/a,UAAUgtB,SAAW,WAC1BlsB,EAAOd,UAAUgtB,SAAS1oB,KAAKvF,MACzBoM,cAAcpM,KAAKuV,oBAAqBhX,WAAS,aAAcyB,KAAKxH,OAAUwH,KAAKlG,gBACrFkG,KAAKxH,KAAKy1B,YAQlBjS,EAAS/a,UAAUitB,eAAiB,WAWhC,IAAK,IAVDC,GAAa,eAAgB,eAC7B,iBAAkB,UAAW,iBAAkB,oBAC/CC,GACA7e,cAAe,WAAY,YAAa,eAAgB,oBAAqB,oBAAqB,aAClG1W,gBAAiB,OAAQ,OAAQ,sBAAuB,qBAAsB,eAAgB,iBAC9FJ,gBAAiB,SAAU,WAAY,cACvCgG,gBAAkBtG,WAAa0tB,qBAI1B3tB,EAAI,EAAGA,EAAIi2B,EAAU/1B,OAAQF,IAElC,IAAK,IADDm2B,EAAgBruB,KAAKmuB,EAAUj2B,IAC1Bi1B,EAAK,EAAGC,EAAKgB,EAAgBD,EAAUj2B,IAAKi1B,EAAKC,EAAGh1B,OAAQ+0B,IAAM,QAEhEkB,EADGjB,EAAGD,IAKrB,OADAntB,KAAKsuB,gBATiB,SAAU,OAAQ,oBAAqB,iBAAkB,WAC3E,kBAAmB,WAAY,cAQCtuB,KAAK7H,SAClC6H,KAAKuuB,aAAaJ,IAE7BnS,EAAS/a,UAAUqtB,eAAiB,SAAUE,EAAgBr2B,GAC1D,IAAK,IAAID,EAAI,EAAGA,EAAIC,EAAQC,OAAQF,IAC5BC,EAAQD,GAAGC,SACX6H,KAAKyuB,eAAeD,EAAgBr2B,EAAQD,IAC5C8H,KAAKsuB,eAAeE,EAAgBr2B,EAAQD,GAAGC,UAG/C6H,KAAKyuB,eAAeD,EAAgBr2B,EAAQD,KAIxD8jB,EAAS/a,UAAUwtB,eAAiB,SAAUD,EAAgB7uB,GAC1D,IAAK,IAAIzH,EAAI,EAAGA,EAAIs2B,EAAep2B,OAAQF,WAChCyH,EAAO6uB,EAAet2B,IAC7ByH,EAAO9B,WAGfme,EAAS/a,UAAUwgB,kBAAoB,SAAU3jB,GAC7C,GAAKvF,oBAAkBuF,EAAE4wB,SAAzB,CAGA,IAAIrtB,EAASvD,EAAEuD,QACVA,EAAOmF,UAAUC,SAAS,sBAC3BpF,EAAOmF,UAAUC,SAAS,uBAA4BzG,KAAK2uB,gBAAmB3uB,KAAKxH,KAAKqzB,QACxF7rB,KAAK4f,sBAAsBve,GAE/BrB,KAAK2uB,gBAAiB,EACtB3uB,KAAK8Q,OAAO,qBAAuBzP,OAAQA,MAM/C2a,EAAS/a,UAAUlC,QAAU,WACzB,OAAOiB,KAAKxH,KAAKuG,WAMrBid,EAAS/a,UAAU2tB,SAAW,WAC1B,OAAO5uB,KAAKxH,KAAKo2B,YASrB5S,EAAS/a,UAAU4tB,UAAY,SAAUlwB,EAAM5D,EAAO+zB,GAC9C9uB,KAAK5D,YACL4D,KAAK5D,WAAWyyB,UAAUlwB,EAAM5D,EAAO+zB,IAM/C9S,EAAS/a,UAAU8sB,UAAY,WACvB/tB,KAAKxH,KAAK4D,YACV4D,KAAKxH,KAAK4D,WAAW2xB,aAM7B/R,EAAS/a,UAAU8tB,SAAW,WACtB/uB,KAAKxH,KAAK4D,YACV4D,KAAKxH,KAAK4D,WAAW2yB,YAS7B/S,EAAS/a,UAAU+tB,WAAa,SAAUjnB,EAAUmI,EAAOpV,GACnDkF,KAAKxH,KAAK4D,YACV4D,KAAKxH,KAAK4D,WAAW4yB,WAAWjnB,EAAUmI,EAAOpV,IAQzDkhB,EAAS/a,UAAUguB,UAAY,SAAUl0B,EAAO4D,GAC5C,GAAIqB,KAAKxH,KAAK4D,WAAY,CACtB,IAAIyoB,EAAW7kB,KAAKxH,KAAKgE,wBAAwBzB,GACjD0B,SAAOooB,EAAUlmB,GACjBqB,KAAKxH,KAAK4D,WAAW6yB,UAAUl0B,EAAO8pB,KAS9C7I,EAAS/a,UAAUiuB,aAAe,SAAUC,EAAWxwB,GAC/CqB,KAAKxH,KAAK4D,YACV4D,KAAKxH,KAAK4D,WAAW8yB,aAAaC,EAAWxwB,IAOrDqd,EAAS/a,UAAUmuB,UAAY,SAAUvwB,GACjCmB,KAAKxH,KAAK4D,YACV4D,KAAKxH,KAAK4D,WAAWgzB,UAAUvwB,IAQvCmd,EAAS/a,UAAUouB,SAAW,SAAUtnB,EAAUmI,GAC1ClQ,KAAK5D,YACL4D,KAAK5D,WAAWizB,SAAStnB,EAAUmI,IAQ3C8L,EAAS/a,UAAUquB,mBAAqB,SAAUjb,EAAOkb,GACjDvvB,KAAKxH,KAAKg3B,eACVxvB,KAAKxH,KAAKg3B,cAAcC,YAAYpb,EAAOkb,IAMnDvT,EAAS/a,UAAUyuB,QAAU,WACrB1vB,KAAKxH,KAAK4D,YACV4D,KAAKxH,KAAK4D,WAAWszB,WAS7B1T,EAAS/a,UAAU0uB,kBAAoB,SAAUC,EAAGC,GAC5C7vB,KAAK8vB,qBACL9vB,KAAK8vB,oBAAoBH,kBAAkBC,EAAGC,IAOtD7T,EAAS/a,UAAU8uB,UAAY,SAAUtiB,GACjCzN,KAAKxH,KAAK4D,YACV4D,KAAKxH,KAAK4D,WAAW2zB,UAAUtiB,IAOvCuO,EAAS/a,UAAUrF,wBAA0B,WACzC,OAAOoE,KAAKxH,KAAKoD,2BASrBogB,EAAS/a,UAAU+uB,aAAe,SAAUt3B,EAAKwX,EAAOpV,GACpDkF,KAAKxH,KAAKw3B,aAAat3B,EAAKwX,EAAOpV,IAQvCkhB,EAAS/a,UAAUrC,WAAa,SAAUlG,EAAKoR,GAC3C,IAAI1L,EAAiB4B,KAAKxD,wBACtByzB,EAAajwB,KAAKxH,KAAKoD,0BAA0B,GACjDZ,EAAQ,EACRzB,KACJ6E,EAAe0kB,KAAK,SAAUhoB,EAAO5C,EAAG4F,GACpC,OAAIhD,EAAMm1B,KAAgBv3B,IACtBa,EAASuB,GACF,KAMfE,EAAQzB,EAAOyB,MACf8O,EAAQ9O,MAAQA,EAChB8O,EAAQ/O,MAAQxB,EAAOwB,MACvB+O,EAAQ3P,aAAeZ,EAAOY,aAC9B2P,EAAQ7M,SAAW1D,EAAO0D,SAC1B6M,EAAQjQ,SAAWN,EAAOM,SAC1BiQ,EAAQnQ,WAAaJ,EAAOI,WAC5BmQ,EAAQ2B,cAAgBlS,EAAOkS,cAC/B3B,EAAQ5P,gBAAkBX,EAAOW,gBACjC4P,EAAQtL,eAAiBjF,EAAOiF,eAChCsL,EAAQ9P,SAAWT,EAAOS,SAC1BgG,KAAKxH,KAAKoG,WAAWlG,EAAKoR,IAO9BkS,EAAS/a,UAAUivB,SAAW,SAAUC,GAChCnwB,KAAKxH,KAAK43B,aACVpwB,KAAKxH,KAAK43B,YAAYF,SAASC,IAQvCnU,EAAS/a,UAAUovB,sBAAwB,SAAUC,GAC7CtwB,KAAKowB,aACLpwB,KAAKxH,KAAK43B,YAAYC,sBAAsBC,IASpDtU,EAAS/a,UAAUsvB,iBAAmB,SAAUxoB,EAAUoC,GACtD,OAAOnK,KAAKxH,KAAK+3B,iBAAiBxoB,EAAUoC,IAOhD6R,EAAS/a,UAAUgP,iBAAmB,SAAUC,GAC5C,OAAI9D,cAAcpM,KAAKuV,iBACZib,uBAAqBxwB,KAAKxH,KAAKL,QAAS,SAAUs4B,EAAM11B,GAC3D,GAAI01B,EAAKvgB,QAAUA,EACf,OAAOugB,IAGZ,GAGID,uBAAqBxwB,KAAK2gB,YAAa,SAAU8P,EAAM11B,GAC1D,GAAI01B,EAAKvgB,QAAUA,EACf,OAAOugB,IAGZ,IAQXzU,EAAS/a,UAAUisB,eAAiB,SAAU7iB,GAC1C,OAAI+B,cAAcpM,KAAKuV,iBACZib,uBAAqBxwB,KAAKxH,KAAKL,QAAS,SAAUs4B,EAAM11B,GAC3D,GAAI01B,EAAKpmB,MAAQA,EACb,OAAOomB,IAGZ,GAGID,uBAAqBxwB,KAAK2gB,YAAa,SAAU8P,EAAM11B,GAC1D,GAAI01B,EAAKpmB,MAAQA,EACb,OAAOomB,IAGZ,IAOXzU,EAAS/a,UAAUyvB,oBAAsB,WACrC,OAAO1wB,KAAKxH,KAAKk4B,uBAMrB1U,EAAS/a,UAAU0vB,iBAAmB,WAClC,OAAO3wB,KAAKxH,KAAKm4B,oBAMrB3U,EAAS/a,UAAU2vB,sBAAwB,WACvC,OAAO5wB,KAAKxH,KAAKo4B,yBAQrB5U,EAAS/a,UAAU4vB,YAAc,SAAU13B,EAAM23B,GAC7C9wB,KAAKxH,KAAKq4B,YAAY13B,EAAM23B,GAC5B9wB,KAAK6e,qBAQT7C,EAAS/a,UAAU8vB,YAAc,SAAU53B,EAAM63B,GAC7ChxB,KAAKxH,KAAKu4B,YAAY53B,EAAM63B,GAC5BhxB,KAAK6e,qBAOT7C,EAAS/a,UAAUgwB,uBAAyB,SAAU/gB,GAClD,OAAOlQ,KAAKxH,KAAKy4B,uBAAuB/gB,IAO5C8L,EAAS/a,UAAUiwB,uBAAyB,SAAUn2B,GAClD,OAAOiF,KAAKxH,KAAK04B,uBAAuBn2B,IAO5CihB,EAAS/a,UAAUkwB,qBAAuB,SAAU9mB,GAChD,OAAOrK,KAAKxH,KAAK24B,qBAAqB9mB,IAO1C2R,EAAS/a,UAAUmwB,sBAAwB,SAAUlhB,GACjD,OAAOlQ,KAAKxH,KAAK44B,sBAAsBlhB,IAO3C8L,EAAS/a,UAAUmP,oBAAsB,SAAU/F,GAC/C,OAAOrK,KAAKxH,KAAK4X,oBAAoB/F,IAMzC2R,EAAS/a,UAAUrB,WAAa,SAAUyxB,GACtC,OAAIjlB,cAAcpM,KAAKuV,iBACZvV,KAAKxH,KAAKL,SAGjB6H,KAAK6e,kBAAkB7e,KAAKxH,KAAKoH,WAAWyxB,IACrCrxB,KAAK2gB,cAGpB3E,EAAS/a,UAAU4d,kBAAoB,SAAUlf,GAC7CK,KAAK2gB,eAIL,IAAK,IADDoM,EAFAuE,GAAgB,EAChBC,EAAch5B,oBAAkBoH,GAAUK,KAAKxH,KAAKoH,aAAeD,EAE9DzH,EAAI,EAAGA,EAAIq5B,EAAYn5B,OAAQF,IAAK,CACzC60B,KACA,IAAK,IAAII,EAAK,EAAGC,EAAKl0B,OAAOC,KAAKo4B,EAAYr5B,IAAKi1B,EAAKC,EAAGh1B,OAAQ+0B,IAAM,CACrE,IAAIzR,EAAO0R,EAAGD,GACT/gB,cAAuB,SAATsP,IACfqR,EAAWrR,GAAQ6V,EAAYr5B,GAAGwjB,IAG1C1b,KAAK2gB,YAAYtnB,KAAK,IAAIyG,EAAOitB,IAErC,IAAK3gB,eAAepM,KAAKuV,iBAAkB,CAEvCvV,KAAU,WAAK,WACXA,KAAKxH,KAAKL,QAAQC,SAAW4H,KAAK2gB,YAAYvoB,SAC9Ck5B,GAAgB,GAEfA,GACDtxB,KAAK2b,eAAgBxjB,QAAS6H,KAAK2gB,cAAe,GAEtD3gB,KAAU,eAAIib,EAElB,OAAOjb,KAAK2gB,aAMhB3E,EAAS/a,UAAUuwB,WAAa,WAC5B,OAAOxxB,KAAKxH,KAAKg5B,cAErBxV,EAAS/a,UAAUsb,yBAA2B,WAE1Cvc,KAAKxH,KAAa,qBAAEwJ,MAAMhC,OAE9Bgc,EAAS/a,UAAUwwB,aAAe,SAAUC,EAAcv5B,GAEtD6H,KAAKxH,KAAa,aAAEwJ,MAAMhC,MAAO0xB,EAAcv5B,KAEnD6jB,EAAS/a,UAAUmqB,oBAAsB,WACrCprB,KAAK2b,eAAgB9iB,eAAgBO,YAAU,aAAc4G,KAAKxH,KAAKK,kBAAmB,GAC1FmH,KAAK2b,eAAgBpM,aAAcnW,YAAU,aAAc4G,KAAKxH,KAAK+W,gBAAiB,GACtFvP,KAAK2b,eAAgBljB,eAAgBW,YAAU,aAAc4G,KAAKxH,KAAKC,kBAAmB,GAC1FuH,KAAK2b,eAAgBld,aAAcrF,YAAU,aAAc4G,KAAKxH,KAAKiG,gBAAiB,IAM1Fud,EAAS/a,UAAUqU,gBAAkB,WACjC,OAAOtV,KAAKxH,KAAK8c,mBAMrB0G,EAAS/a,UAAU0wB,YAAc,WAG7B,IAAK,IAFDC,KACA1rB,EAAOlG,KAAKxH,KAAKm5B,cACZz5B,EAAI,EAAGe,EAAMiN,EAAK9N,OAAQF,EAAIe,EAAKf,IACnCgO,EAAKhO,GAAGsO,UAAUC,SAAS,iBAC5BmrB,EAAMv4B,KAAK6M,EAAKhO,IAGxB,OAAO05B,GAOX5V,EAAS/a,UAAUzE,sBAAwB,WACvC,OAAOwD,KAAKxH,KAAK6d,iBAMrB2F,EAAS/a,UAAU5E,gBAAkB,WACjC,OAAO2D,KAAKxH,KAAK4D,WAAWC,mBAMhC2f,EAAS/a,UAAUsJ,iBAAmB,WAClC,OAAOvK,KAAKxH,KAAK+R,oBAMrByR,EAAS/a,UAAU4wB,eAAiB,WAChC,OAAO7xB,KAAKxH,KAAKq5B,kBAOrB7V,EAAS/a,UAAUnC,cAAgB,SAAU/D,GACzC,OAAOiF,KAAKxH,KAAKsG,cAAc/D,IAOnCihB,EAAS/a,UAAU6wB,WAAa,SAAUzwB,GACtC,OAAOrB,KAAKxH,KAAKs5B,WAAWzwB,IAOhC2a,EAAS/a,UAAU8wB,oBAAsB,SAAU7hB,GAC/C,OAAOlQ,KAAKxH,KAAKu5B,oBAAoB7hB,IAMzC8L,EAAS/a,UAAUiG,kBAAoB,WAEnC,IAAK,IADD8qB,KACK7E,EAAK,EAAGC,EAAKptB,KAAK2gB,YAAawM,EAAKC,EAAGh1B,OAAQ+0B,IAAM,CAC1D,IAAI/iB,EAAMgjB,EAAGD,GACT/iB,EAAI6nB,SACJD,EAAK34B,KAAK+Q,GAGlB,OAAO4nB,GAKXhW,EAAS/a,UAAUmV,YAAc,WAC7BA,cAAYpW,KAAK8U,UAKrBkH,EAAS/a,UAAU4S,YAAc,WAC7BA,cAAY7T,KAAK8U,UAKrBkH,EAAS/a,UAAU6sB,QAAU,WACzB9tB,KAAKxH,KAAKs1B,WAOd9R,EAAS/a,UAAU8I,kBAAoB,WACnC,OAAO/J,KAAK2kB,gBAAgB1W,qBAMhC+N,EAAS/a,UAAUiN,qBAAuB,WACtC,OAAOlO,KAAK2kB,gBAAgBzW,wBAKhC8N,EAAS/a,UAAUoI,iBAAmB,SAAU6oB,GAC5ClyB,KAAK2kB,gBAAgBtb,iBAAiB6oB,IAK1ClW,EAAS/a,UAAUysB,eAAiB,SAAUyE,GACtC55B,oBAAkB45B,IAAcA,GAChCnyB,KAAKxH,KAAKL,QAAU6H,KAAKilB,eAAejlB,KAAK7H,SAC7C6H,KAAKxH,KAAKk1B,kBAGV1tB,KAAKxH,KAAKmjB,eAAgBxjB,QAAS6H,KAAKilB,eAAejlB,KAAK7H,WAAY,IAMhF6jB,EAAS/a,UAAUmxB,cAAgB,WAC/BpyB,KAAKxH,KAAK45B,iBAOdpW,EAAS/a,UAAU2e,sBAAwB,SAAUve,GACjD,GAA+B,UAA3BrB,KAAK9D,aAAaC,KAAkB,CAGpC,GAAI6D,KAAK3D,kBAAkB2D,KAAKmc,gBAAgB/jB,QAC5C4H,KAAK3D,kBAAkB2D,KAAKoc,gBAAgBhkB,QAAU4H,KAAK3D,kBAAkB2D,KAAKwR,cAAcpZ,OAAQ,CACxG,IAAIi6B,EAAYryB,KAAKxH,KAAK4D,WAAc,UAGxC,OAFA4D,KAAKxH,KAAK4D,WAAqB,WAAE,aAAci2B,QAC/CryB,KAAKsyB,cAAgBjxB,IAI7B,GAAIrB,KAAKkR,YAAa,CAClB,IAAIqhB,EAAUlxB,EAAO+H,QAAQ,kBAAkB2W,cAC3CxmB,EAASyG,KAAKxD,wBAAwB+1B,EAAQxqB,UAC9C1G,EAAOmF,UAAUC,SAAS,oBAC1BzG,KAAK2f,YAAY4S,EAASh5B,GAG1ByG,KAAK8f,UAAUyS,EAASh5B,OAG3B,CAEGA,GADAg5B,EAAUvyB,KAAKxH,KAAKs5B,WAAWzwB,IACdyI,QACjBzI,EAAOmF,UAAUC,SAAS,oBAC1BzG,KAAK2f,YAAY4S,EAAQ1zB,IAAKtF,GAG9ByG,KAAK8f,UAAUyS,EAAQ1zB,IAAKtF,KAQxCyiB,EAAS/a,UAAU6e,UAAY,SAAUjhB,EAAKtF,GAC1C,IAAI+L,EAAQtF,KAERoH,GAASzI,KADbpF,EAASyG,KAAKwyB,yBAAyB3zB,EAAKtF,GACjBsF,IAAKA,EAAKwI,QAAQ,GAC7CrH,KAAKsH,Qb5nEU,Ya4nEgBF,EAAM,SAAUqrB,GAC3C,IAAKA,EAAcprB,SACf/B,EAAMotB,eAAe,SAAU7zB,EAAKtF,KAC9BjC,EAAagO,IAAWjL,EAAUiL,MAAYtN,EAAgBsN,IAAQ,CACxE,IAAIqtB,GAAiBh0B,KAAMpF,EAAQsF,IAAKA,GACxCyG,EAAMgC,QAAQ6P,EAAiBwb,OAK/C3W,EAAS/a,UAAUuxB,yBAA2B,SAAU3zB,EAAKtF,GAUzD,OATIyG,KAAKsP,aAAkD,QAAnCtP,KAAKuP,aAAaC,cAA0BxP,KAAK4gB,aAAeroB,oBAAkBgB,KACrGjC,EAAa0I,MACdzG,EAASyG,KAAKpC,SAASC,OAAO,SAAUC,GACpC,OAAOA,EAAE5D,kBAGR3B,oBAAkBgB,KACvBA,EAASyG,KAAKxH,KAAKgE,wBAAwBqC,EAAIkJ,WAE5CxO,GAMXyiB,EAAS/a,UAAU0e,YAAc,SAAU9gB,EAAKtF,GAC5C,IAAI+L,EAAQtF,KAERoH,GAASzI,KADbpF,EAASyG,KAAKwyB,yBAAyB3zB,EAAKtF,GACjBsF,IAAKA,EAAKwI,QAAQ,GAC7CrH,KAAKsH,QbtpEW,aaspEgBF,EAAM,SAAUwrB,GAC5C,IAAKA,EAAevrB,OAAQ,CACxB/B,EAAMotB,eAAe,WAAY7zB,EAAKtF,GACtC,IAAIo5B,GAAiBh0B,KAAMpF,EAAQsF,IAAKA,GACnCvH,EAAagO,IACdA,EAAMgC,QAAQurB,EAAkBF,OAShD3W,EAAS/a,UAAU6xB,cAAgB,SAAU93B,GACzC,IAAMgF,KAAKsP,aAAkD,QAAnCtP,KAAKuP,aAAaC,cAA2BxP,KAAK1B,wBAA0BhH,EAAa0I,MAAO,CACtH,IAAIqN,EAAMrN,KAAKxH,KAAKhB,WAAWqG,OAAO,SAAUC,GAI5C,OAHIA,EAAE5D,iBAAmB4D,EAAE9C,QAAUA,IACjC8C,EAAE9D,UAAW,GAEV8D,EAAE5D,iBAAmB4D,EAAE9C,QAAUA,IAE5CgF,KAAK8f,UAAU,KAAMzS,OAMhB,CAHDA,EAAMrN,KAAK+yB,iBAAiB/3B,GAGhC,IAAK,IAFD6D,EAAMzF,YAAU,OAAQiU,GACxB9T,EAASH,YAAU,UAAWiU,GACzBnV,EAAI,EAAGA,EAAIqB,EAAOnB,OAAQF,IAC/B8H,KAAK8f,UAAUjhB,EAAI3G,GAAIqB,EAAOrB,MAI1C8jB,EAAS/a,UAAU8xB,iBAAmB,SAAU/3B,GAC5C,IAAIkL,EAAOlG,KAAKjB,UAAUlB,OAAO,SAAUC,GACvC,OAAkD,IAA1CA,EAAE8M,UAAUlM,QAAQ,QAAU1D,KAC9B8C,EAAEqL,cAAc,wBAA0BrL,EAAEqL,cAAc,wBAItE,OADYpQ,QADEiH,KAAKxD,wBAAwBqB,OAAO,SAAUC,GAAK,OAAOA,EAAE9C,QAAUA,GAAS8C,EAAE5D,kBACjEgM,KAAMA,IAOxC8V,EAAS/a,UAAU+xB,gBAAkB,SAAUh4B,GAC3C,IAAMgF,KAAKsP,aAAkD,QAAnCtP,KAAKuP,aAAaC,cAA2BxP,KAAK1B,wBAA0BhH,EAAa0I,MAAO,CACtH,IAAIzG,EAASyG,KAAKxH,KAAKhB,WAAWqG,OAAO,SAAUC,GAI/C,OAHIA,EAAE5D,iBAAmB4D,EAAE9C,QAAUA,IACjC8C,EAAE9D,UAAW,GAEV8D,EAAE5D,iBAAmB4D,EAAE9C,QAAUA,IAE5CgF,KAAK2f,YAAY,KAAMpmB,QAMvB,IAAK,IAHD8T,EAAMrN,KAAK+yB,iBAAiB/3B,GAC5BkL,EAAO9M,YAAU,OAAQiU,GACzBtU,EAAUK,YAAU,UAAWiU,GAC1BnV,EAAI,EAAGA,EAAIa,EAAQX,OAAQF,IAChC8H,KAAK2f,YAAYzZ,EAAKhO,GAAIa,EAAQb,KAQ9C8jB,EAAS/a,UAAUue,UAAY,WAC3Bxf,KAAKizB,kBAAkB,WAM3BjX,EAAS/a,UAAUwe,YAAc,WAC7Bzf,KAAKizB,kBAAkB,aAE3BjX,EAAS/a,UAAUgyB,kBAAoB,SAAUt3B,GAC7C,IAAIuK,EAAOlG,KAAKjB,UAAUlB,OAAO,SAAUC,GACvC,OAAOA,EAAEqL,cAAc,eAA4B,WAAXxN,EAAsB,WAAa,aAI/E,GAFAqE,KAAK4gB,aAAc,EACnB5gB,KAAK6gB,eAAgB,GACf7gB,KAAKsP,aAAkD,QAAnCtP,KAAKuP,aAAaC,cAA2BxP,KAAK1B,wBAA0BhH,EAAa0I,MAM/G,GALAA,KAAKpC,SAASC,OAAO,SAAUC,GACvBA,EAAE5D,kBACF4D,EAAE9D,SAAsB,aAAX2B,KAGjBuK,EAAK9N,OACM,aAAXuD,EAAwBqE,KAAK2f,YAAYzZ,EAAK,IAAMlG,KAAK8f,UAAU5Z,EAAK,QAEvE,CACD,IAAIgtB,EAAsBlzB,KAAKyP,kBAC/BzP,KAAK2b,eAAgBlM,mBAAmB,IAAQ,GAChDzP,KAAKxH,KAAK43B,YAAYF,SAAS,GAC/BlwB,KAAK2b,eAAgBlM,kBAAmByjB,IAAuB,QAInE,IAAK,IAAIh7B,EAAI,EAAGA,EAAIgO,EAAK9N,OAAQF,IAClB,aAAXyD,EAAwBqE,KAAK2f,YAAYzZ,EAAKhO,IAAM8H,KAAK8f,UAAU5Z,EAAKhO,IAGhF8H,KAAK4gB,aAAc,EACnB5gB,KAAK6gB,eAAgB,GAEzB7E,EAAS/a,UAAUyxB,eAAiB,SAAU/2B,EAAQkD,EAAKtF,EAAQ6b,GAC/D,IAAIqd,GAAkB5zB,IAAKA,EAAKF,KAAMpF,EAAQ4O,aAAetI,YAAalE,IACrErE,EAAa0I,OAAoB,WAAXrE,GAAuBqE,KAAK3E,iBACnD2E,KAAKmzB,oBAAoBV,GAE7B,IAAIpd,EAAWrV,KAAKjB,UACpB,GAAIiB,KAAKkR,YAAa,CAClB,IAAIhL,EAAOlG,KAAKsV,kBAAkBpP,KAClCmP,KAAc3O,MAAMnB,KAAKW,GAa7B,GAVI3N,oBAAkBsG,GAElBA,EAAMwW,EADKrV,KAAKxD,wBAAwBkC,QAAQnF,KAIpCsF,EAAI2L,aAAa,iBAE5BjS,oBAAkBsG,IACnBA,EAAI2M,aAAa,gBAA4B,WAAX7P,EAAsB,OAAS,WAE/DqE,KAAKsP,aAAkD,QAAnCtP,KAAKuP,aAAaC,cAA2BxP,KAAK1B,uBAA0BhH,EAAa0I,OAC3GhI,EAAgBgI,MAGnB,CACD,IAAIozB,OAAgB,EACpB,GAAe,WAAXz3B,EAAqB,CACrBy3B,EAAgB,YACXhe,IACD7b,EAAOS,UAAW,EAClBgG,KAAKic,mBAAmB1iB,EAAOM,UAAUG,SAAWT,EAAOS,UAE/D,IAAIwb,EAAY3W,EAAI4W,uBAAuB,sBAAsB,GACjE,GAAIld,oBAAkBid,GAClB,OAEJ1G,YAAU0G,GAAY,oBACtB7J,eAAa6J,GAAY,0BAExB,CACD4d,EAAgB,OACXhe,IACD7b,EAAOS,UAAW,EAClBgG,KAAKic,mBAAmB1iB,EAAOM,UAAUG,SAAWT,EAAOS,UAE3Dwb,EAAY3W,EAAI4W,uBAAuB,oBAAoB,GAC/D,GAAIld,oBAAkBid,GAClB,OAEJ1G,YAAU0G,GAAY,sBACtB7J,eAAa6J,GAAY,oBAE7B,IAAI6d,EAAahe,EAASxX,OAAO,SAAU4D,GACvC,OAAOA,EAAE+E,UAAUC,SAAS,uBAAyBlN,EAAOwB,MAAQ,SAAWxB,EAAOyB,MAAQ,MAE9F1D,EAAa0I,QAAU3F,EAAU2F,MACjCA,KAAKoD,aAAazH,EAAQkD,EAAKtF,EAAQ6b,GAGlCpd,EAAgBgI,OAAoB,aAAXrE,GAC1BqE,KAAKszB,YAAY33B,EAAQkD,EAAKtF,EAAQ6b,GAG9CpV,KAAK8Q,OAAO,qBAAuBuiB,WAAYA,EAAY13B,OAAQy3B,EAAe75B,OAAQA,EAAQsF,IAAKA,IACvGmB,KAAK0oB,aAAarT,QA1ClBrV,KAAK8Q,OAAOyiB,GAAmC53B,OAAQA,EAAQkD,IAAKA,EAAKtF,OAAQA,KA6CzFyiB,EAAS/a,UAAUkyB,oBAAsB,SAAUV,GAC/C,IAAIntB,EAAQtF,KACRwzB,EAAO,IAAI3K,WAEf4J,EAA2B,cAAIe,EAAKzK,QACpC,IAAIxvB,EAASk5B,EAAc9zB,KAC3BqB,KAAKsH,QAAQqiB,EAAwB8I,GACrCe,EAAKpJ,QAAQhX,KAAK,SAAUtV,GACxB,GAAI20B,EAActqB,UAAU/P,OAAQ,CAGhC,IAAK,IAFDyf,EAAevS,EAAc,SAC7BvK,EAAQ,EACH7C,EAAI,EAAGA,EAAI2f,EAAYzf,OAAQF,IACpC,GAAI2f,EAAY3f,GAAG+E,WAAa1D,EAAO0D,SAAU,CAC7ClC,EAAQ7C,EACR,MAOH,IAJDu7B,EAASl1B,WAAS,SAAU+G,EAAM9N,YAClC2Q,EAAY3N,EAAYi4B,EAActqB,WACtCurB,EAAWn6B,EAAO+L,EAAM9H,eACxBjE,EAAO+L,EAAM9H,cAAcpF,OAAS+P,EAAU/P,OAASmB,EAAO+L,EAAM9H,cAAcpF,OAA4B+P,EAAU/P,OAC5H,IAASF,EAAI,EAAGA,EAAIw7B,EAAUx7B,IACtBqB,EAAO+L,EAAM9H,eACbi2B,EAAO51B,OAAO,SAAUC,EAAG5F,GACnB4F,EAAEwH,EAAMjI,mBAAqB9D,EAAO+L,EAAMhI,YAC1Cm2B,EAAOl2B,OAAOrF,EAAG,KAIzBiQ,EAAUjQ,IACViQ,EAAUjQ,GAAG8C,MAAQzB,EAAOyB,MAAQ,EACpCmN,EAAUjQ,GAAG6C,MAAQia,KAAKC,KAAqB,IAAhBD,KAAKE,UACpC/M,EAAUjQ,GAAGyB,WAAa8C,YAAWlD,GACrC4O,EAAUjQ,GAAG+E,SAAWR,YAAW0L,EAAUjQ,WACtCiQ,EAAUjQ,GAAGyB,WAAWQ,oBACxBgO,EAAUjQ,GAAG+E,SAAStD,WAC7BwO,EAAUjQ,GAAGsG,eAAiBjF,EAAOM,SACrCsO,EAAUjQ,GAAG2B,SAAWgb,SAAOvP,EAAMwP,QAAQC,GAAK,UAClDrB,WAAS,sBAAwBvL,EAAUjQ,GAAG2B,SAAUsO,EAAUjQ,GAAIoN,KACjE/M,oBAAkB4P,EAAUjQ,GAAGoN,EAAM9H,gBACrC2K,EAAUjQ,GAAGoN,EAAMyN,kBAAoB/a,EAAgBsN,MACxD6C,EAAUjQ,GAAGgC,iBAAkB,GAEnC2d,EAAYta,OAAOxC,EAAQ,EAAI7C,EAAGqB,EAAO+L,EAAM9H,eAAiBjE,EAAO+L,EAAM9H,cAActF,GAAK,EAAI,EAAGiQ,EAAUjQ,KAGjH2f,EAAYta,OAAOxC,EAAQ,EAAI7C,EAAG,GAG1C2f,EAAY9c,GAAOuK,EAAM9H,cAAgB2K,EACzC0P,EAAY9c,GAAOZ,aAAegO,EAClC0P,EAAY9c,GAAOf,UAAW,EAC9B0Z,WAAS,sBAAwBmE,EAAY9c,GAAOlB,SAAUge,EAAY9c,GAAQuK,GAClF,IAAK,IAAI1K,EAAI,EAAGA,EAAI63B,EAActqB,UAAU/P,OAAQwC,IAChD64B,EAAOp6B,KAAKo5B,EAActqB,UAAUvN,IAG5C0K,EAAMokB,iBAAkB,EACxBpkB,EAAMwoB,UACNxoB,EAAMgC,QAAQ6P,EAAiBsb,MAGvCzW,EAAS/a,UAAUmC,aAAe,SAAUzH,EAAQkD,EAAKtF,EAAQ6b,GAC7D,IAAIC,EAAWrV,KAAKjB,UACpB,GAAIiB,KAAKkR,YAAa,CAClB,IAAIyiB,EAAS3zB,KAAKsV,kBAAkBpP,KACpCmP,KAAc3O,MAAMnB,KAAKouB,GAE7B,IAAIvsB,GAASzI,KAAMpF,EAAQsF,IAAKA,GAC5BqH,KAIJ,GAHAA,EAAOmP,EAASxX,OAAO,SAAU4D,GAC7B,OAAOA,EAAE0H,cAAc,kBAAoB5P,EAAOwB,MAAQ,SAAWxB,EAAOyB,MAAQ,MAEzE,WAAXW,EAAqB,CACrBqE,KAAK8Q,OAAOqB,GAAuB5Y,OAAQA,EAAQ2M,KAAMA,EAAM0P,UAAW/W,IAC1E,IAAI+0B,GAAW/0B,IAAKA,EAAKF,KAAMpF,GAC3B2M,EAAK9N,OAAS,GACd4H,KAAKsH,QAAQ6P,EAAiByc,QAIlC5zB,KAAK6zB,qBAAsBt6B,OAAQA,EAAQ2M,KAAMA,IACjDlG,KAAKsH,QAAQurB,EAAkBzrB,IAGvC4U,EAAS/a,UAAUqyB,YAAc,SAAU33B,EAAQkD,EAAKtF,EAAQ6b,GAC5D,IAGI0e,EAHA35B,EAAe6F,KAAKxD,wBAAwBqB,OAAO,SAAUC,GAC7D,OAAOA,EAAEU,iBAAmBjF,EAAOM,WAGnCwb,EAAWrV,KAAKjB,UACpB,GAAIiB,KAAKkR,YAAa,CAClB,IAAI6iB,EAAS/zB,KAAKsV,kBAAkBpP,KACpCmP,KAAc3O,MAAMnB,KAAKwuB,GAE7B,IAAIX,EAA4B,WAAXz3B,EAAuB,YAAc,OAEtDuK,GADQ/L,EAAa,GAAGR,WAAWoB,MAC5Bsa,EAASxX,OAAO,SAAU4D,GACjC,OAAOA,EAAE0H,cAAc,kBAAoB5P,EAAOwB,MAAQ,SAAWxB,EAAOyB,MAAQ,QAEpFgF,KAAKd,YAAcc,KAAKN,eAAiBM,KAAKb,sBAC9C20B,EAAc9zB,KAAKg0B,iBAAiBn2B,OAAO,SAAU4D,GACjD,OAAOA,EAAE0H,cAAc,kBAAoB5P,EAAOwB,MAAQ,SAAWxB,EAAOyB,MAAQ,OAG5F,IAAK,IAAI9C,EAAI,EAAGA,EAAIgO,EAAK9N,OAAQF,IAC7BgO,EAAKhO,GAAGgT,MAAMwE,QAAU0jB,EACnB76B,oBAAkBu7B,KACnBA,EAAY57B,GAAGgT,MAAMwE,QAAU0jB,GAEnCpzB,KAAK8Q,OAAO,kBAAoBjS,IAAKqH,EAAKhO,KACrCK,oBAAkB4B,EAAajC,GAAGiC,eAA6B,WAAXwB,IACrDpD,oBAAkB4B,EAAajC,GAAG8B,YAAaG,EAAajC,GAAG8B,WAC/DgG,KAAK0yB,eAAe/2B,EAAQuK,EAAKhO,GAAIiC,EAAajC,IAAI,GAClD8H,KAAKN,eAAiBM,KAAKP,kBAAoBlH,oBAAkBu7B,IACjE9zB,KAAK0yB,eAAe/2B,EAAQm4B,EAAY57B,GAAIiC,EAAajC,IAAI,KAK7E8jB,EAAS/a,UAAUynB,aAAe,SAAUxiB,GACxC,GAAIlG,KAAKqlB,eAAiBrlB,KAAKkR,YAE3B,IAAK,IADD+iB,EAAkB,EACb/7B,EAAI,EAAGgO,GAAQhO,EAAIgO,EAAK9N,OAAQF,IAAK,CAC1C,IAAIg8B,EAAUhuB,EAAKhO,GACW,SAA1Bg8B,EAAQhpB,MAAMwE,UACVwkB,EAAQ1tB,UAAUC,SAAS,aAC3BkF,eAAauoB,GAAU,YAEvBD,EAAkB,GAAM,GAAMC,EAAQ1tB,UAAUC,SAAS,iBAAoBytB,EAAQ1tB,UAAUC,SAAS,gBACxGqI,YAAUolB,GAAU,YAEnBA,EAAQ1tB,UAAUC,SAAS,iBAAoBytB,EAAQ1tB,UAAUC,SAAS,gBAC3EwtB,OAMpBjY,EAAS/a,UAAU4pB,sBAAwB,SAAUzjB,GACjD,GAAIpH,KAAKkR,YAAa,CAClB,IAAIhL,EAAOlG,KAAKsV,kBAAkBpP,KAClCA,KAAUQ,MAAMnB,KAAKW,GACrB,IAAK,IAAIhO,EAAI,EAAGA,EAAIgO,EAAK9N,OAAQF,IAAK,CAClC,IAAIi8B,EAAQn0B,KAAKxH,KAAK8c,kBAAkBpP,KAAKhO,GAAGsH,MAAMQ,KAAKP,iBACvDZ,EAAMqH,EAAKhO,GAEXk8B,GAAQz1B,KADEqB,KAAKxH,KAAK67B,gBAAgBn8B,GAAGyG,KAChBE,IAAKA,EAAKU,KAAM40B,EAAOx0B,OAAQK,KAAKJ,aAAaI,KAAKP,kBACjFO,KAAKX,aAAaC,WAAW80B,MAIzCpY,EAAS/a,UAAU4yB,oBAAsB,SAAU1e,EAAYC,GACtDA,IACDD,EAAW5b,OAAOS,UAAW,GAIjC,IAAK,IADDgT,EADA9G,EAAOiP,EAAWjP,KAEbhO,EAAI,EAAGA,EAAIgO,EAAK9N,OAAQF,IAAK,CAC9BkU,cAAcpM,KAAKuV,kBACnB5J,eAAazF,EAAKhO,IAAK,qBACvB4W,YAAU5I,EAAKhO,IAAK,uBAGpBgO,EAAKhO,GAAGgT,MAAMwE,QAAU,OAE5B,IAAI4kB,EAAepuB,EAAKhO,GAAGiR,cAAc,sBAIzC,GAHK5Q,oBAAkB+7B,IACnBt0B,KAAKxH,KAAKsd,gBAAgBye,SAASD,GAEnCpuB,EAAKhO,GAAGiR,cAAc,6CAA8C,CACpE,IAAIqrB,EAAgBtuB,EAAKhO,GAAGiR,cAAc,6CAC1C6D,EAAchN,KAAKkR,YAAclR,KAAKxH,KAAKgE,wBAAwB0J,EAAKhO,GAAG6P,UACvE/H,KAAKxH,KAAKkd,oBAAoBxP,EAAKhO,GAAGsS,aAAa,aAAa7L,MAC/DpG,oBAAkBi8B,IAAkBxnB,EAAYhT,WACjD2R,eAAa6oB,GAAgB,oBAC7B1lB,YAAU0lB,GAAgB,uBAI9B,IAAK,IAFDC,KACAC,EAAQ10B,KAAKjB,UACR41B,EAAM,EAAGA,EAAMD,EAAMt8B,OAAQu8B,IAC9BD,EAAMC,GAAKxrB,cAAc,kBAAoB6D,EAAYjS,MAAQ,SAAWiS,EAAYhS,MAAQ,KAChGy5B,EAAKp7B,KAAKq7B,EAAMC,IAGpBF,EAAKr8B,QAAU4U,EAAYhT,UAC3BgG,KAAK6zB,qBAAsBt6B,OAAQyT,EAAa9G,KAAMuuB,IAAQ,MAQ9EzY,EAAS/a,UAAU0iB,YAAc,WAC7B3jB,KAAKwI,GAAG,gBAAiBxI,KAAK40B,kBAAmB50B,MACjDA,KAAKxH,KAAKgQ,GAAG,cAAexI,KAAKskB,gBAAiBtkB,OAEtDgc,EAAS/a,UAAU2zB,kBAAoB,SAAUC,GAC7C70B,KAAK+R,YAAc8iB,GAKvB7Y,EAAS/a,UAAU+sB,eAAiB,WAC5BhuB,KAAK8I,cAGT9I,KAAK+I,IAAI,gBAAiB/I,KAAK40B,mBAC/B50B,KAAKxH,KAAKuQ,IAAI,cAAe/I,KAAKskB,mBAgBtCtI,EAAS/a,UAAU6zB,eAAiB,SAAU3F,EAAW4F,EAAgBC,EAAaC,EAAWC,EAAWC,EAAcC,EAAmBC,GACzIr1B,KAAKxH,KAAKs8B,eAAe3F,EAAW4F,EAAgBC,EAAaC,EAAWC,EAAWC,EAAcC,EAAmBC,IAM5HrZ,EAAS/a,UAAUq0B,eAAiB,WAChCt1B,KAAKxH,KAAK88B,kBASdtZ,EAAS/a,UAAUs0B,0BAA4B,SAAUrlB,EAAOslB,GAC5Dx1B,KAAKxH,KAAK+8B,0BAA0BrlB,EAAOslB,IAQ/CxZ,EAAS/a,UAAUif,UAAY,SAAUnlB,EAAO06B,GAC5Cz1B,KAAKxH,KAAK0nB,UAAUnlB,EAAO06B,IAO/BzZ,EAAS/a,UAAUy0B,WAAa,SAAUxpB,GACtClM,KAAKxH,KAAKk9B,WAAWxpB,IAMzB8P,EAAS/a,UAAUmf,eAAiB,WAChCpgB,KAAKxH,KAAK4nB,kBAMdpE,EAAS/a,UAAU4G,KAAO,SAAUjC,GAChC5F,KAAKukB,gBAAgB1c,KAAKjC,IAQ9BoW,EAAS/a,UAAU6G,MAAQ,SAAUnJ,EAAMoJ,EAAUC,GACjDhI,KAAKukB,gBAAgBzc,MAAMnJ,EAAMoJ,EAAUC,IAQ/CgU,EAAS/a,UAAU00B,WAAa,SAAUxV,EAAWsV,GACjDz1B,KAAKxH,KAAKm9B,WAAWxV,EAAWsV,IAMpCzZ,EAAS/a,UAAU20B,gBAAkB,WACjC,OAAO51B,KAAKxH,KAAKo9B,mBAQrB5Z,EAAS/a,UAAU40B,wBAA0B,SAAU9tB,EAAUoC,GAC7D,OAAOnK,KAAKxH,KAAKq9B,wBAAwB9tB,EAAUoC,IAMvD6R,EAAS/a,UAAU0M,mBAAqB,WACpC,OAAO3N,KAAKxH,KAAKmV,sBAOrBqO,EAAS/a,UAAU7B,qBAAuB,SAAUrE,GAChD,OAAOiF,KAAKxH,KAAK4G,qBAAqBrE,IAM1CihB,EAAS/a,UAAU+yB,eAAiB,WAChC,OAAOh0B,KAAKxH,KAAKw7B,kBAKrBhY,EAAS/a,UAAU9B,iBAAmB,WAClC,OAAOa,KAAK81B,eAAe91B,KAAK7H,QAAS,IAE7C6jB,EAAS/a,UAAU60B,eAAiB,SAAU9D,EAAM+D,GAChD,IAAK,IAAI79B,EAAI,EAAGe,EAAM+4B,EAAK55B,OAAQF,EAAIe,EAAKf,IACpC85B,EAAK95B,GAAGC,QACR49B,EAAM/1B,KAAK81B,eAAe9D,EAAK95B,GAAGC,QAAS49B,GAGvC/D,EAAK95B,GAAG89B,UACRD,IAIZ,OAAOA,GAMX/Z,EAAS/a,UAAUoF,sBAAwB,WACvC,OAAOrG,KAAKxH,KAAK6N,yBAMrB2V,EAAS/a,UAAUg1B,0BAA4B,WAC3C,OAAOj2B,KAAKxH,KAAKy9B,6BAOrBja,EAAS/a,UAAU4F,mBAAqB,WACpC,OAAO7G,KAAKxH,KAAKqO,sBAMrBmV,EAAS/a,UAAU+U,cAAgB,WAC/B,OAASkgB,WAAYl2B,KAAKxH,KAAKwd,gBAAiBmgB,WAAYn2B,KAAKqjB,aAKrErH,EAAS/a,UAAUm1B,YAAc,SAAUC,EAAaC,EAASxH,GAC7D9uB,KAAKu2B,qBAAqBH,YAAYC,EAAaC,EAASxH,IAEhE,IAAIzS,EAkXJ,OAjXAlb,IACIc,WAAS,IACV+Z,EAAS/a,UAAW,kBAAc,GACrCE,IACIc,WAAS,IACV+Z,EAAS/a,UAAW,qBAAiB,GACxCE,IACIc,WAAS,aACV+Z,EAAS/a,UAAW,gBAAY,GACnCE,IACIc,gBACD+Z,EAAS/a,UAAW,eAAW,GAClCE,IACIc,WAAS,OACV+Z,EAAS/a,UAAW,oBAAgB,GACvCE,IACIc,WAAS,OACV+Z,EAAS/a,UAAW,uBAAmB,GAC1CE,IACIc,WAAS,IACV+Z,EAAS/a,UAAW,uBAAmB,GAC1CE,IACIc,WAAS,OACV+Z,EAAS/a,UAAW,iBAAa,GACpCE,IACIc,WAAS,OACV+Z,EAAS/a,UAAW,uBAAmB,GAC1CE,IACIc,YAAS,IACV+Z,EAAS/a,UAAW,yBAAqB,GAC5CE,IACIc,WAAS,OACV+Z,EAAS/a,UAAW,0BAAsB,GAC7CE,IACIc,YAAS,IACV+Z,EAAS/a,UAAW,2BAAuB,GAC9CE,IACIc,gBACD+Z,EAAS/a,UAAW,kBAAc,GACrCE,IACIc,cACD+Z,EAAS/a,UAAW,aAAS,GAChCE,IACIc,cACD+Z,EAAS/a,UAAW,kBAAc,GACrCE,IACIc,WAAS,aACV+Z,EAAS/a,UAAW,iBAAa,GACpCE,IACIc,YAAS,IACV+Z,EAAS/a,UAAW,mBAAe,GACtCE,IACIc,YAAS,IACV+Z,EAAS/a,UAAW,yBAAqB,GAC5CE,IACIc,YAAS,IACV+Z,EAAS/a,UAAW,qBAAiB,GACxCE,IACIq1B,aAAYn0B,IACb2Z,EAAS/a,UAAW,wBAAoB,GAC3CE,IACIc,YAAS,IACV+Z,EAAS/a,UAAW,uBAAmB,GAC1CE,IACIc,YAAS,IACV+Z,EAAS/a,UAAW,qBAAiB,GACxCE,IACIc,YAAS,IACV+Z,EAAS/a,UAAW,0BAAsB,GAC7CE,IACIq1B,aAAYvc,KACb+B,EAAS/a,UAAW,oBAAgB,GACvCE,IACIq1B,aAAYC,oBACbza,EAAS/a,UAAW,uBAAmB,GAC1CE,IACIc,cACD+Z,EAAS/a,UAAW,qBAAiB,GACxCE,IACIc,YAAS,IACV+Z,EAAS/a,UAAW,sBAAkB,GACzCE,IACIc,YAAS,IACV+Z,EAAS/a,UAAW,yBAAqB,GAC5CE,IACIc,YAAS,IACV+Z,EAAS/a,UAAW,oBAAgB,GACvCE,IACIc,YAAS,IACV+Z,EAAS/a,UAAW,yBAAqB,GAC5CE,IACIq1B,aAAYza,KACbC,EAAS/a,UAAW,oBAAgB,GACvCE,IACIiB,gBAAewZ,KAChBI,EAAS/a,UAAW,kBAAc,GACrCE,IACIq1B,aAAY3a,KACbG,EAAS/a,UAAW,oBAAgB,GACvCE,IACIc,YAAS,IACV+Z,EAAS/a,UAAW,sBAAkB,GACzCE,IACIc,cACD+Z,EAAS/a,UAAW,sBAAkB,GACzCE,IACIq1B,aAAYr0B,IACb6Z,EAAS/a,UAAW,sBAAkB,GACzCE,IACIq1B,aAAYxnB,KACbgN,EAAS/a,UAAW,sBAAkB,GACzCE,IACIc,cACD+Z,EAAS/a,UAAW,eAAW,GAClCE,IACIc,cACD+Z,EAAS/a,UAAW,uBAAmB,GAC1CE,IACIc,WAAS,YACV+Z,EAAS/a,UAAW,iBAAa,GACpCE,IACIc,cACD+Z,EAAS/a,UAAW,wBAAoB,GAC3CE,IACIc,cACD+Z,EAAS/a,UAAW,uBAAmB,GAC1CE,IACIc,cACD+Z,EAAS/a,UAAW,mBAAe,GACtCE,IACIc,WAAS,WACV+Z,EAAS/a,UAAW,yBAAqB,GAC5CE,IACIc,WAAS,OACV+Z,EAAS/a,UAAW,iBAAa,GACpCE,IACIc,YAAS,IACV+Z,EAAS/a,UAAW,oBAAgB,GACvCE,IACIc,YAAS,IACV+Z,EAAS/a,UAAW,qBAAiB,GACxCE,IACIc,YAAS,IACV+Z,EAAS/a,UAAW,mBAAe,GACtCE,IACIc,YAAS,IACV+Z,EAAS/a,UAAW,sBAAkB,GACzCE,IACIc,WAAS,SACV+Z,EAAS/a,UAAW,cAAU,GACjCE,IACIc,WAAS,SACV+Z,EAAS/a,UAAW,aAAS,GAChCE,IACIc,YAAS,IACV+Z,EAAS/a,UAAW,4BAAwB,GAC/CE,IACIc,WAAS,QACV+Z,EAAS/a,UAAW,uBAAmB,GAC1CE,IACIu1B,WACD1a,EAAS/a,UAAW,eAAW,GAClCE,IACIu1B,WACD1a,EAAS/a,UAAW,YAAQ,GAC/BE,IACIu1B,WACD1a,EAAS/a,UAAW,iBAAa,GACpCE,IACIu1B,WACD1a,EAAS/a,UAAW,gBAAY,GACnCE,IACIu1B,WACD1a,EAAS/a,UAAW,kBAAc,GACrCE,IACIu1B,WACD1a,EAAS/a,UAAW,iBAAa,GACpCE,IACIu1B,WACD1a,EAAS/a,UAAW,gBAAY,GACnCE,IACIu1B,WACD1a,EAAS/a,UAAW,iBAAa,GACpCE,IACIu1B,WACD1a,EAAS/a,UAAW,mBAAe,GACtCE,IACIu1B,WACD1a,EAAS/a,UAAW,sBAAkB,GACzCE,IACIu1B,WACD1a,EAAS/a,UAAW,iBAAa,GACpCE,IACIu1B,WACD1a,EAAS/a,UAAW,gBAAY,GACnCE,IACIu1B,WACD1a,EAAS/a,UAAW,mBAAe,GACtCE,IACIu1B,WACD1a,EAAS/a,UAAW,mBAAe,GACtCE,IACIu1B,WACD1a,EAAS/a,UAAW,sBAAkB,GACzCE,IACIu1B,WACD1a,EAAS/a,UAAW,yBAAqB,GAC5CE,IACIu1B,WACD1a,EAAS/a,UAAW,uBAAmB,GAC1CE,IACIu1B,WACD1a,EAAS/a,UAAW,gBAAY,GACnCE,IACIu1B,WACD1a,EAAS/a,UAAW,qBAAiB,GACxCE,IACIu1B,WACD1a,EAAS/a,UAAW,iBAAa,GACpCE,IACIu1B,WACD1a,EAAS/a,UAAW,yBAAqB,GAC5CE,IACIu1B,WACD1a,EAAS/a,UAAW,uBAAmB,GAC1CE,IACIu1B,WACD1a,EAAS/a,UAAW,yBAAqB,GAC5CE,IACIu1B,WACD1a,EAAS/a,UAAW,oBAAgB,GACvCE,IACIu1B,WACD1a,EAAS/a,UAAW,uBAAmB,GAC1CE,IACIu1B,WACD1a,EAAS/a,UAAW,qBAAiB,GACxCE,IACIc,YAAS,IACV+Z,EAAS/a,UAAW,sBAAkB,GACzCE,IACIu1B,WACD1a,EAAS/a,UAAW,oBAAgB,GACvCE,IACIu1B,WACD1a,EAAS/a,UAAW,mBAAe,GACtCE,IACIu1B,WACD1a,EAAS/a,UAAW,sBAAkB,GACzCE,IACIu1B,WACD1a,EAAS/a,UAAW,qBAAiB,GACxCE,IACIu1B,WACD1a,EAAS/a,UAAW,sBAAkB,GACzCE,IACIu1B,WACD1a,EAAS/a,UAAW,qBAAiB,GACxCE,IACIu1B,WACD1a,EAAS/a,UAAW,sBAAkB,GACzCE,IACIu1B,WACD1a,EAAS/a,UAAW,uBAAmB,GAC1CE,IACIu1B,WACD1a,EAAS/a,UAAW,oBAAgB,GACvCE,IACIu1B,WACD1a,EAAS/a,UAAW,uBAAmB,GAC1CE,IACIu1B,WACD1a,EAAS/a,UAAW,sBAAkB,GACzCE,IACIu1B,WACD1a,EAAS/a,UAAW,mBAAe,GACtCE,IACIu1B,WACD1a,EAAS/a,UAAW,gBAAY,GACnCE,IACIu1B,WACD1a,EAAS/a,UAAW,kBAAc,GACrCE,IACIu1B,WACD1a,EAAS/a,UAAW,uBAAmB,GAC1CE,IACIu1B,WACD1a,EAAS/a,UAAW,kBAAc,GACrCE,IACIu1B,WACD1a,EAAS/a,UAAW,kBAAc,GACrCE,IACIu1B,WACD1a,EAAS/a,UAAW,sBAAkB,GACzCE,IACIu1B,WACD1a,EAAS/a,UAAW,qBAAiB,GACxCE,IACIu1B,WACD1a,EAAS/a,UAAW,mBAAe,GACtCE,IACIu1B,WACD1a,EAAS/a,UAAW,oBAAgB,GACvCE,IACIu1B,WACD1a,EAAS/a,UAAW,uBAAmB,GAC1CE,IACIu1B,WACD1a,EAAS/a,UAAW,uBAAmB,GAC1CE,IACIu1B,WACD1a,EAAS/a,UAAW,wBAAoB,GAC3CE,IACIu1B,WACD1a,EAAS/a,UAAW,kBAAc,GACrCE,IACIu1B,WACD1a,EAAS/a,UAAW,mBAAe,GACtCE,IACIu1B,WACD1a,EAAS/a,UAAW,eAAW,GAClCE,IACIu1B,WACD1a,EAAS/a,UAAW,oBAAgB,GACvCE,IACIu1B,WACD1a,EAAS/a,UAAW,0BAAsB,GAC7CE,IACIu1B,WACD1a,EAAS/a,UAAW,eAAW,GAClCE,IACIc,YAAU,IACX+Z,EAAS/a,UAAW,wBAAoB,GAC3CE,IACIq1B,aAAYvnB,KACb+M,EAAS/a,UAAW,yBAAqB,GAC5CE,IACIc,YAAS,IACV+Z,EAAS/a,UAAW,wBAAoB,GAC3CE,IACIc,YAAS,IACV+Z,EAAS/a,UAAW,sBAAkB,GACzCE,IACIu1B,WACD1a,EAAS/a,UAAW,wBAAoB,GAC3CE,IACIu1B,WACD1a,EAAS/a,UAAW,8BAA0B,GACjDE,IACIu1B,WACD1a,EAAS/a,UAAW,0BAAsB,GAC7CE,IACIu1B,WACD1a,EAAS/a,UAAW,gCAA4B,GACnDE,IACIu1B,WACD1a,EAAS/a,UAAW,yBAAqB,GAC5CE,IACIu1B,WACD1a,EAAS/a,UAAW,2BAAuB,GAC9CE,IACIu1B,WACD1a,EAAS/a,UAAW,uBAAmB,GAC1CE,IACIu1B,WACD1a,EAAS/a,UAAW,yBAAqB,GAC5C+a,EAAWK,EAAalb,IACpBw1B,yBACD3a,IAEL4a,aChmGEC,GAAyB,WAIzB,SAASA,EAAQt/B,EAAQ01B,GACrB7e,OAAKC,OAAOyoB,WACZ92B,KAAKzI,OAASA,EACdyI,KAAKuI,mBA4CT,OAtCAsuB,EAAQ51B,UAAUgH,cAAgB,WAC9B,MAAO,WAKX4uB,EAAQ51B,UAAUsH,iBAAmB,WACjCvI,KAAKzI,OAAOiR,GAAG,iBAAkBxI,KAAK+2B,cAAe/2B,OAEzD62B,EAAQ51B,UAAU4H,oBAAsB,WAChC7I,KAAKzI,OAAOuR,aAGhB9I,KAAKzI,OAAOwR,IAAI,iBAAkB/I,KAAK+2B,gBAO3CF,EAAQ51B,UAAUiH,QAAU,WACxBlI,KAAK6I,uBAETguB,EAAQ51B,UAAU81B,cAAgB,WAK9B,IAAK,IAFDC,EADA/J,EAAajtB,KAAKzI,OAAkB,YAAEyI,KAAKzI,OAAOkI,iBAElDw3B,EAAcj3B,KAAKzI,OAAOqI,aACrBs3B,EAAI,EAAGA,EAAID,EAAY7+B,OAAQ8+B,IAAK,CAGzC,GAFsB99B,YAAU,QAAS6zB,KACjB7zB,YAAU,QAAS69B,EAAYC,IACZ,CACvCF,EAAYE,EACZ,OAGRl3B,KAAKzI,OAAOokB,eAAgBlc,gBAAiBu3B,IAAa,IAEvDH,KCnDPM,GAAwB,WAIxB,SAASA,EAAO5/B,GACZ6W,OAAKC,OAAO+oB,UACZp3B,KAAKzI,OAASA,EA4BlB,OArBA4/B,EAAOl2B,UAAUyd,eAAiB,SAAU2Y,GACxCr3B,KAAKzI,OAAOiB,KAAKkmB,eAAe2Y,IAMpCF,EAAOl2B,UAAUgH,cAAgB,WAC7B,MAAO,UAOXkvB,EAAOl2B,UAAUiH,QAAU,WACnBlI,KAAKzI,OAAOuR,aAGhB9I,KAAKzI,OAAOiB,KAAKomB,aAAa1W,WAE3BivB,KC5BPG,GAAuB,WAKvB,SAASA,EAAM//B,GAEXyI,KAAKu3B,SAAU,EAEfv3B,KAAKw3B,oBAAqB,EAE1Bx3B,KAAKy3B,eAAgB,EACrBrpB,OAAKC,OAAOqpB,SACZ13B,KAAKzI,OAASA,EACdyI,KAAKuI,mBA67BT,OA37BA+uB,EAAMr2B,UAAU02B,0BAA4B,SAAU5iB,GAYlD,OATI/U,KAAKzI,OAAOC,sBAAsBC,eAAe4C,EAAU2F,KAAKzI,QAC3CyI,KAAKzI,OAAOiB,KAAKhB,WAAWA,WAAWsE,KAGvCkE,KAAKzI,OAAOiB,KAAKhB,YAEVqG,OAAO,SAAUC,GAC7C,OAAOA,EAAEjE,WAAakb,KAO9BuiB,EAAMr2B,UAAUsH,iBAAmB,WAC/BvI,KAAKzI,OAAOiR,GAAGsjB,GAAmB9rB,KAAK43B,WAAY53B,MACnDA,KAAKzI,OAAOiR,GAAGwjB,GAAmBhsB,KAAKoF,WAAYpF,MACnDA,KAAKzI,OAAOiR,GAAGqvB,GAAgB73B,KAAK83B,UAAW93B,MAC/CA,KAAKzI,OAAOiR,GAAGuvB,GAAmB/3B,KAAKg4B,YAAah4B,OAKxDs3B,EAAMr2B,UAAUm1B,YAAc,SAAUC,EAAaC,EAASxH,GAC1D,IAAImJ,EAAOj4B,KAAKzI,OACZ8+B,EAAY,GACK,UAAbvH,IACA9uB,KAAKk4B,aAAe,cAEP,UAAbpJ,IACA9uB,KAAKk4B,aAAe,iBAEP,UAAbpJ,IACA9uB,KAAKk4B,aAAe,iBAGxB,IAAK,IADDv5B,KACKzG,EAAI,EAAGA,EAAIm+B,EAAYj+B,OAAQF,IACpCyG,EAAKzG,GAAK8H,KAAKzI,OAAOiF,wBAAwB65B,EAAYn+B,IAE9D,IACIkP,GACAzI,KAAMA,EACNw5B,UAAW7B,GAEVt+B,EAAgBgI,KAAKzI,SACtByI,KAAKo4B,SAAShxB,GAND,GASb6wB,EAAKzf,cACLyf,EAAKr6B,SAAWoC,KAAKq4B,aAAaJ,EAAKr6B,WAE3CoC,KAAKzI,OAAOu2B,WAMpBwJ,EAAMr2B,UAAUo3B,aAAe,SAAUxgB,GAUrC,IAAK,IATD3a,EAAU,SAAUhF,GAEpB,GADA2f,EAAY3f,GAAG6C,MAAQ7C,GAClBK,oBAAkBsf,EAAY3f,GAAGyB,YAAa,CAC/C,IAAI2+B,EAAgBzgB,EAAYha,OAAO,SAAUc,GAC7C,OAAOA,EAAK9E,WAAage,EAAY3f,GAAGsG,iBACzC,GACHqZ,EAAY3f,GAAGyB,WAAWoB,MAAQu9B,EAAcv9B,QAG/C7C,EAAI,EAAGA,EAAI2f,EAAYzf,OAAQF,IACpCgF,EAAQhF,GAEZ,OAAO2f,GAEXyf,EAAMr2B,UAAU62B,UAAY,SAAUh6B,GAGlC,IAAK,IAFDy6B,EACAC,EAAc16B,EAAE/E,QACXb,EAAI4F,EAAE/E,QAAQX,OAAS,EAAGF,GAAK,EAAGA,IAEvC,IADAqgC,EAAgBC,EAAYtgC,IACVsG,eAAgB,CAC9B,IAAIjF,EAASi/B,EAAY36B,OAAO,SAAUc,GACtC,OAAOA,EAAK9E,WAAa0+B,EAAc/5B,iBAE3C,GAAIjF,EAAOnB,OAAQ,CACf,IAAI2C,EAAQxB,EAAO,GAAGY,aAAauE,QAAQ65B,GACvC7+B,EAAeH,EAAO,IACX,IAAXwB,IACArB,EAAaS,aAAaoD,OAAOxC,EAAO,GACnCrB,EAAaS,aAAa/B,SAC3BsB,EAAaQ,iBAAkB,EAC/BR,EAAa+W,yBAA0B,GAE3CzQ,KAAKw3B,oBAAqB,IAK1C,GAAIj/B,oBAAkByH,KAAKzI,OAAOC,cAAgBwI,KAAKzI,OAAOC,WAAWY,OAKhE,CAAA,IAHDqgC,EADAR,EAAOj4B,KAAKzI,OAEZmhC,EAAgB56B,EAAE/E,QAEtB,IAASb,EADQ4F,EAAE/E,QAAQX,OACD,EAAGF,GAAK,EAAGA,IAAK,EACtCugC,EAAkBC,EAAcxgC,IAEX+E,SAASE,eAAe86B,EAAKz6B,gBAC9Ci7B,EAAgBx7B,SAASg7B,EAAKz6B,kBAE9BjF,oBAAkB0/B,EAAKzgC,cACvBygC,EAAKzgC,eAETygC,EAAKzgC,WAAW+F,OAPG,EAOkB,EAAGk7B,EAAgBx7B,UACxDg7B,EAAKtc,eAAgBnkB,WAAYygC,EAAKzgC,aAAc,QAGvD,CACD,IAASU,EAAI,EAAGA,EAAIsgC,EAAYpgC,OAAQF,IACpCwb,WAAS,sBAAwB8kB,EAAYtgC,GAAG2B,SAAU2+B,EAAYtgC,GAAI8H,KAAKzI,QAEnF,IAAI6P,GAASzI,KAAMb,EAAE/E,QAASo/B,UAAWr6B,EAAEw4B,SACvCt2B,KAAKzI,OAAOC,sBAAsBC,cAClCuI,KAAK4X,aAAe5X,KAAKzI,OAAOC,WAAWA,WAAWsE,KAGtDkE,KAAK4X,aAAe5X,KAAKzI,OAAOiB,KAAKhB,WAEzCwI,KAAKo4B,SAAShxB,KAGtBkwB,EAAMr2B,UAAU+2B,YAAc,SAAUl6B,GACpC,IAAK,IAAI5F,EAAI,EAAGA,EAAI4F,EAAE/E,QAAQX,OAAQF,IAClC8H,KAAKu4B,cAAgBz6B,EAAE/E,QAAQb,IAC3B8H,KAAKu4B,cAAcr+B,iBAAmB8F,KAAKu4B,cAAc5+B,aAE8B,IADvFqG,KAAKzI,OAAOiB,KAAKhB,WACbkH,QAAQsB,KAAK23B,0BAA0B33B,KAAKu4B,cAAc/5B,gBAAgB,KACjD,IAA7BwB,KAAKu4B,cAAcv9B,QACnBgF,KAAK24B,iBAIjBrB,EAAMr2B,UAAU23B,sBAAwB,WACpC,IAGIC,EACAC,EAJAP,EAAgBv4B,KAAKu4B,cACrBQ,EAAgB/4B,KAAK+4B,cACrBC,EAAQh5B,KAAKzI,OASjB,KALIshC,EADA74B,KAAKzI,OAAOC,sBAAsBC,eAAe4C,EAAU2F,KAAKzI,QAC/CyhC,EAAMxhC,WAAWA,WAAWsE,KAG5Bk9B,EAAMxhC,aAEHe,oBAAkBwgC,IAAmBA,EAAcp/B,YAiBtE,IAAKqG,KAAKzI,OAAO8F,kBAAqB9E,oBAAkBwgC,IAAkBA,EAAcp/B,aAC/D,eAAtBqG,KAAKk4B,cAAuD,kBAAtBl4B,KAAKk4B,cAGtC,CAAA,IADD/9B,EADS6F,KAAK23B,0BAA0BoB,EAAcv6B,gBAAgB,GAChDrE,aAC1B,IAASjC,EAAI,EAAGA,EAAIiC,EAAa/B,OAAQF,IACrC6gC,EAAcp/B,WAAWsD,SAAS+C,KAAKzI,OAAOiG,cAActF,GAAKiC,EAAajC,GAAG+E,cAtBL,CACpF,IAAK,IAAI/E,EAAI,EAAGA,EAAIgB,OAAOC,KAAK0/B,GAAgBzgC,OAAQF,IAChD2gC,EAAe3gC,GAAG8H,KAAKzI,OAAOiG,gBAAkBu7B,EAAc97B,SAAS+C,KAAKzI,OAAOiG,gBACnFs7B,EAAM5gC,GAGY,eAAtB8H,KAAKk4B,aACAl4B,KAAKzI,OAAO+F,WACbu7B,EAAet7B,OAAOu7B,EAAK,EAAGP,EAAct7B,UAGrB,kBAAtB+C,KAAKk4B,eACLl4B,KAAKzI,OAAO+F,WACbu7B,EAAet7B,OAAOu7B,EAAM,EAAG,EAAGP,EAAct7B,WAaxD+C,KAAKzI,OAAO8F,kBACRk7B,EAAc5+B,WACY,eAAtBqG,KAAKk4B,cAAuD,kBAAtBl4B,KAAKk4B,cAC3CK,EAAcv4B,KAAKzI,OAAO8F,iBAAmB07B,EAAc/4B,KAAKzI,OAAO8F,iBACvEk7B,EAAct7B,SAAS+C,KAAKzI,OAAO8F,iBAAmB07B,EAAc/4B,KAAKzI,OAAO8F,mBAGhFk7B,EAAcv4B,KAAKzI,OAAO8F,iBAAmB07B,EAAc/4B,KAAKzI,OAAO+F,WACvEi7B,EAAct7B,SAAS+C,KAAKzI,OAAO8F,iBAAmB07B,EAAc/4B,KAAKzI,OAAO+F,aAIpFi7B,EAAct7B,SAAS+C,KAAKzI,OAAO8F,iBAAmB,KACtDk7B,EAAcv4B,KAAKzI,OAAO8F,iBAAmB,QAIzDi6B,EAAMr2B,UAAUg4B,qBAAuB,SAAUnkB,EAASokB,GACtD,IAAIC,EAAkC,kBAAtBn5B,KAAKk4B,aACjBl4B,KAAKzI,OAAOud,QAAQW,uBAAuB,qBAAqBrd,OAAS,GAAK0c,IACxD,IAArBA,EAAQ/M,UAAkBoxB,IAC3Bn5B,KAAKzI,OAAOud,QAAQW,uBAAuB,qBAAqB,GAAGyN,UAG3EoU,EAAMr2B,UAAUm4B,oBAAsB,SAAUtkB,EAASokB,GACrD,IAAIG,EAAavkB,IAAYA,EAAQtO,UAAUC,SAAS,eAAiBqO,EAAQtO,UAAUC,SAAS,mBAChG6yB,EAAiBxkB,IAAYukB,GAC7Br5B,KAAKzI,OAAOuH,cAAckB,KAAKzI,OAAOwH,UAAU3G,OAAS,GAAGoS,aAAa,cACrEsK,EAAQtK,aAAa,YACzB2uB,EAAYG,GAAwC,eAAtBt5B,KAAKk4B,aACnCl4B,KAAKzI,OAAOud,QAAQW,uBAAuB,oBAAoBrd,OAAS,GAAK0c,IAAYwkB,GAAkBH,IAC3Gn5B,KAAKzI,OAAOud,QAAQW,uBAAuB,oBAAoB,GAAGyN,UAG1EoU,EAAMr2B,UAAUs4B,WAAa,SAAU16B,EAAK9D,EAAOqM,GAC/C,IAAIoyB,EAASpyB,EAAK/F,OAAS+H,UAAQhC,EAAK/F,OAAQ,MAAQ,KACxDrB,KAAKk4B,kBAAejd,EACpB,IAAIwe,EAAoB,EACxBz5B,KAAKi5B,qBAAqBO,GAC1Bx5B,KAAKo5B,oBAAoBI,GACzB,IAAK,IAAIthC,EAAI,EAAGA,EAAIkP,EAAKlB,KAAK9N,OAAQF,KAC7BK,oBAAkBihC,IAAWA,EAAOhvB,aAAa,cAAgBpD,EAAKlB,KAAKhO,GAAGsS,aAAa,cACxFtB,eAAa9B,EAAK/F,OAAQ,mBAC9BrB,KAAKk4B,aAAe,UACpBl4B,KAAK05B,gBAIb,IAAIzB,EAAOj4B,KAAKzI,OACZoiC,EAAS,EAETC,EAAa3B,EAAK/V,SAAW+V,EAAK/V,QAAQ9pB,OAC1CyhC,SAASC,eAAe7B,EAAKnjB,QAAQC,GAAK,6BAA6BglB,aAAe,EAEtFC,EAAiBh6B,KAAKi6B,UAAUhC,EAAKnjB,SAErColB,EAAgBjC,EAAK1tB,mBAAmBwvB,aAAeC,EAAeG,IAAMP,EAC5EQ,EAAYnC,EAAKzG,aAAa6I,kBAAkBD,UAC/C7hC,oBAAkBihC,KACnBC,EAAoBD,EAAOc,UAAYF,GAS3C,IAEIG,IAPAZ,EADA1B,EAAKrnB,cACI/R,EAAI,GAAGk7B,aAGPN,EAAoBS,EAhBlB,GAkBUr7B,EAAI,GAAGk7B,aACHJ,GACH,EACtBa,EAAgBb,EAASY,EACzBE,EAAmBD,EAAgBD,EACnCG,EAAmBD,EAAmBF,EAGtCI,GAFOX,EAAeY,KACTxhC,YAAU,sBAAuBgO,GAC5ByzB,OAClBC,EAAeH,GAAQH,EACvBO,EAAsBJ,EAAOH,GAAiBG,GAAQF,EACtDO,EAAsBL,EAAOF,GAAoBE,GAAQD,EAC7D,GAAII,GAAgBC,GAAsBC,EAAoB,CAU1D,GATIF,GAAsC,YAAtB96B,KAAKk4B,eACrBl4B,KAAKi7B,oBACLj7B,KAAKk4B,aAAe,aACpBl4B,KAAKk7B,0BACLl7B,KAAKm7B,kBAAkB3B,GACvBx5B,KAAKo7B,kBACLp7B,KAAKo5B,oBAAoBI,GACzBx5B,KAAKq7B,kBAAkBj0B,EAAK/F,SAE5B05B,GAA4C,YAAtB/6B,KAAKk4B,aAA4B,CACvDl4B,KAAKk7B,0BACL,IAAIpmB,OAAU,EACVlL,KACJkL,EAAU1L,UAAQhC,EAAK/F,OAAQ,OAC/BuI,KAAgBlD,MAAMnB,KAAKuP,EAAQnO,iBAAiB,oDACrCvO,OAAS,GACpB4H,KAAKs7B,iBAAiB1xB,GAAY,EAAM,iBAE5C5J,KAAKu7B,iBAAiB/B,GACtBx5B,KAAKm7B,kBAAkB3B,GACvBx5B,KAAKk4B,aAAe,gBAEpB8C,GAA4C,YAAtBh7B,KAAKk4B,eAC3Bl4B,KAAKo7B,kBACLp7B,KAAKk7B,0BACLl7B,KAAKi7B,oBACLj7B,KAAKk4B,aAAe,gBACpBl4B,KAAKu7B,iBAAiB/B,GACtBx5B,KAAKi5B,qBAAqBO,GAC1Bx5B,KAAKq7B,kBAAkBj0B,EAAK/F,SAGpC,OAAOrB,KAAKk4B,cAEhBZ,EAAMr2B,UAAUg6B,kBAAoB,WAChC,IAAIO,MACJA,KAAgB90B,MAAMnB,KAAKvF,KAAKzI,OAAOud,QAAQnO,iBAAiB,oBACjDvO,OAAS,GACpB4H,KAAKs7B,iBAAiBE,GAAY,EAAO,kBAGjDlE,EAAMr2B,UAAUk6B,kBAAoB,SAAU9a,GAC1C,IAAIob,EAAOz7B,KAAKzI,OAAOud,QACnBmjB,EAAOj4B,KAAKzI,OAChB,GAAI8oB,GAAoC,IAAvBA,EAAUtY,WAAmBsY,EAAU7Z,UAAUC,SAAS,cAAe,CACtF,IAAIi1B,EAAM17B,KAAKzI,OAAOoT,cAAc,OAASC,UAAW,sBACpD+wB,EAAgB37B,KAAKzI,OAAOgT,mBAC5BqxB,EAAgB,EAChB3D,EAAK/V,UACL0Z,EAAgB3D,EAAKzI,cAAcqM,aAAa9B,cAEpD,IAAI+B,GAAgBvjC,oBAAkByH,KAAKzI,OAAOksB,gBAAgBC,UAC9DoY,IACAJ,EAAIxwB,MAAMivB,IAAMn6B,KAAKzI,OAAOiB,KAAKsc,QAAQW,uBAAuB,gBAAgB,GAAGskB,aAC7E6B,EAAgB,MAE1BF,EAAIxwB,MAAMC,MAAQ2wB,EAAeL,EAAKM,YAAc,KAChDN,EAAKM,YAAc/7B,KAAKg8B,iBAAmB,KAC1CL,EAAch1B,iBAAiB,sBAAsBvO,QACtDujC,EAAc1vB,YAAYyvB,KAItCpE,EAAMr2B,UAAUs6B,iBAAmB,SAAUU,GACzC,IAAI5C,EAAa4C,IAAcA,EAAUz1B,UAAUC,SAAS,eACxDw1B,EAAUz1B,UAAUC,SAAS,mBACjC,GAAIw1B,IAAc5C,GAAcr5B,KAAKzI,OAAOuH,cAAckB,KAAKzI,OAAOwH,UAAU3G,OAAS,GAAGoS,aAAa,cACrGyxB,EAAUzxB,aAAa,YAAa,CACpC,IAAI0xB,EAAel8B,KAAKzI,OAAOoT,cAAc,OAASC,UAAW,qBAC7DuxB,EAAiBn8B,KAAKzI,OAAOi6B,aACjC0K,EAAahxB,MAAMC,MAAQnL,KAAKzI,OAAOud,QAAQinB,YAAc/7B,KAAKg8B,iBAAmB,KAChFG,EAAex1B,iBAAiB,qBAAqBvO,SACtD+jC,EAAe31B,UAAUyE,IAAI,uBAC7BkxB,EAAelwB,YAAYiwB,GAC3BA,EAAahxB,MAAMkxB,OAASp8B,KAAKg8B,iBAAmB,QAIhE1E,EAAMr2B,UAAU+6B,eAAiB,WAC7B,IAAIK,EAAar8B,KAAKzI,OAAOi6B,aAAa6I,kBAC1C,OAAOgC,EAAWC,YAAcD,EAAWN,YAAcQ,SAAOC,oBAAsB,GAE1FlF,EAAMr2B,UAAUy4B,aAAe,WAC3B,IAAI+C,EAAW5C,SAASpkB,uBAAuB,qBAAqB,GAEpE,IADgBgnB,EAAS91B,iBAAiB,gBAAgBvO,SACvC4H,KAAKzI,OAAOksB,gBAAgBC,SAAU,CACrD,IAAIgZ,EAAM7C,SAASlvB,cAAc,OACjCnE,YAAUk2B,GAAM,wBAChBl2B,YAAUk2B,GAAM,UAAW,mBAC3B,IAAIC,EAAWF,EAAStzB,cAAc,eAClCyzB,EAAUH,EAAStzB,cAAc,cAAc4C,UAC/C4wB,IACAC,EAAUD,EAAS5wB,UACnB4wB,EAASE,WAAWC,YAAYH,IAEpCF,EAAStzB,cAAc,cAAc4C,UAAY,GACjD,IAAIgxB,EAAclD,SAASlvB,cAAc,QACzCoyB,EAAYnyB,UAAY,aACxBmyB,EAAY7xB,MAAM8xB,YAAc,OAChCD,EAAYhxB,UAAY6wB,EACxBH,EAAStzB,cAAc,cAAc8C,YAAYywB,GACjDD,EAAStzB,cAAc,cAAc8C,YAAY8wB,KAGzDzF,EAAMr2B,UAAUm6B,gBAAkB,WAC9B,IAAI6B,EAAYpD,SAAS1wB,cAAc,gBACnC8zB,GACAA,EAAU/Z,UAGlBoU,EAAMr2B,UAAUo6B,kBAAoB,SAAUh6B,GAEtB9I,oBAAkByH,KAAKzI,OAAOksB,gBAAgBC,UADlE,IAAI5O,EAEAlL,MAEJA,GADAkL,EAAU1L,UAAQ/H,EAAQ,UACAqF,MAAMnB,KAAKuP,EAAQnO,iBAAiB,uDAC/CvO,SACe,eAAtB4H,KAAKk4B,eACLl4B,KAAKs7B,iBAAiB1xB,GAAY,EAAM,aACpC5J,KAAKzI,OAAOud,QAAQW,uBAAuB,wBAAwBrd,OAAS,GAC5E4H,KAAKzI,OAAOud,QAAQW,uBAAuB,wBAAwB,GAAGyN,UAGpD,kBAAtBljB,KAAKk4B,cACLl4B,KAAKs7B,iBAAiB1xB,GAAY,EAAM,kBAIpD0tB,EAAMr2B,UAAUi6B,wBAA0B,WACtC,IAAIgC,MACJA,KAAYx2B,MAAMnB,KAAKvF,KAAKzI,OAAOud,QAAQnO,iBAAiB,+BACjDvO,SACP4H,KAAKs7B,iBAAiB4B,GAAQ,EAAO,gBACrCl9B,KAAKs7B,iBAAiB4B,GAAQ,EAAO,eAG7C5F,EAAMr2B,UAAUq6B,iBAAmB,SAAU97B,EAAOyL,EAAKL,GACrD,IAAK,IAAI1S,EAAI,EAAGe,EAAMuG,EAAMpH,OAAQF,EAAIe,EAAKf,IACrC+S,EACAzL,EAAMtH,GAAGsO,UAAUyE,IAAIL,GAGvBpL,EAAMtH,GAAGsO,UAAU0c,OAAOtY,IAItC0sB,EAAMr2B,UAAUg5B,UAAY,SAAUnlB,GAClC,IAAIqoB,EAAMroB,EAAQsoB,wBACdC,EAAOxD,SAASwD,KAChBC,EAAUzD,SAAS0D,gBACnBnD,EAAYt0B,OAAO03B,aAAeF,EAAQlD,WAAaiD,EAAKjD,UAC5DqD,EAAa33B,OAAO43B,aAAeJ,EAAQG,YAAcJ,EAAKI,WAC9DE,EAAYL,EAAQK,WAAaN,EAAKM,WAAa,EACnDC,EAAaN,EAAQM,YAAcP,EAAKO,YAAc,EACtDzD,EAAMgD,EAAIhD,IAAMC,EAAYuD,EAC5B/C,EAAOuC,EAAIvC,KAAO6C,EAAaG,EACnC,OAASzD,IAAKnlB,KAAK6oB,MAAM1D,GAAMS,KAAM5lB,KAAK6oB,MAAMjD,KAEpDtD,EAAMr2B,UAAU22B,WAAa,SAAUxwB,GACnC,IAAI6wB,EAAOj4B,KAAKzI,OACZumC,EAAe99B,KAAKzI,OAAOud,QAAQ3L,cAAc,sBACrD20B,EAAa5yB,MAAM6yB,OAAS,GAC5B,IAAIvE,EAASpyB,EAAK/F,OAAS+H,UAAQhC,EAAK/F,OAAQ,MAAQ,KACpD28B,EAASxE,EAASA,EAAOzxB,UAAY,EACrCywB,KACAO,EAAgBd,EAAKz7B,wBAAwBwhC,GAmBjD,GAlBAh+B,KAAKo7B,kBACLp7B,KAAKu3B,SAAU,EACVnwB,EAAKzI,KAAK,GAIX65B,EAAcpxB,EAAKzI,KAHnB65B,EAAYn/B,KAAK+N,EAAKzI,OAKV,IAAZq/B,EACAh+B,KAAKi+B,mBAAmBzF,EAAaO,IAGrC/4B,KAAKu3B,SAAU,EACfv3B,KAAK05B,iBAEJzB,EAAKxU,gBAAgBC,UAAY1jB,KAAKu3B,SACvCU,EAAK1B,qBAAqBgD,WAAWnyB,EAAKlB,KAAM83B,EAAQ52B,GAExD6wB,EAAKxU,gBAAgBC,SAAU,CAE/B,IADIwa,EAAch1B,eAAa9B,EAAK/F,OAAQ,gBACzB68B,EAAYnpB,KAAO/U,KAAKzI,OAAOksB,gBAAgBC,SAAU,CACvDwa,EAAYC,cAAc,GAChC5H,qBAAqBgD,WAAWnyB,EAAKlB,KAAM83B,EAAQ52B,IAGtE,GAAIA,EAAK/F,QAAU+H,UAAQhC,EAAK/F,OAAQ,IAAM42B,EAAKxU,gBAAgBC,UAAW,CAC1E,IAAIwa,GAAAA,EAAch1B,eAAa9B,EAAK/F,OAAQ,iBAExCy8B,EAAa5yB,MAAM6yB,OAAS,aAIxCzG,EAAMr2B,UAAUmE,WAAa,SAAUgC,GACnC,IAAI6wB,EAAOj4B,KAAKzI,OACX0gC,EAAKxU,gBAAgBC,UAsBlBtc,EAAK/F,QAAU+H,UAAQhC,EAAK/F,OAAQ,IAAM42B,EAAKxU,gBAAgBC,WAAaxa,eAAa9B,EAAK/F,OAAQ,eACtG6H,eAAa9B,EAAK/F,OAAQ,cAAc0T,KAAOkjB,EAAKxU,gBAAgBC,YACpEhQ,WAAS,eAAgB1T,KAAKk4B,aAAc9wB,GAC5C6wB,EAAK3wB,QhB7YA,UgB6YwBF,IACxBA,EAAKC,QAAU4wB,EAAKxU,gBAAgBC,WACrC1jB,KAAKo+B,aAAah3B,GACd6wB,EAAKzf,cACLyf,EAAKr6B,SAAWoC,KAAKq4B,aAAaJ,EAAKr6B,aA5B/CsL,eAAa9B,EAAK/F,OAAQ,eACtBrB,KAAKzI,OAAOud,QAAQ3L,cAAc,kBAClCnJ,KAAKk4B,aAAe,WAExBxkB,WAAS,eAAgB1T,KAAKk4B,aAAc9wB,GAC5C6wB,EAAK3wB,QhB1XA,UgB0XwBF,GACxBA,EAAKC,SACDrP,EAAgBgI,KAAKzI,SACtByI,KAAKo4B,SAAShxB,GAEd6wB,EAAKzf,cACLyf,EAAKr6B,SAAWoC,KAAKq4B,aAAaJ,EAAKr6B,WAE3Cq6B,EAAKnK,UACAv1B,oBAAkB0/B,EAAK1tB,mBAAmBpB,cAAc,wBACzD8uB,EAAK1tB,mBAAmBpB,cAAc,sBAAsB+Z,WAkB5EljB,KAAKk7B,0BACLl7B,KAAKi7B,oBACA1iC,oBAAkByH,KAAKzI,OAAOud,QAAQW,uBAAuB,qBAAqB,IAG7Eld,oBAAkByH,KAAKzI,OAAOud,QAAQW,uBAAuB,oBAAoB,KACvFzV,KAAKzI,OAAOud,QAAQW,uBAAuB,oBAAoB,GAAGyN,SAHlEljB,KAAKzI,OAAOud,QAAQW,uBAAuB,qBAAqB,GAAGyN,UAM3EoU,EAAMr2B,UAAUm9B,aAAe,SAAUh3B,GACrC,IAKIi3B,EALApG,EAAOj4B,KAAKzI,OAEZ8oB,EAAYjX,UAAQhC,EAAK/F,OAAQ,MACjCi9B,EAAcC,MAAMv+B,KAAKw+B,aAAane,IAAc,EAAIrgB,KAAKw+B,aAAane,GAC1E6d,EAAch1B,eAAa9B,EAAK/F,OAAQ,cAE5C,GAAI68B,GAAeA,EAAYnpB,KAAO/U,KAAKzI,OAAOksB,gBAAgBC,WAAapsB,EAAa0I,KAAKzI,UACzFS,EAAgBgI,KAAKzI,QAAS,CAClC8mC,EAAaH,EAAYC,cAAc,GAGvC,IAAK,IAFDplC,EAAUk/B,EAAKpxB,qBACfqrB,KACKh6B,EAAI,EAAGA,EAAIa,EAAQX,OAAQF,IAChCg6B,EAAQh6B,GAAKa,EAAQb,GAAG6C,MAE5Bk9B,EAAKnnB,OAAOinB,IAAqB7F,QAASA,EAASn5B,QAASA,IAC5DslC,EAAWvtB,OAAO+mB,IAAkBvB,QAASgI,EAAavlC,QAASA,IACnEk/B,EAAKnK,UACLuQ,EAAWvQ,UACPuQ,EAAW7lC,KAAKhB,WAAWY,OAAS,IACpCimC,EAAWvQ,UACNv1B,oBAAkB8lC,EAAW9zB,mBAAmBpB,cAAc,wBAC/Dk1B,EAAW9zB,mBAAmBpB,cAAc,sBAAsB+Z,SAEjE3qB,oBAAkB8lC,EAAW7M,aAAaroB,cAAc,uBACzDk1B,EAAW7M,aAAaroB,cAAc,qBAAqB+Z,UAInElrB,EAAgBgI,KAAKzI,UACrB8mC,EAAaH,EAAYC,cAAc,GACvClG,EAAKnK,UACLuQ,EAAWvQ,YAGnBwJ,EAAMr2B,UAAUu9B,aAAe,SAAUne,GACrC,OAAOA,EAAYrP,SAASqP,EAAU7V,aAAa,iBAAkB,IAAM,GAE/E8sB,EAAMr2B,UAAUrH,cAAgB,SAAUL,GACtC,IAAII,EAAaJ,EAAOI,WACxB,GAA0B,kBAAtBqG,KAAKk4B,aAAkC,CACvC,IAAIuG,EAAiBz+B,KAAKzI,OAAOsP,qBAAqB,GACtD7G,KAAK+4B,cAAgBn/B,EAAcoG,KAAKzI,OAAQknC,EAAe9kC,WAAWE,UAE9E,GAA0B,kBAAtBmG,KAAKk4B,aAAkC,CAC3Bl4B,KAAKzI,OAAOsP,qBAAqB,GAAG7L,QAClCrB,EAAWqB,MACrBgF,KAAK+4B,cAAgBn/B,EAAcoG,KAAKzI,OAAQoC,EAAWE,UAG3DmG,KAAKpG,cAAcD,KAI/B29B,EAAMr2B,UAAUm3B,SAAW,SAAUhxB,EAAMs3B,GACvC,GAA0B,YAAtB1+B,KAAKk4B,eAA+B5gC,EAAa0I,KAAKzI,QAAS,CAC/D,IAAI0gC,EAAOj4B,KAAKzI,OACZghC,OAAgB,EAChBQ,OAAgB,EACpB,GAAIxgC,oBAAkB6O,EAAK+wB,WAAY,CACnC,IAAIpwB,EAAWkwB,EAAK5xB,wBAAwB,GAAK,EAC7C9M,EAAS0+B,EAAKz7B,wBAAwBuL,GAC1C/H,KAAKpG,cAAcL,QAGnByG,KAAK+4B,cAAgBd,EAAKz7B,wBAAwB4K,EAAK+wB,WAE3D,IAAIK,KACJO,EAAgB/4B,KAAK+4B,cAChB3xB,EAAKzI,KAAK,GAIX65B,EAAcpxB,EAAKzI,KAHnB65B,EAAYn/B,KAAK+N,EAAKzI,MAK1B,IAAIiO,EAAQ,EACRkvB,EAAe97B,KAAKzI,OAAOksB,gBAAgBC,SAC/C1jB,KAAK2+B,eAAiB7C,EAEjBA,EAID97B,KAAKy3B,cAA8BqE,GAAgB97B,KAAKw3B,mBAHxDx3B,KAAKi+B,mBAAmBzF,EAAaO,GAMzC,IAAK,IADD6F,EAAapG,EAAYpgC,OACpBF,EAAI,EAAGA,EAAI0mC,EAAY1mC,IAAK,CACjCqgC,EAAgBC,EAAYtgC,GAC5B8H,KAAKu4B,cAAgBA,EACrB,IAAIhrB,EAAcnG,EAAK+wB,UACnB98B,GAAmB9C,oBAAkB0/B,EAAK56B,iBAC9C,GAA0B,YAAtB2C,KAAKk4B,aAA4B,CAC5BD,EAAKxU,gBAAgBC,WAAYgb,GAClC1+B,KAAK24B,gBAET,IAAIkG,EAAe7+B,KAAK4X,aAAalZ,QAAQq6B,GAE7C,GADA/4B,KAAK8+B,UAAUD,EAAcxjC,EAAiBnD,GACpB,kBAAtB8H,KAAKk4B,aAAkC,CAiBvC,GAhBKa,EAAc7+B,iBAOf0S,EAAQ5M,KAAK++B,cAAchG,EAAe,GACtC/4B,KAAKzI,OAAO8F,iBACZ2C,KAAKnE,SAAS0B,OAAOshC,EAAejyB,EAAQ,EAAG,EAAG5M,KAAKu4B,cAAct7B,UAEzE+C,KAAK4X,aAAara,OAAOshC,EAAejyB,EAAQ,EAAG,EAAG5M,KAAKu4B,iBAVvDv4B,KAAKzI,OAAO8F,iBACZ2C,KAAKnE,SAAS0B,OAAOshC,EAAe,EAAG,EAAG7+B,KAAKu4B,cAAct7B,UAEjE+C,KAAK4X,aAAara,OAAOshC,EAAe,EAAG,EAAG7+B,KAAKu4B,gBASvDA,EAAc5+B,WAAaqG,KAAK4X,aAAainB,GAAcllC,WAC3D4+B,EAAc/5B,eAAiBwB,KAAK4X,aAAainB,GAAcrgC,eAC/D+5B,EAAcv9B,MAAQgF,KAAK4X,aAAainB,GAAc7jC,MAClDu9B,EAAcr+B,gBAAiB,CAE/B8F,KAAKg/B,uBAAuBzG,EADhB,GAEZv4B,KAAKi/B,kBAAkB1G,EAAesG,EAAejyB,EAAQ,GAEjE,GAAImsB,EAAcp/B,WAAY,CAC1B,IACIQ,EADM6F,KAAK23B,0BAA0BoB,EAAcv6B,gBAChC,GAAGrE,aACtB+kC,EAAqB/kC,EAAauE,QAAQq6B,GAAiB,EAC/D5+B,EAAaoD,OAAO2hC,EAAoB,EAAG3G,IAGnDv4B,KAAKm/B,WAAW5xB,EAAasxB,EAAcz3B,EAAMs3B,EAAYrjC,EAAiBnD,GAElF,GAAIK,oBAAkBggC,EAAc5+B,YAAa,CAC7C,IAAIge,EAAgBsgB,EAAKt6B,WACrByhC,EAAiBznB,EAAcjZ,QAAQsB,KAAK+4B,eACtB,kBAAtB/4B,KAAKk4B,aACLvgB,EAAcpa,OAAO6hC,EAAiB,EAAG,EAAG7G,GAEjB,eAAtBv4B,KAAKk4B,cACVvgB,EAAcpa,OAAO6hC,EAAgB,EAAG7G,GAGhDN,EAAK1B,qBAAqBqC,2BAItCtB,EAAMr2B,UAAUk+B,WAAa,SAAU5xB,EAAasxB,EAAcz3B,EAAM/L,EAAiBqjC,EAAYxmC,GACjG,IAAI+/B,EAAOj4B,KAAKzI,OACZ4C,EAAeF,EAAoB+F,KAAK+4B,eACxCsG,EAAsB9mC,oBAAkB4B,IAChB,IAAxBA,EAAa/B,OAAgBymC,EAAe,EAC5C1kC,EAAa/B,OAASymC,EAAe,EACf,kBAAtB7+B,KAAKk4B,eACDD,EAAK56B,iBACL2C,KAAKnE,SAAS0B,OAAO8hC,EAAoB,EAAGr/B,KAAKu4B,cAAct7B,UAC/D+C,KAAK4X,aAAara,OAAO8hC,EAAoB,EAAGr/B,KAAKu4B,gBAGrDv4B,KAAK4X,aAAara,OAAO8hC,EAAoB,EAAGr/B,KAAKu4B,eAEzDv4B,KAAKs/B,cACDt/B,KAAKu4B,cAAcr+B,iBACnB8F,KAAKi/B,kBAAkBj/B,KAAKu4B,cAAe8G,EAAoBr/B,KAAK+4B,cAAc/+B,YAI9Fs9B,EAAMr2B,UAAU69B,UAAY,SAAUD,EAAcxjC,EAAiBnD,GACjE,IAAI+/B,EAAOj4B,KAAKzI,OAChB,GAA0B,eAAtByI,KAAKk4B,aAA+B,CAQpC,GAPID,EAAK56B,iBACL2C,KAAKnE,SAAS0B,OAAOshC,EAAc,EAAG7+B,KAAKu4B,cAAct7B,UAE7D+C,KAAKu4B,cAAc5+B,WAAaqG,KAAK4X,aAAainB,GAAcllC,WAChEqG,KAAKu4B,cAAc/5B,eAAiBwB,KAAK4X,aAAainB,GAAcrgC,eACpEwB,KAAKu4B,cAAcv9B,MAAQgF,KAAK4X,aAAainB,GAAc7jC,MAC3DgF,KAAK4X,aAAara,OAAOshC,EAAc,EAAG7+B,KAAKu4B,eAC3Cv4B,KAAKu4B,cAAcr+B,gBAAiB,CAEpC8F,KAAKi/B,kBAAkBj/B,KAAKu4B,cAAesG,GAC3C7+B,KAAKg/B,uBAAuBh/B,KAAKu4B,cAFrB,GAIhB,GAAIv4B,KAAK+4B,cAAcp/B,WAAY,CAC/B,IACIQ,EADM6F,KAAK23B,0BAA0B33B,KAAK+4B,cAAcv6B,gBACrC,GAAGrE,aACtB+kC,EAAqB/kC,EAAauE,QAAQsB,KAAK+4B,eACnD5+B,EAAaoD,OAAO2hC,EAAoB,EAAGl/B,KAAKu4B,kBAI5DjB,EAAMr2B,UAAUq+B,YAAc,WAC1B,IAAIrH,EAAOj4B,KAAKzI,OACZghC,EAAgBv4B,KAAKu4B,cACrBQ,EAAgB/4B,KAAK+4B,cACrBwG,EAAYtH,EAAKz6B,aAWrB,GAVKu7B,EAAc7+B,kBACf6+B,EAAc7+B,iBAAkB,EAChC6+B,EAActoB,yBAA0B,EACpClY,oBAAkBwgC,EAAc5+B,gBAChC4+B,EAAc5+B,iBACT89B,EAAK56B,iBAAmB9E,oBAAkBwgC,EAAc97B,SAASsiC,MAClExG,EAAc97B,SAASsiC,SAIT,kBAAtBv/B,KAAKk4B,aAAkC,CACvC,IAAIv+B,EAAa8C,YAAWs8B,GAQ5B,UAPOp/B,EAAWQ,aAClBo+B,EAAc5+B,WAAaA,EAC3B4+B,EAAc/5B,eAAiBu6B,EAAcl/B,SAC7Ck/B,EAAc5+B,aAAaoD,OAAOw7B,EAAc5+B,aAAa/B,OAAQ,EAAGmgC,GACnEhgC,oBAAkBggC,IAAmBN,EAAK56B,iBAAoB9E,oBAAkBwgC,EAAc97B,SAASsiC,KACxGxG,EAAc97B,SAASg7B,EAAKz6B,cAAcD,OAAOw7B,EAAc5+B,aAAa/B,OAAQ,EAAGmgC,EAAct7B,UAEpGs7B,EAAcr+B,gBAGd,CAEDq+B,EAAcv9B,MAAQ+9B,EAAc/9B,MAAQ,EAC5CgF,KAAKg/B,uBAAuBzG,EAFhB,QAHZA,EAAcv9B,MAAQ+9B,EAAc/9B,MAAQ,EAOhD+9B,EAAc/+B,UAAW,IAMjCs9B,EAAMr2B,UAAU03B,cAAgB,WACxB34B,KAAKzI,OAAOC,sBAAsBC,eAAe4C,EAAU2F,KAAKzI,SAChEyI,KAAK4X,aAAe5X,KAAKzI,OAAOiB,KAAKhB,WAAWA,WAAWsE,KAC3DkE,KAAKnE,SAAWmE,KAAKzI,OAAOC,WAAWA,WAAWsE,OAGlDkE,KAAK4X,aAAe5X,KAAKzI,OAAOiB,KAAKhB,WACrCwI,KAAKnE,SAAWmE,KAAKzI,OAAOC,YAEhC,IAAIgoC,EACJA,EAAa5lC,EAAcoG,KAAKzI,OAAQyI,KAAKu4B,cAAc1+B,UAC3DmG,KAAKy/B,cAAcD,IAEvBlI,EAAMr2B,UAAUg+B,kBAAoB,SAAU1lC,EAAQqT,EAAO5S,GACzD,IAAIkT,EACA+qB,EAAOj4B,KAAKzI,OACZa,EAAS,EACb,IAAKmB,EAAOW,gBACR,OAAO,EAEX9B,EAASmB,EAAOY,aAAa/B,OAC7B,IAAK,IAAIF,EAAI,EAAGA,EAAIE,EAAQF,IACxBgV,EAAgB3T,EAAOY,aAAajC,GACpC0U,IACAqrB,EAAKr6B,SAASL,OAAOqP,EAAO,EAAGM,GAC3B+qB,EAAK56B,iBACL2C,KAAKnE,SAAS0B,OAAOqP,EAAO,EAAGM,EAAcjQ,UAE7CiQ,EAAchT,kBACd0S,EAAQ5M,KAAKi/B,kBAAkB/xB,EAAeN,IAGtD,OAAOA,GAEX0qB,EAAMr2B,UAAU+9B,uBAAyB,SAAUzlC,EAAQyB,GACvD,IACIkS,EADA9U,EAAS,EAGb,GADA4C,KACKzB,EAAOW,gBACR,OAAO,EAEX9B,EAASmB,EAAOY,aAAa/B,OAC7B,IAAK,IAAIF,EAAI,EAAGA,EAAIE,EAAQF,IAAK,CAC7BgV,EAAgB3T,EAAOY,aAAajC,GACpC,IAAIyF,OAAa,EACbpE,EAAOI,aACPgE,EAAa/D,EAAcoG,KAAKzI,OAAQgC,EAAOI,WAAWE,WAE9DqT,EAAclS,MAAQzB,EAAOI,WAAagE,EAAW3C,MAAQA,EAAQzB,EAAOyB,MAAQ,EAChFkS,EAAchT,kBACdc,IACAA,EAAQgF,KAAKg/B,uBAAuB9xB,EAAelS,IAG3D,OAAOA,GAEXs8B,EAAMr2B,UAAUw+B,cAAgB,SAAUlmC,GACtC,IACI/B,EADAygC,EAAOj4B,KAAKzI,OAGZC,EADAwI,KAAKzI,OAAOC,sBAAsBC,eAAe4C,EAAU2F,KAAKzI,QACnDyI,KAAKzI,OAAOC,WAAWA,WAAWsE,KAGlCkE,KAAKzI,OAAOC,WAE7B,IAAIgoC,EAAajmC,EAGb8B,GAAmB9C,oBAAkB0/B,EAAK56B,iBAC1CqiC,EAAiB1/B,KAAK23B,0BAA0B6H,EAAWhhC,gBAAgB,GAC/E,GAAIghC,EAAY,CACZ,GAAIA,EAAW7lC,WAAY,CACvB,IAAIQ,EAAeulC,EAAiBA,EAAevlC,gBAC/CwlC,EAAa,EACbxlC,GAAgBA,EAAa/B,OAAS,IACtCunC,EAAaxlC,EAAauE,QAAQ8gC,GAClCE,EAAevlC,aAAaoD,OAAOoiC,EAAY,GAC1C3/B,KAAKzI,OAAO8F,iBACbnC,GAAaJ,MAAO0kC,EAAY7jC,OAAQ,UAAYqE,KAAKzI,OAAQ8D,EAAiBmkC,EAAWzkC,MAAOykC,EAAWzkC,QAI3H,GAAIk9B,EAAK56B,gBAAiB,CAClBmiC,EAAWtlC,iBAAmBslC,EAAWrlC,aAAa/B,OAAS,GAC/D4H,KAAK4/B,gBAAgBJ,GAKzB,IAAK,IAHD1G,OAAM,EACN+G,OAAM,EACNjoB,EAAepgB,EACVU,EAAI,EAAGA,EAAI0f,EAAaxf,OAAQF,IACjC0f,EAAa1f,GAAG8H,KAAKzI,OAAO+F,aAAekiC,EAAWviC,SAAS+C,KAAKzI,OAAO+F,aAC3Ew7B,EAAM5gC,GAGd,IAASA,EAAI,EAAGA,EAAI8H,KAAK4X,aAAaxf,OAAQF,IACtC8H,KAAK4X,aAAa1f,GAAG8H,KAAKzI,OAAO+F,aAAekiC,EAAWviC,SAAS+C,KAAKzI,OAAO+F,aAChFuiC,EAAM3nC,IAGD,IAAT4gC,IAAuB,IAAT+G,IACdroC,EAAW+F,OAAOu7B,EAAK,GACvB94B,KAAK4X,aAAara,OAAOsiC,EAAK,IAGtC,IAAIC,EAAgB9/B,KAAK4X,aAAalZ,QAAQ8gC,GAC9C,IAAKvH,EAAK56B,gBAAiB,CACvB,IAAI0iC,EAAc//B,KAAKzI,OAAOoG,WAAWe,QAAQ8gC,IAC5B,IAAjBO,IACA9H,EAAKt6B,WAAWJ,OAAOwiC,EAAa,GACpCvoC,EAAW+F,OAAOwiC,EAAa,IAGvC,IAAuB,IAAnBD,IAAyB7H,EAAK56B,gBAE9B,IAAK,IADD2iC,EAAkB/H,EAAKr8B,0BAA0B,GAC5ChB,EAAI,EAAGA,EAAIoF,KAAK4X,aAAaxf,OAAQwC,IACtCoF,KAAK4X,aAAahd,GAAGolC,KAAqBR,EAAWQ,KACrDF,EAAgBllC,GAI5B,IAAKq9B,EAAK56B,gBAAiB,CACvB,IAAI4iC,EAAqBjgC,KAAK++B,cAAcS,EAAY,GACxDx/B,KAAK4X,aAAara,OAAOuiC,EAAeG,EAAqB,GAE7DT,EAAW7lC,YAAc+lC,GAAkBA,EAAevlC,eAAiBulC,EAAevlC,aAAa/B,SACvGsnC,EAAe1lC,UAAW,EAC1B0lC,EAAexlC,iBAAkB,EACjCwlC,EAAejvB,yBAA0B,KAIrD6mB,EAAMr2B,UAAU2+B,gBAAkB,SAAUrmC,GACxC,IACI2T,EACA4rB,EACA+G,EACAroC,EAJOwI,KAAKzI,OAMZC,EADAwI,KAAKzI,OAAOC,sBAAsBC,eAAe4C,EAAU2F,KAAKzI,QACnDyI,KAAKzI,OAAOC,WAAWA,WAAWsE,KAGlCkE,KAAKzI,OAAOC,WAE7B,IAAK,IAAIU,EAAI,EAAGA,EAAIqB,EAAOY,aAAa/B,OAAQF,IAAK,CACjDgV,EAAgB3T,EAAOY,aAAajC,GACpC,IAAI0f,OAAe,EAEfA,EADA5X,KAAKzI,OAAOC,sBAAsBC,eAAe4C,EAAU2F,KAAKzI,QACjDyI,KAAKzI,OAAOC,WAAWA,WAAWsE,KAGlCkE,KAAKzI,OAAOC,WAE/B,IAAK,IAAIm9B,EAAM,EAAGA,EAAM/c,EAAaxf,OAAQu8B,IACrC/c,EAAa+c,GAAK30B,KAAKzI,OAAO+F,aAAe4P,EAAcjQ,SAAS+C,KAAKzI,OAAO+F,aAChFw7B,EAAMnE,GAGd,IAAK,IAAIuL,EAAM,EAAGA,EAAMlgC,KAAK4X,aAAaxf,OAAQ8nC,IAC9C,GAAIlgC,KAAK4X,aAAasoB,GAAKlgC,KAAKzI,OAAO+F,aAAe4P,EAAcjQ,SAAS+C,KAAKzI,OAAO+F,WAAY,CACjGuiC,EAAMK,EACN,OAGK,IAATpH,IAAuB,IAAT+G,IACdroC,EAAW+F,OAAOu7B,EAAK,GACvB94B,KAAK4X,aAAara,OAAOsiC,EAAK,IAE9B3yB,EAAchT,iBACd8F,KAAK4/B,gBAAgB1yB,KAIjCoqB,EAAMr2B,UAAU89B,cAAgB,SAAUxlC,EAAQqT,GAC9C,IAAIM,EACJ,IAAK3T,EAAOW,gBACR,OAAO,EAEX,IAAK,IAAIhC,EAAI,EAAGA,EAAIqB,EAAOY,aAAa/B,OAAQF,IAE5C0U,KADAM,EAAgB3T,EAAOY,aAAajC,IAElBgC,kBACd0S,EAAQ5M,KAAK++B,cAAc7xB,EAAeN,IAGlD,OAAOA,GAEX0qB,EAAMr2B,UAAUg9B,mBAAqB,SAAUkC,EAAgBjzB,GAChDlN,KAAKzI,OAAhB,IACI6oC,EAAiBpgC,KACrBmgC,EAAetiC,OAAO,SAAUC,GAC5B,GAAIA,EAAE5D,kBAAoB3B,oBAAkBuF,EAAE3D,cAAe,CAEzD,IAAe,IADH2D,EAAE3D,aAAauE,QAAQwO,GAQ/B,OAHAkzB,EAAelI,aAAe,UAC9BkI,EAAe1G,oBACf0G,EAAe7I,SAAU,GALzB6I,EAAenC,mBAAmBngC,EAAE3D,aAAc+S,OAWlEoqB,EAAMr2B,UAAUiH,QAAU,WACtBlI,KAAK6I,uBAKTyuB,EAAMr2B,UAAU4H,oBAAsB,WAC9B7I,KAAKzI,OAAOuR,cAGhB9I,KAAKzI,OAAOwR,IAAI+iB,GAAmB9rB,KAAK43B,YACxC53B,KAAKzI,OAAOwR,IAAIijB,GAAmBhsB,KAAKoF,YACxCpF,KAAKzI,OAAOwR,IAAI8uB,GAAgB73B,KAAK83B,WACrC93B,KAAKzI,OAAOwR,IAAIgvB,GAAmB/3B,KAAKg4B,eAS5CV,EAAMr2B,UAAUgH,cAAgB,WAC5B,MAAO,kBAEJqvB,KCt9BP72B,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBxH,OAAO2H,iBAChBC,wBAA2B/D,OAAS,SAAU4D,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI7C,KAAK6C,EAAOA,EAAEzD,eAAeY,KAAI4C,EAAE5C,GAAK6C,EAAE7C,MACpD4C,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAa1H,OAAOgI,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,IAAIF,IAV3C,GAaxCI,GAA0C,SAAUC,EAAYC,EAAQ3I,EAAK4I,GAC7E,IAA2HX,EAAvHY,EAAIC,UAAUpJ,OAAQqJ,EAAIF,EAAI,EAAIF,EAAkB,OAATC,EAAgBA,EAAOpI,OAAOwI,yBAAyBL,EAAQ3I,GAAO4I,EACrH,GAAuB,iBAAZK,SAAoD,mBAArBA,QAAQC,SAAyBH,EAAIE,QAAQC,SAASR,EAAYC,EAAQ3I,EAAK4I,QACpH,IAAK,IAAIpJ,EAAIkJ,EAAWhJ,OAAS,EAAGF,GAAK,EAAGA,KAASyI,EAAIS,EAAWlJ,MAAIuJ,GAAKF,EAAI,EAAIZ,EAAEc,GAAKF,EAAI,EAAIZ,EAAEU,EAAQ3I,EAAK+I,GAAKd,EAAEU,EAAQ3I,KAAS+I,GAChJ,OAAOF,EAAI,GAAKE,GAAKvI,OAAO2I,eAAeR,EAAQ3I,EAAK+I,GAAIA,GAM5Dg1B,GAAiC,SAAU10B,GAE3C,SAAS00B,IACL,OAAkB,OAAX10B,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KAK/D,OAPAS,GAAUg2B,EAAiB10B,GAI3BZ,IACIc,cACDw0B,EAAgBx1B,UAAW,gBAAY,GACnCw1B,GACTv0B,iBChCEzB,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBxH,OAAO2H,iBAChBC,wBAA2B/D,OAAS,SAAU4D,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI7C,KAAK6C,EAAOA,EAAEzD,eAAeY,KAAI4C,EAAE5C,GAAK6C,EAAE7C,MACpD4C,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAa1H,OAAOgI,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,IAAIF,IAV3C,GAqBxCs/B,GAA8C,SAAUt+B,GAExD,SAASs+B,EAA6B9oC,GAClC,IAAI+N,EAAQvD,EAAOwD,KAAKvF,KAAMzI,IAAWyI,KAEzC,OADAsF,EAAMiD,mBACCjD,EAkDX,OAtDA7E,GAAU4/B,EAA8Bt+B,GAMxCs+B,EAA6Bp/B,UAAUsH,iBAAmB,WACtDvI,KAAKzI,OAAOiR,GAAG83B,GAAqBtgC,KAAKugC,SAAUvgC,OAEvDqgC,EAA6Bp/B,UAAUs/B,SAAW,SAAUn5B,GACxDpH,KAAKwgC,WAAap5B,EAAKzI,MAE3B0hC,EAA6Bp/B,UAAUw/B,aAAe,SAAU9hC,EAAM+hC,GAClE,GAAI1gC,KAAKzI,OAAOC,sBAAsBC,oBAAyDwjB,IAA1Cjb,KAAKzI,OAAOC,WAAWA,WAAWmpC,KACtC,KAA1C3gC,KAAKzI,OAAOC,WAAWA,WAAWmpC,IACrC,OAAO5+B,EAAOd,UAAUw/B,aAAal7B,KAAKvF,KAAMrB,EAAM+hC,GAGjDnoC,oBAAkBmoC,EAAW7gC,cAAsD,gBAAtC6gC,EAAW7gC,YAAYmG,aACrE06B,EAAW7gC,YAAc,WAG7B,IAAK,IADDqG,EAAOnE,EAAOd,UAAUw/B,aAAal7B,KAAKvF,KAAMrB,EAAM+hC,GACjDj/B,EAAI,EAAGA,EAAIyE,EAAK9N,OAAQqJ,IAC7ByE,EAAKzE,GAAG1G,MAASiF,KAAe,WAAEtB,QAAQwH,EAAKzE,GAAG9C,MAEtD,OAAOuH,GAGfm6B,EAA6Bp/B,UAAU2/B,mBAAqB,SAAUjlC,GAClE,IAAIklC,GAAS,SAAU,UAAW,UAAW,YAAa,YAAa,UACnE,OAAQ,UAAU/d,KAAK,SAAUhoB,GAAS,OAAOa,IAAWb,IAChE,GAAIkF,KAAKzI,OAAOC,sBAAsBC,oBAAyDwjB,IAA1Cjb,KAAKzI,OAAOC,WAAWA,WAAWmpC,KACtC,KAA1C3gC,KAAKzI,OAAOC,WAAWA,WAAWmpC,IAAY,CACjD,IACInpB,EAAcxX,KAAU,MAAEwX,YAC1BqpB,GACA7gC,KAAK8gC,SACL9gC,KAAKrB,QACLqB,KAAK+gC,WAEW,kBAAXplC,GAA8BqE,KAAK8gC,MAAMtpB,IAC9CxX,KAAK8gC,MAAMtpB,GAAapf,OAAU4H,KAAKzI,OAAoB,cAAEypC,uBACtDhhC,KAAK8gC,MAAMtpB,QAIlBqpB,GAAoB,kBAAXllC,KACTqE,KAAK8gC,SACL9gC,KAAKrB,QACLqB,KAAK+gC,WAGb,OAAOF,GAEJR,GACTY,4BCtEEC,GAAwB,WAIxB,SAASA,EAAO3pC,GACZ6W,OAAKC,OAAO8yB,UACZnhC,KAAKzI,OAASA,EACdyI,KAAKohC,mBAAoB,EACzBphC,KAAK0M,kBACL1M,KAAKqhC,oBACLrhC,KAAKshC,sBACLthC,KAAKuI,mBAyMT,OAnMA24B,EAAOjgC,UAAUgH,cAAgB,WAC7B,MAAO,UAOXi5B,EAAOjgC,UAAUiH,QAAU,WACvBlI,KAAK6I,uBAKTq4B,EAAOjgC,UAAUsH,iBAAmB,WAChCvI,KAAKzI,OAAOiR,GAAG,mBAAoBxI,KAAKuhC,sBAAuBvhC,MAC/DA,KAAKzI,OAAOiR,GAAG,eAAgBxI,KAAKwhC,iBAAkBxhC,OAK1DkhC,EAAOjgC,UAAU4H,oBAAsB,WAC/B7I,KAAKzI,OAAOuR,cAGhB9I,KAAKzI,OAAOwR,IAAI,mBAAoB/I,KAAKuhC,uBACzCvhC,KAAKzI,OAAOwR,IAAI,eAAgB/I,KAAKwhC,oBAMzCN,EAAOjgC,UAAUsgC,sBAAwB,SAAUE,GAC/C/tB,WAAS,8BAAgC1T,KAAKzI,QAC9CyI,KAAKqhC,iBAAmBI,EAAY9iC,KACpCqB,KAAKshC,sBACLthC,KAAK0M,kBACL1M,KAAKohC,mBAAoB,EACzB,IAAK,IAAIlK,EAAI,EAAGA,EAAIl3B,KAAKqhC,iBAAiBjpC,OAAQ8+B,IAAK,CACnD,IAAI7pB,EAAMrN,KAAKqhC,iBAAiBnK,GAChCl3B,KAAK0hC,gBAAgBr0B,GACrB,IAAI1U,EAAwD,KAAxCqH,KAAKzI,OAAOiB,KAAKC,eAAeC,IAAasH,KAAKzI,OAAOsB,eAAeF,cACtFqH,KAAKzI,OAAOkB,eAAeE,cACT,UAAlBA,GAA+C,SAAlBA,GACqB,IAAnDqH,KAAKzI,OAAOiB,KAAKK,eAAeV,QAAQC,QAAwD,KAAxC4H,KAAKzI,OAAOiB,KAAKC,eAAeC,MACzFsH,KAAKohC,mBAAoB,GAE7B,IAAIO,EAAUvoC,YAAU,eAAgBiU,IACnC9U,oBAAkBopC,IAAYA,EAAQvpC,QACvCsb,WAAS,0BAA2B1T,KAAK4hC,iBAAiBv0B,GAAMA,GAEpE,IAAIw0B,EAAWzoC,YAAU,aAAciU,GACvC,IAAK9U,oBAAkBspC,GAAW,CAC9B,IAAIC,EAAYloC,EAAcoG,KAAKzI,OAAQ8V,EAAI1T,WAAWE,UAAU,GAGpE6Z,WAAS,2BAA2B,EAAMouB,GACtCA,GAAaA,EAAUnoC,YACvBqG,KAAK+hC,2BAA2BD,IAIxC9hC,KAAKqhC,iBAAiBjpC,OAAS,GAAK4H,KAAKohC,mBACzCphC,KAAKgiC,oBAEThiC,KAAKzI,OAAOuZ,OAAO,gBAAkByC,OAAQvT,KAAK0M,kBAEtDw0B,EAAOjgC,UAAU8gC,2BAA6B,SAAUxoC,GACpD,IAAIuoC,EAAYloC,EAAcoG,KAAKzI,OAAQgC,EAAOI,WAAWE,UAAU,GACnEooC,EAAgB1jC,WAAS,2BAA4ByB,KAAKzI,QAC1DuqC,GAAaG,EAAc9kC,eAAe2kC,EAAUjoC,WACpD6Z,WAAS,2BAA2B,EAAMouB,GAE1CA,GAAaA,EAAUnoC,YACvBqG,KAAK+hC,2BAA2BD,IAIxCZ,EAAOjgC,UAAUygC,gBAAkB,SAAUnoC,GACzC,IAAIhC,EAASqC,EAAcoG,KAAKzI,OAAQgC,EAAOiF,gBAI/C,GAAsB,UAFsC,KAAxCwB,KAAKzI,OAAOiB,KAAKC,eAAeC,IAAasH,KAAKzI,OAAOsB,eAAeF,cACtFqH,KAAKzI,OAAOkB,eAAeE,gBACmD,IAAnDqH,KAAKzI,OAAOiB,KAAKK,eAAeV,QAAQC,QAC1B,KAAxC4H,KAAKzI,OAAOiB,KAAKC,eAAeC,IA2BlC,CACD,IAAKH,oBAAkBhB,GAAS,CAGJ,WAFsC,KAAxCyI,KAAKzI,OAAOiB,KAAKC,eAAeC,IAClDsH,KAAKzI,OAAOsB,eAAeF,cAAgBqH,KAAKzI,OAAOkB,eAAeE,gBACa,IAAnDqH,KAAKzI,OAAOiB,KAAKK,eAAeV,QAAQC,QAC7B,KAAxC4H,KAAKzI,OAAOiB,KAAKC,eAAeC,IAMnCsH,KAAK0hC,gBAAgBnqC,IAL0B,IAA3CyI,KAAKqhC,iBAAiB3iC,QAAQnH,IAC9ByI,KAAK0hC,gBAAgBnqC,IAOY,IAAzCyI,KAAK0M,eAAehO,QAAQnF,KAC5ByG,KAAK0M,eAAerT,KAAKE,GACzBma,WAAS,4BAA8Bna,EAAOM,SAAUN,EAAQyG,KAAKzI,cA1CzE,GAAIgB,oBAAkBhB,IAClB,IAA+C,IAA3CyI,KAAKqhC,iBAAiB3iC,QAAQnF,GAM9B,aAL6C,IAAzCyG,KAAK0M,eAAehO,QAAQnF,KAC5ByG,KAAK0M,eAAerT,KAAKE,GACzBma,WAAS,4BAA8Bna,EAAOM,SAAUN,EAAQyG,KAAKzI,QACrEgC,EAAOkX,yBAA0B,SAMzCzQ,KAAK0hC,gBAAgBnqC,IAC0B,IAA3CyI,KAAKqhC,iBAAiB3iC,QAAQnH,KAA2D,IAAzCyI,KAAK0M,eAAehO,QAAQnH,IAC/B,IAAzCyI,KAAK0M,eAAehO,QAAQnF,KAC5ByG,KAAK0M,eAAerT,KAAKE,GACzBma,WAAS,4BAA8Bna,EAAOM,SAAUN,EAAQyG,KAAKzI,UAI5B,IAAzCyI,KAAK0M,eAAehO,QAAQnF,KAA6D,IAA3CyG,KAAKqhC,iBAAiB3iC,QAAQnF,KAC5EyG,KAAK0M,eAAerT,KAAKE,GACzBma,WAAS,4BAA8Bna,EAAOM,SAAUN,EAAQyG,KAAKzI,UAyBzF2pC,EAAOjgC,UAAU2gC,iBAAmB,SAAU7oC,GAG1C,IAAK,IAFDmpC,EAAW9oC,YAAU,eAAgBL,GACrCopC,GAAU,EACLv1B,EAAQ,EAAGA,EAAQs1B,EAAS9pC,OAAQwU,IAAS,CAClD,IAAI+0B,EAAUO,EAASt1B,GAAOzS,aAC1BxB,EAAwD,KAAxCqH,KAAKzI,OAAOiB,KAAKC,eAAeC,IAChDsH,KAAKzI,OAAOsB,eAAeF,cAAgBqH,KAAKzI,OAAOkB,eAAeE,cAC1E,KAAwB,UAAlBA,GAA+C,SAAlBA,GAAiF,IAAnDqH,KAAKzI,OAAOiB,KAAKK,eAAeV,QAAQC,QAC1D,KAAxC4H,KAAKzI,OAAOiB,KAAKC,eAAeC,KAAc,CAC7B6F,WAAS,2BAA4ByB,KAAKzI,QAC3C4F,eAAe+kC,EAASt1B,GAAO/S,YAC9CmG,KAAK0M,eAAerT,KAAK6oC,EAASt1B,IAClC8G,WAAS,4BAA8BwuB,EAASt1B,GAAO/S,SAAUqoC,EAASt1B,GAAQ5M,KAAKzI,QACvF4qC,GAAU,GAGlB,GAAuB,SAAlBxpC,IACsD,IAAnDqH,KAAKzI,OAAOiB,KAAKK,eAAeV,QAAQC,QAAwD,KAAxC4H,KAAKzI,OAAOiB,KAAKC,eAAeC,OACpC,IAApDsH,KAAKqhC,iBAAiB3iC,QAAQwjC,EAASt1B,IAAgB,CACvDu1B,GAAU,EACV,OAGH5pC,oBAAkBopC,IAAYA,EAAQvpC,SACvC+pC,EAAUniC,KAAK4hC,iBAAiBM,EAASt1B,KAEtB,UAAlBjU,GAA+C,SAAlBA,IAA6BupC,EAAS9pC,SACpE+pC,GAAU,GAGlB,OAAOA,GAEXjB,EAAOjgC,UAAU+gC,kBAAoB,WAGjC,IAAK,IAFDzoC,EAASyG,KAAK0M,eACdzT,EAAM+G,KAAK0M,eAAetU,OACrBmJ,EAAI,EAAGA,EAAItI,EAAKsI,IAAK,CAC1B,IAAI6gC,EAAWxoC,EAAcoG,KAAKzI,OAAQgC,EAAOgI,GAAG/C,gBAEpD,IAD2C,IAA9BjF,EAAOmF,QAAQ0jC,GAChB,CACR,IAAIC,EAAWzoC,EAAcoG,KAAKzI,OAAQgC,EAAOgI,GAAG/C,gBAAgB,GACpEjF,EAAOgI,GAAGwO,YAAcsyB,EAAStyB,YAAc,OAG/CxW,EAAOgI,GAAGwO,YAAc,EACxB/P,KAAKshC,mBAAmBjoC,KAAKE,EAAOgI,MAIhD2/B,EAAOjgC,UAAUugC,iBAAmB,SAAU7iC,GAK1C,IAJA,IAGIuO,EAHAN,EAAQ,EACRhP,EAAWe,EAAKf,SAChB3E,EAAM2E,EAASxF,OAEPwU,EAAQ3T,EAAK2T,IAAS,CAE9B,IAAI01B,GADJp1B,EAAgBtP,EAASgP,IACEmD,aACvBuyB,GAAqB,IAAXA,GAAiB/pC,oBAAkB2U,EAAcuD,2BAC3DvD,EAAcuD,wBAA0B,KACxCvD,EAAc6C,YAAc,MAGpC/P,KAAK0M,kBACL1M,KAAKzI,OAAOuZ,OAAO,iBAAmByC,OAAQ3V,EAAUgP,MAAOhP,EAASxF,UAErE8oC,KClNPqB,GAA6B,WAI7B,SAASA,EAAYhrC,GACjB6W,OAAKC,OAAOm0B,eACZxiC,KAAKzI,OAASA,EACdyI,KAAK+R,eACL/R,KAAKuI,mBA6JT,OAvJAg6B,EAAYthC,UAAUgH,cAAgB,WAClC,MAAO,eAKXs6B,EAAYthC,UAAUsH,iBAAmB,WACrCvI,KAAKzI,OAAOiR,GAAG,gBAAiBxI,KAAKyiC,uBAAwBziC,MAC7DA,KAAKzI,OAAOiR,GAAG,gBAAiBxI,KAAKymB,mBAAoBzmB,MACzDA,KAAKzI,OAAOiB,KAAKgQ,GAAG,sBAAuBxI,KAAK0iC,mBAAoB1iC,MACpEA,KAAKzI,OAAOiB,KAAKgQ,GAAG,iBAAkBxI,KAAK2iC,eAAgB3iC,OAO/DuiC,EAAYthC,UAAUiH,QAAU,WAC5BlI,KAAK6I,uBAKT05B,EAAYthC,UAAU4H,oBAAsB,WACpC7I,KAAKzI,OAAOuR,cAGhB9I,KAAKzI,OAAOwR,IAAI,gBAAiB/I,KAAKyiC,wBACtCziC,KAAKzI,OAAOwR,IAAI,gBAAiB/I,KAAKymB,oBACtCzmB,KAAKzI,OAAOiB,KAAKuQ,IAAI,sBAAuB/I,KAAK0iC,oBACjD1iC,KAAKzI,OAAOiB,KAAKuQ,IAAI,iBAAkB/I,KAAK2iC,kBAEhDJ,EAAYthC,UAAUwhC,uBAAyB,SAAU5N,GACrD70B,KAAK+R,YAAc8iB,GAEvB0N,EAAYthC,UAAU6b,IAAM,SAAUL,EAEtCC,EAAkBC,EAAUC,EAAQgmB,GAChC,IAAIt9B,EAAQtF,KACRxI,EAAawI,KAAKzI,OAAOC,WACzB+jB,EAAWriB,SAGf,OAFAwa,WAAS,QAASkvB,EAAOrnB,GACzB7H,WAAS,UAAU,EAAO6H,GACnB,IAAIsnB,QAAQ,SAAU9Z,EAAS+Z,GAClC,IAAIxoC,EAAKgL,EAAMy9B,UAAY,IAAItrC,cAAYD,GAAc8N,EAAM/N,OAAOC,WAClEgb,EAAQ,IAAIC,QAMhB,GALKnN,EAAMy9B,YACPvwB,EAAQlN,EAAM2Q,cAAczD,GAC5BkB,WAAS,QAASlB,EAAO+I,IAE7BjW,EAAM/N,OAAO+P,QAAQ07B,EAAyBvmC,SAAO8e,EAAUkB,IAC3DrjB,YAAU,SAAUmiB,GACpB,OAAO,KAEXjhB,EAAG6Y,aAAaX,GAAOY,KAAK,SAAUtV,GAClC,IAAImlC,EAAa,KAKjB,OAJK1qC,oBAAkBkkB,IAA2BlkB,oBAAkBkkB,EAAsBjlB,cACtFyrC,EAAaxmB,EAAsBjlB,YAEvCilB,EAAwBnX,EAAM49B,2BAA2BzmB,EAAuBjlB,EAAYsG,GACrFwH,EAAM/N,OAAOiB,KAAKqkB,kBAAkBC,IAAIxX,EAAM/N,OAAOiB,KAAMikB,EAAuBC,EAAkBC,EAAUimB,EAAOhmB,GAAQxJ,KAAK,SAAU+vB,GAC7H,MAAdF,EACAxmB,EAAsBjlB,WAAayrC,SAG5BxmB,EAAsBjlB,WAEjCuxB,EAAQoa,UAKxBZ,EAAYthC,UAAUgV,cAAgB,SAAUzD,EAAO+I,GAQnD,OAPKhjB,oBAAkBgjB,IAAqC,gBAAxBA,EAAStD,YACtCjY,KAAKzI,OAAO+X,cACfiM,EAAStD,WAAa,WACtBzF,EAAMM,UAAU,aAAc,eAC9BN,EAAMK,MAAM7S,KAAKzI,OAAO8F,gBAAiB,QAAS,MAClDmV,EAAQpZ,YAAU,mCAAoC4G,KAAKzI,OAAnD6B,CAA2DoZ,IAEhEA,GAEX+vB,EAAYthC,UAAUiiC,2BAA6B,SAAU3nB,EAAU6nB,EAAOC,GAE1E,IAAIj8B,EAAOlO,SAkBX,GAjBAwa,WAAS,QAAS1T,KAAKzI,OAAOiB,KAAKwd,gBAAgBC,eAAc,GAAO7O,GACxEsM,WAAS,YAAY,EAAMtM,GACtB7O,oBAAkBgjB,IAAchjB,oBAAkBgjB,EAAStD,aAC5DvE,WAAS,aAAc6H,EAAStD,WAAY7Q,GAE3CpH,KAAK+iC,WAAcxqC,oBAAkByH,KAAKzI,OAAO8F,mBAClD2C,KAAKzI,OAAOoG,cACZqC,KAAKzI,OAAO8rB,WAAW9Q,kBAAkBnZ,YAAU,SAAUiqC,IAC7D3vB,WAAS,aAAc1T,KAAKzI,OAAOqG,SAAUwJ,IAEjDpH,KAAKzI,OAAOuZ,OAAO,gBAAiB1J,GAEpCA,EAAOpH,KAAK+R,YACZqxB,EAAQ7qC,oBAAkB6O,EAAKmM,QAAUvT,KAAKzI,OAAOqG,SAAS8I,MAAM,GAAKU,EAAKmM,OACzEvT,KAAK+iC,YACN/iC,KAAKzI,OAAOqG,aAEZ2d,GAAYA,EAAS/jB,YAAcwI,KAAK+iC,UAAW,CACnD,IAAIO,EAAYtjC,KAAKzI,OAAOqG,SACxB2lC,EAAUhoB,EAAS/jB,sBAAsBC,cAAc8jB,EAAS/jB,WAAWA,WAAWsE,KAAOyf,EAAS/jB,WAC1GwI,KAAKzI,OAAO8rB,WAAW9Q,kBAAkBgxB,GACzCH,EAAQpjC,KAAKzI,OAAOqG,SACpBoC,KAAKzI,OAAOqG,SAAW0lC,EAI3B,OAFA/nB,EAAWhjB,oBAAkBgjB,GAAYriB,SAAWqiB,EACpDA,EAAS/jB,WAAa,IAAIC,eAAcqE,KAAMsnC,IACvC7nB,GAMXgnB,EAAYthC,UAAUwlB,mBAAqB,SAAUrf,GACjD,GAAIpH,KAAKzI,OAAOiB,KAAK4X,oBAAoBhJ,EAAKzH,OAAO0K,OAASrK,KAAKzI,OAAOkI,gBAAiB,CACvF,IAAIyL,KACAvM,EAAOyI,EAAKzI,KAEZmR,EADcvX,oBAAkBoG,EAAKoR,aACjBpR,EAAK3D,MAAQ2D,EAAKoR,YAC1C7E,EAAMs4B,OAAS1zB,EACf1I,EAAK8D,MAAQA,EAEjBlL,KAAKzI,OAAOuZ,OAAO,gBAAiB1J,GACpCpH,KAAKzI,OAAO+P,QAAQ,qBAAsBF,IAE9Cm7B,EAAYthC,UAAUyhC,mBAAqB,SAAUe,GACjD,GAAsB,UAAlBA,EAAS34B,KAAkB,CAC3B,IAAI44B,EAAcD,EAASE,OAAOhlC,KAC9BilC,EAAqB5jC,KAAKzI,OAAOiB,KAAKK,eAAeV,QAAQC,OACjE,GAAIsrC,EAAY/pC,YAAcC,EAAcoG,KAAKzI,OAAQmsC,EAAY/pC,WAAWE,SAAUgqC,QAAQD,IAAsB,CACpH,IAAIE,EAAYL,EAASM,UAAU3rC,OAC/B4rC,EAAWN,EAAY1oC,MAC3ByoC,EAASM,UAAUD,EAAY,GAAGG,UAAaC,aAAcF,EAAUG,aAAa,MAKhG5B,EAAYthC,UAAU0hC,eAAiB,SAAgDhmB,GACnF,IAAK,IAAIzkB,EAAI,EAAGA,EAAIykB,EAASynB,WAAWhsC,OAAQF,IACxCykB,EAASynB,WAAWlsC,GAAGgO,OACvByW,EAASynB,WAAWlsC,GAAGmsC,WAAcC,mBAAmB,KAIpE/B,EAAYthC,UAAU8hC,QAAU,WAC5B,OAAQzrC,EAAa0I,KAAKzI,SAAW8C,EAAU2F,KAAKzI,SAEjDgrC,KCrKPgC,GAA2B,WAI3B,SAASA,EAAUhtC,GACf6W,OAAKC,OAAOm2B,aACZxkC,KAAKzI,OAASA,EACdyI,KAAK+R,eACL/R,KAAKuI,mBAoIT,OA9HAg8B,EAAUtjC,UAAUgH,cAAgB,WAChC,MAAO,aAKXs8B,EAAUtjC,UAAUsH,iBAAmB,WACnCvI,KAAKzI,OAAOiR,GAAG,cAAexI,KAAK0mB,iBAAkB1mB,MACrDA,KAAKzI,OAAOiR,GAAG,gBAAiBxI,KAAKykC,qBAAsBzkC,OAK/DukC,EAAUtjC,UAAU4H,oBAAsB,WAClC7I,KAAKzI,OAAOuR,cAGhB9I,KAAKzI,OAAOwR,IAAI,cAAe/I,KAAK0mB,kBACpC1mB,KAAKzI,OAAOwR,IAAI,gBAAiB/I,KAAKykC,wBAO1CF,EAAUtjC,UAAUiH,QAAU,WAC1BlI,KAAK6I,uBAET07B,EAAUtjC,UAAUwjC,qBAAuB,SAAU5P,GACjD70B,KAAK+R,YAAc8iB,GAEvB0P,EAAUtjC,UAAU6b,IAAM,SAAUG,EAEpCP,EAAkBQ,EAAQN,GACtB,IAAItX,EAAQtF,KACRojC,EAAQpjC,KAAKzI,OAAOC,WACpBkkB,EAAOxiB,SACP6pC,GAAWzrC,EAAa0I,KAAKzI,SAAW8C,EAAU2F,KAAKzI,QAE3D,OADAmc,WAAS,UAAU,EAAOgI,GACnB,IAAImnB,QAAQ,SAAU9Z,EAAS+Z,GAClC,IAAIxoC,EAAKyoC,EAAU,IAAItrC,cAAY2rC,GAAS99B,EAAM/N,OAAOC,WACrDgb,EAAQ,IAAIC,QAMhB,GALKswB,IACDvwB,EAAQlN,EAAM2Q,cAAczD,GAC5BkB,WAAS,QAASlB,EAAOkJ,IAE7BpW,EAAM/N,OAAO+P,QAAQo9B,EAAuBjoC,SAAOif,EAAMuB,IACrD7jB,YAAU,SAAUsiB,GACpB,OAAO,KAEXphB,EAAG6Y,aAAaX,GAAOY,KAAK,SAAUtV,GAClC,IAAI6mC,EAAc,KAKlB,OAJKpsC,oBAAkB0kB,IAAyB1kB,oBAAkB0kB,EAAoBzlB,cAClFmtC,EAAc1nB,EAAoBzlB,YAEtCylB,EAAsB3X,EAAMs/B,wBAAwB3nB,EAAqBmmB,EAAOtlC,GACzEwH,EAAM/N,OAAOiB,KAAK2kB,gBAAgBL,IAAIxX,EAAM/N,OAAOiB,KAAMykB,EAAqBP,EAAkBQ,EAAQN,GAAQxJ,KAAK,SAAUymB,GAC/G,MAAf8K,EACA1nB,EAAoBzlB,WAAamtC,SAG1B1nB,EAAoBzlB,WAE/BuxB,EAAQ8Q,UAKxB0K,EAAUtjC,UAAUgV,cAAgB,SAAUzD,EAAOkJ,GAQjD,OAPKnjB,oBAAkBmjB,IAA6B,gBAApBA,EAAKzD,YAC9BjY,KAAKzI,OAAO+X,cACfoM,EAAKzD,WAAa,WAClBzF,EAAMM,UAAU,aAAc,eAC9BN,EAAMK,MAAM7S,KAAKzI,OAAO8F,gBAAiB,QAAS,MAClDmV,EAAQpZ,YAAU,mCAAoC4G,KAAKzI,OAAnD6B,CAA2DoZ,IAEhEA,GAEX+xB,EAAUtjC,UAAU2jC,wBAA0B,SAAUlpB,EAAM0nB,EAAOC,GACjE,IAAIj8B,KAEA27B,GAAWzrC,EAAa0I,KAAKzI,SAAW8C,EAAU2F,KAAKzI,QAkB3D,GAjBAmc,WAAS,QAAS1T,KAAKzI,OAAOiB,KAAKwd,gBAAgBC,eAAc,GAAO7O,GACxEsM,WAAS,YAAY,EAAMtM,GACtB7O,oBAAkBmjB,IAAUnjB,oBAAkBmjB,EAAKzD,aACpDvE,WAAS,aAAcgI,EAAKzD,WAAY7Q,GAEvC27B,GAAYxqC,oBAAkByH,KAAKzI,OAAO8F,mBAC3C2C,KAAKzI,OAAOoG,cACZqC,KAAKzI,OAAO8rB,WAAW9Q,kBAAkBhU,WAAS,SAAU8kC,IAC5D3vB,WAAS,aAAc1T,KAAKzI,OAAOqG,SAAUwJ,IAEjDpH,KAAKzI,OAAOuZ,OAAO,gBAAiB1J,GAEpCA,EAAOpH,KAAK+R,YACZqxB,EAAQ7qC,oBAAkB6O,EAAKmM,QAAUvT,KAAKzI,OAAOqG,SAAS8I,MAAM,GAAKU,EAAKmM,OACzEwvB,IACD/iC,KAAKzI,OAAOqG,aAEZ8d,GAAQA,EAAKlkB,YAAcurC,EAAS,CACpC,IAAI8B,EAAY7kC,KAAKzI,OAAOqG,SACxB2lC,EAAU7nB,EAAKlkB,sBAAsBC,cAAcikB,EAAKlkB,WAAWA,WAAWsE,KAAO4f,EAAKlkB,WAC9FwI,KAAKzI,OAAO8rB,WAAW9Q,kBAAkBgxB,GACzCH,EAAQpjC,KAAKzI,OAAOqG,SACpBoC,KAAKzI,OAAOqG,SAAWinC,EAI3B,OAFAnpB,EAAOnjB,oBAAkBmjB,MAAaA,EACtCA,EAAKlkB,WAAa,IAAIC,eAAcqE,KAAMsnC,IACnC1nB,GAMX6oB,EAAUtjC,UAAUylB,iBAAmB,SAAUtf,GAC7C,GAAIpH,KAAKzI,OAAOiB,KAAK4X,oBAAoBhJ,EAAKzH,OAAO0K,OAASrK,KAAKzI,OAAOkI,gBAAiB,CACvF,IAAIyL,KACAvM,EAAOvF,YAAU,OAAQgO,GAEzB0I,EADcvX,oBAAkBoG,EAAKoR,aACjBpR,EAAK3D,MAAQ2D,EAAKoR,YAC1C7E,EAAM45B,gBAAwB,EAANh1B,EACxB1I,EAAK8D,MAAQA,EAEjBlL,KAAKzI,OAAOuZ,OAAO,gBAAiB1J,GACpCpH,KAAKzI,OAAO+P,QAAQ,mBAAoBF,IAErCm9B,KC3IPQ,GAAsB,WACtB,SAASA,EAAKxtC,GACV6W,OAAKC,OAAO22B,QACZhlC,KAAKzI,OAASA,EACdyI,KAAKuI,mBA8IT,OAzIAw8B,EAAK9jC,UAAUsH,iBAAmB,WAC9BvI,KAAKzI,OAAOiR,GAAG+qB,EAAiCvzB,KAAKilC,0BAA2BjlC,MAChFA,KAAKzI,OAAOiR,GAAGmR,EAAsB3Z,KAAKklC,WAAYllC,OAK1D+kC,EAAK9jC,UAAU4H,oBAAsB,WAC7B7I,KAAKzI,OAAOuR,cAGhB9I,KAAKzI,OAAOwR,IAAIwqB,EAAiCvzB,KAAKilC,2BACtDjlC,KAAKzI,OAAOwR,IAAI4Q,EAAsB3Z,KAAKklC,cAM/CH,EAAK9jC,UAAUgH,cAAgB,WAC3B,MAAO,SAMX88B,EAAK9jC,UAAU6sB,QAAU,WACrB9tB,KAAKzI,OAAOiB,KAAK43B,YAAYtC,WAOjCiX,EAAK9jC,UAAUiH,QAAU,WACrBlI,KAAK6I,uBAOTk8B,EAAK9jC,UAAUivB,SAAW,SAAUC,GAChCnwB,KAAKzI,OAAOiB,KAAK43B,YAAYF,SAASC,IAO1C4U,EAAK9jC,UAAUovB,sBAAwB,SAAUC,GAC7CtwB,KAAKzI,OAAOiB,KAAK43B,YAAYC,sBAAsBC,IAKvDyU,EAAK9jC,UAAUgkC,0BAA4B,SAAU9vB,GACjDA,EAAW5b,OAAOS,SAAiC,aAAtBmb,EAAWxZ,OACpCyQ,eACApM,KAAKzI,OAAOqG,SAASC,OAAO,SAAUC,GAClC,OAAOA,EAAEjE,WAAasb,EAAW5b,OAAOM,WACzC,GAAGG,SAAiC,aAAtBmb,EAAWxZ,QAEhC,IAAIwpC,GACA5xB,OAAQvT,KAAKzI,OAAOqG,SACpBiB,IAAKsW,EAAWtW,IAChBlD,OAAQwZ,EAAWxZ,OACnBpC,OAAQ4b,EAAW5b,OACnBqT,MAAO5M,KAAKzI,OAAOqG,SAASxF,QAEhCmG,WAAS,oBAAqByB,KAAKzI,QAAQqc,mBAAmBuxB,IAElEJ,EAAK9jC,UAAUmkC,SAAW,SAAUC,EAAc7rB,EAAMjG,GAapD,IAAK,IAZD+xB,EAAa/sC,oBAAkBgb,MAAeA,EAC9CrW,EAAU,SAAUqoC,GACpBD,EAAWjsC,KAAKmgB,EAAK+rB,IACrB,IAAIC,KACAhsB,EAAK+rB,GAAGrrC,kBACRsrC,EAAMH,EAAaxnC,OAAO,SAAUC,GAChC,OAAO0b,EAAK+rB,GAAG1rC,WAAaiE,EAAEU,iBAElC8mC,EAAar4B,EAAOm4B,SAASC,EAAcG,EAAKF,KAGpDr4B,EAASjN,KACJulC,EAAI,EAAGA,EAAI/rB,EAAKphB,OAAQmtC,IAC7BroC,EAAQqoC,GAEZ,OAAOD,GAEXP,EAAK9jC,UAAUikC,WAAa,SAAUO,GAClC,IAAIngC,EAAQtF,KACR1F,EAAK,IAAI7C,cAAYguC,EAAelyB,QACxC,GAA8C,SAA1CvT,KAAKzI,OAAOgY,aAAaC,aAAyB,CAClD,IAAIgK,KACAksB,EAAY1lC,KAAKzI,OAAOiB,KAAKK,eAAeV,QAAQC,OAAS,IACf,UAA7C4H,KAAKzI,OAAOsB,eAAeF,eAA0E,SAA7CqH,KAAKzI,OAAOsB,eAAeF,eACpF,cAAgB,QAChB6Z,GAAQ,IAAIC,SAAQI,MAAM6yB,EAAU,QAAS,GACjDlsB,EAAOlf,EAAG4Z,aAAa1B,GACvBizB,EAAe74B,MAAQ4M,EAAKphB,OAC5B,IAEIutC,GAFAC,EAAO5lC,KAAKzI,OAAOiB,KAAK+W,aAAas2B,YACrCC,EAAU9lC,KAAKzI,OAAOiB,KAAK+W,aAAaiI,aACf,GAC7BhF,EAAQA,EAAMmzB,KAAKA,GAAMI,KAAKH,GAC9BpsB,EAAOlf,EAAG4Z,aAAa1B,GACvB,IAAI8yB,EAAatlC,KAAKolC,SAASK,EAAelyB,OAAQiG,GACtDisB,EAAelyB,OAAS+xB,MAEvB,CACD,IAAIta,EAAO,IAAIvzB,cAAYguC,EAAelyB,QACtCvZ,EAAW,IAAI8H,YAAU,WAAY,WAAY,MAAMkkC,GAAG,WAAY,gBAAY/qB,GAClFgrB,EAAYjb,EAAK9W,cAAa,IAAIzB,SAAQI,MAAM7Y,IAChDwmC,OAAa,EAEbA,EADAloC,EAAuB0H,KAAKzI,QACf0uC,EAGAA,EAAUpoC,OAAO,SAAUC,GACpC,OAAOxE,EAAgBgM,EAAM/N,OAAQuG,EAAGmoC,KAGhDR,EAAe74B,MAAQ4zB,EAAWpoC,OAC9Boa,EAAQ,IAAIC,QAAhB,IACImzB,EAAO5lC,KAAKzI,OAAOiB,KAAK+W,aAAas2B,SACrCC,EAAU9lC,KAAKzI,OAAOiB,KAAK+W,aAAaiI,YACxCgpB,EAAWpoC,OAAU0tC,EAAUF,IAE/BE,GADAA,EAAW9wB,KAAKkxB,MAAM1F,EAAWpoC,OAASwtC,IAAWpF,EAAWpoC,OAASwtC,EAAQ,EAAI,KACvD,EAC9B5lC,KAAKzI,OAAOiB,KAAKmjB,eAAgBpM,cAAgBiI,YAAasuB,KAAa,IAE3EH,EAAOC,GAAQE,EAAU,GAC7BtzB,EAAQA,EAAMmzB,KAAKA,GAAMI,KAAKH,GAC9B5a,EAAKxzB,WAAWsE,KAAO0kC,EACvBiF,EAAelyB,OAASyX,EAAK9W,aAAa1B,GAE9CxS,KAAKzI,OAAOuZ,OAAO,eAAgB20B,IAEhCV,KCrJPoB,GAAyB,WACzB,SAASA,EAAQ5uC,GACb6W,OAAKC,OAAO+3B,WACZpmC,KAAKzI,OAASA,EACdyI,KAAKuI,mBA4HT,OAtHA49B,EAAQllC,UAAUgH,cAAgB,WAC9B,MAAO,WAKXk+B,EAAQllC,UAAUsH,iBAAmB,WACjCvI,KAAKzI,OAAOiR,GAAG8d,EAAoBtmB,KAAKqmC,eAAgBrmC,MACxDA,KAAKzI,OAAOiR,GAAGygB,EAAqBjpB,KAAKsmC,oBAAqBtmC,OAKlEmmC,EAAQllC,UAAU4H,oBAAsB,WAChC7I,KAAKzI,OAAOuR,cAGhB9I,KAAKzI,OAAOwR,IAAIud,EAAoBtmB,KAAKqmC,gBACzCrmC,KAAKzI,OAAOwR,IAAIkgB,EAAqBjpB,KAAKsmC,uBAE9CH,EAAQllC,UAAUolC,eAAiB,SAAUj/B,GACzC,IAAI6wB,EAAOj4B,KAAKzI,OAEU,IAAtB6P,EAAKvI,IAAIkJ,UAAkBkwB,EAAKpxB,qBAAqBzO,OAAS,EAC9D4H,KAAKyvB,aAAawI,EAAKnjB,QAAQC,GAAK,sBAAuBkjB,EAAKnjB,QAAQC,GAAK,yBAAyB,GAGjGxc,oBAAkB0/B,EAAKz7B,wBAAwB4K,EAAKvI,IAAIkJ,cACpDxP,oBAAkB0/B,EAAKz7B,wBAAwB4K,EAAKvI,IAAIkJ,YACxDkwB,EAAKz7B,wBAAwB4K,EAAKvI,IAAIkJ,UAAU/M,MAC7Ci9B,EAAKz7B,wBAAwB4K,EAAKvI,IAAIkJ,SAAW,GAAG/M,MACxDgF,KAAKyvB,aAAawI,EAAKnjB,QAAQC,GAAK,wBAAwB,GAG5D/U,KAAKyvB,aAAawI,EAAKnjB,QAAQC,GAAK,wBAAwB,GAE5DkjB,EAAKz7B,wBAAwB4K,EAAKvI,IAAIkJ,UAAU/M,QAChDi9B,EAAKz7B,wBAAwB4K,EAAKvI,IAAIkJ,SAAW,GAAG/M,OACpDgF,KAAKyvB,aAAawI,EAAKnjB,QAAQC,GAAK,wBAAwB,GAEF,IAA1DkjB,EAAKz7B,wBAAwB4K,EAAKvI,IAAIkJ,UAAU/M,OAChDgF,KAAKyvB,aAAawI,EAAKnjB,QAAQC,GAAK,yBAAyB,GAEH,IAA1DkjB,EAAKz7B,wBAAwB4K,EAAKvI,IAAIkJ,UAAU/M,OAChDgF,KAAKyvB,aAAawI,EAAKnjB,QAAQC,GAAK,yBAAyB,IAI/C,IAAtB3N,EAAKvI,IAAIkJ,UAAmBxP,oBAAkB6O,EAAKzI,KAAKhF,aACxDqG,KAAKyvB,aAAawI,EAAKnjB,QAAQC,GAAK,yBAAyB,IAGrEoxB,EAAQllC,UAAUqlC,oBAAsB,SAAUl/B,GAC9C,IAAI6wB,EAAOj4B,KAAKzI,OAYhB,GAXsC,SAAlCyI,KAAKzI,OAAO2E,aAAaC,MAA0D,UAAvC6D,KAAKzI,OAAOiB,KAAK0D,aAAaC,MAC1EiL,EAAKqpB,KAAK1b,KAAO/U,KAAKzI,OAAOiB,KAAKsc,QAAQC,GAAK,YAC/C3N,EAAKC,QAAS,EACdrH,KAAKzI,OAAOiB,KAAK4D,WAAW2yB,YAE5B3nB,EAAKqpB,KAAK1b,KAAO/U,KAAKzI,OAAOiB,KAAKsc,QAAQC,GAAK,cAC/C/U,KAAKzI,OAAOioB,YAEZpY,EAAKqpB,KAAK1b,KAAO/U,KAAKzI,OAAOiB,KAAKsc,QAAQC,GAAK,gBAC/C/U,KAAKzI,OAAOkoB,cAEZrY,EAAKqpB,KAAK1b,KAAOkjB,EAAKz/B,KAAKsc,QAAQC,GAAK,WAAakjB,EAAKpxB,qBAAqBzO,OAAQ,CACvF,IAAImB,EAAS0+B,EAAKz7B,wBAAwBy7B,EAAK5xB,wBAAwB,GAAK,GACxE8xB,OAAY,EAChB,GAAI5+B,EAAOyB,MAAQi9B,EAAKpxB,qBAAqB,GAAG7L,MAC5C,IAAK,IAAI9C,EAAI,EAAGA,EAAI+/B,EAAKz7B,wBAAwBpE,OAAQF,IACjD+/B,EAAKz7B,wBAAwBtE,GAAG+E,WAAa1D,EAAOI,WAAWsD,WAC/Dk7B,EAAYjgC,QAKpBigC,EAAYF,EAAK5xB,wBAAwB,GAAK,EAElD4xB,EAAK7B,aAAa6B,EAAK5xB,wBAAwB,IAAK8xB,EAAW,SAEnE,GAAI/wB,EAAKqpB,KAAK1b,KAAOkjB,EAAKz/B,KAAKsc,QAAQC,GAAK,YAAckjB,EAAKpxB,qBAAqBzO,OAAQ,CAInF,IAHD2C,EAAQk9B,EAAK5xB,wBAAwB,GAErC1M,GADAw+B,OAAY,EACCF,EAAKpxB,qBAAqB,GAAGlN,YAC9C,IAASzB,EAAI,EAAGA,EAAI+/B,EAAKz7B,wBAAwBpE,OAAQF,IACjD+/B,EAAKz7B,wBAAwBtE,GAAG+E,WAAatD,EAAWsD,WACxDk7B,EAAYjgC,GAGpB+/B,EAAK7B,aAAar7B,GAAQo9B,EAAW,WAQ7CgO,EAAQllC,UAAU46B,WAAa,WAC3B,OAAO77B,KAAKzI,OAAOiB,KAAKg3B,cAAcqM,cAS1CsK,EAAQllC,UAAUwuB,YAAc,SAAUpb,EAAOkb,GAC7CvvB,KAAKzI,OAAOiB,KAAKg3B,cAAcC,YAAYpb,EAAOkb,IAOtD4W,EAAQllC,UAAUiH,QAAU,WACxBlI,KAAK6I,uBAEFs9B,KC/HPI,GAA2B,WAI3B,SAASA,EAAUhvC,GACf6W,OAAKC,OAAOm4B,aACZxmC,KAAKzI,OAASA,EACdyI,KAAKymC,oBACLzmC,KAAK4W,gBAmMT,OA7LA2vB,EAAUtlC,UAAUgH,cAAgB,WAChC,MAAO,WAEXs+B,EAAUtlC,UAAU4H,oBAAsB,WAClC7I,KAAKzI,OAAOuR,aAQpBy9B,EAAUtlC,UAAU8V,sBAAwB,SAAUH,EAAcmC,EAAc2tB,GAC9E1mC,KAAK4W,aAAeA,EACpB,IAAIld,EAEAiE,EACJA,KACA,IAAK,IAAII,EAAI,EAAG9E,EAHOC,OAAOC,KAAK4f,GAAc3gB,OAGT2F,EAAI9E,EAAK8E,IAAK,CACjC3E,YAAU,eAAgB2f,EAAahb,KAEpDJ,EAAWtE,KAAK0f,EAAahb,IAGrC,IACI4oC,EADAhvB,EAAgB7e,EAAkB6E,GAEtCgpC,EAAchpC,EAAW+I,QAKpB,IADD24B,EAHAuH,EAAe1tC,OAAOC,KAAK6G,KAAKzI,OAAOY,SAASC,OAChDyuC,EAAgB3tC,OAAOC,KAAK6G,KAAKzI,OAAOkf,YAAYre,OAG/CF,EAAI,EAAb,IAAgBe,EAFCC,OAAOC,KAAKwe,GAAevf,OAEVF,EAAIe,EAAKf,IAGvC,GAFAwB,EAAeie,EAAczf,GAC7BmnC,EAAqBr/B,KAAK8mC,sBAAsBptC,EAAcitC,GACtC,CAuCpB,IAAK,IAtCDzpC,EAAU,SAAU6pC,EAAiBC,GACrC,IAAIvW,OAAO,EACXA,KACA,IAAK,IAAItmB,EAAc,EAAG88B,EAAQL,EAAcz8B,EAAc88B,EAAO98B,IAAe,CAGhFsmB,EAFYl4B,oBAAkBa,YAAU,QAAS6T,EAAO1V,OAAOY,QAAQgS,KACnE8C,EAAO1V,OAAOY,QAAQgS,GAAe/Q,YAAU,QAAS6T,EAAO1V,OAAOY,QAAQgS,KACpE,KAElB,IAAI8C,EAAO1V,OAAOkf,WAAWswB,EAAkB,GAAGG,iBA0B9C,MAAO,WAzBPzW,EAAOxjB,EAAOk6B,kBAAkB1W,EAAMxjB,EAAO1V,OAAOkf,WAAWswB,EAAkB,IACjF,IAAIK,EACJT,EAAYtoC,IAAI,SAAUP,EAAG5F,GAAS4F,EAAEjE,WAAaH,EAAaG,WAC9DutC,EAAQlvC,KAGZ,IAAImvC,EAAeD,EAAQ/H,EAAqB0H,EAC5CO,EAAgB7qC,YAAW/C,UACxB4tC,EAAcntC,oBACdmtC,EAAcr6B,EAAO1V,OAAOiG,cACnCkW,WAAS,aAAc4zB,EAAe7W,GACtC,IAAIz1B,EAAQ5B,YAAU,QAASkuC,GAC/B5zB,WAAS,QAAS1Y,EAAQ,EAAGy1B,GACjBr3B,YAAU,QAASkuC,GAG/B,GAFA5zB,WAAS,gBAAgB,EAAM+c,GAC/B/c,WAAS,iBAAkB4zB,EAAcztC,SAAU42B,GAC/CiW,EAAQ,CACR,IAAIvsC,EAAef,YAAU,eAAgBM,GACzCS,EAAa/B,QACb+B,EAAad,KAAKo3B,GAG1BkW,EAAYppC,OAAO8pC,EAAc,EAAG5W,IAMxCxjB,EAASjN,KACJ+mC,EAAkB,EAAGC,EAAQH,EAAeE,GAAmBC,EAAOD,IAC3E7pC,EAAQ6pC,GAEZ/mC,KAAKymC,oBAGb,OAAOE,GAEXJ,EAAUtlC,UAAU6lC,sBAAwB,SAAUnpC,EAAYC,GAG9D,IAAK,IADDrE,EACKrB,EAAI,EAAGe,EAFGC,OAAOC,KAAKyE,GAAUxF,OAELF,EAAIe,EAAKf,IAAK,CAC9CqB,EAASqE,EAAS1F,GAGlB,GAAIyF,KAFWpF,oBAAkBgB,EAAOI,YAAc,KAClDiE,EAASC,OAAO,SAAUC,GAAK,OAAOA,EAAEjE,WAAaN,EAAOI,WAAWE,WAAa,IAC3D,CACzBmG,KAAKymC,iBAAiBptC,KAAKE,GAE3B,IADeH,YAAU,kBAAmBG,GAKxC,SAHAyG,KAAK8mC,sBAAsBvtC,EAAQqE,IAO/C,OAAOoC,KAAKymC,iBAAiBruC,QAEjCmuC,EAAUtlC,UAAUkmC,kBAAoB,SAAUI,EAAUC,GAExD,IAAK,IAAItvC,EAAI,EAAGe,EADUC,OAAOC,KAAKquC,EAAQrvC,SAASC,OACZF,EAAIe,EAAKf,IAIhD,IAAK,IAHDuvC,EAAgBlvC,oBAAkBivC,EAAQrvC,QAAQD,GAAGsD,YAAcgsC,EAAQrvC,QAAQD,GAAGgY,MACtFs3B,EAAQrvC,QAAQD,GAAGsD,WAEd2xB,EAAK,EAAGua,EADNxuC,OAAOC,KAAKouC,GACSpa,EAAKua,EAAOtvC,OAAQ+0B,IAAM,CACtD,IAAIz0B,EAAMgvC,EAAOva,GACbz0B,IAAQ+uC,IACRF,EAAS7uC,GAAOsH,KAAK2nC,iBAAiBH,EAAQrvC,QAAQD,GAAI8H,KAAKymC,mBAO3E,OAAOc,GAEXhB,EAAUtlC,UAAU0mC,iBAAmB,SAAUC,EAAe32B,GAC5D,IACI42B,EADA70B,EAAM,IAAIP,QAEdo1B,KACA,IAAI7sB,KACAlQ,EAAQvS,oBAAkBqvC,EAAc13B,YACiB+K,EAAzDjb,KAAKzI,OAAO0Y,iBAAiB23B,EAAc13B,OAAOpF,KACtD88B,EAAcnsB,qBAAsBjB,OAAQxa,KAAK8nC,kBAAkBF,EAAcptB,OAAQ1P,KACzF88B,EAActtB,aAAata,KAAKzI,OAAOiB,KAAKylB,QAC5C,IAAIvD,EAAWktB,EAAc9sB,gBAAwC,SAAUvU,GAAK,OAAOA,GAC3FqhC,EAAc7sB,YAAYC,GAC1B,IAAI+sB,EAAUH,EAAcpsB,YAAY,GACxCxI,EAAIE,QAAUlT,KAAK4W,aACnB5D,EAAIg1B,gBACJ,IAEIC,EAFAC,EAAU,IAAIzwC,cAAYwZ,GAAaiD,aAAalB,GACpDm1B,EAAQP,EAAc98B,KAE1Bq9B,GAASP,EAAc98B,MACvB,IAAK,IAAI5S,EAAI,EAAGA,EAAIiwC,EAAM/vC,OAAQF,IAAK,CACnC+vC,EAAaE,EAAMjwC,GACnB,IAAIQ,EAAMkvC,EAAc13B,MAAQ,MAAQi4B,EAAMjwC,GAAGkwC,cAC7CC,EAAmB,WAAbF,EAAMjwC,GAAkBkB,YAAU,aAAc8uC,GACtDI,qBAAmBH,EAAMjwC,GAAIgwC,EAASN,EAAe5nC,KAAKzI,QAC1DgxC,EAAOX,EAAcpsC,WACrBgtC,EAAuB,WAAbL,EAAMjwC,GAAkBmwC,EAAI3vC,GAAO2vC,EACjDR,EAAOU,GAAQV,EAAOU,OACtBV,EAAOU,GAAM7vC,GAAO8vC,EACpBX,EAAOU,GAAMJ,EAAMjwC,IAAOK,oBAAkB8vC,GAA2B,IAApB3tB,EAAS8tB,GAEhExtB,EAAOR,OAASotB,EAAc9sB,eAC9B,IAAIjL,EAAclF,gBAAc,MAC5BC,UAAW,cAEfwG,iBAAevB,EAAak4B,EAAQ5xB,GAAG0xB,EAAOD,EAAcpsC,YAAawE,KAAKzI,OAAQwwC,EAAQxsB,WAC9F,IAAIzgB,EAAQ+sC,EAAOD,EAAcpsC,YAAYysC,GAE7C,OAA8C,IAA1Cp4B,EAAY9D,UAAUrN,QAAQ5D,GACf+U,EAAY9D,UAAYjR,EAIhC+U,EAAY9D,WAG3Bw6B,EAAUtlC,UAAU6mC,kBAAoB,SAAUW,EAAe39B,GAC7D,GAAIvS,oBAAkBuS,IAAkC,iBAAlB29B,EAClC,OAAOA,EAEX,IAAI/tC,EACJ,OAAQoQ,GACJ,IAAK,SACDpQ,GAAQ8f,OAAQiuB,GAChB,MACJ,IAAK,WACD/tC,GAAQoQ,KAAM,WAAY2P,SAAUguB,GACpC,MACJ,IAAK,OACD/tC,GAAQoQ,KAAMA,EAAM2P,SAAUguB,GAGtC,OAAO/tC,GAOX6rC,EAAUtlC,UAAUiH,QAAU,WAC1BlI,KAAK6I,uBAEF09B,KC3MPmC,GAAsB,WACtB,SAASA,EAAKlwC,GACV4V,OAAKC,OAAOs6B,QACZ3oC,KAAKzI,OAASiB,EACdwH,KAAK0R,WACL1R,KAAK4oC,kBACL5oC,KAAK4R,aAAe,EACpB5R,KAAK3E,iBAAmB9C,oBAAkByH,KAAKzI,OAAO8F,iBACtD2C,KAAKuI,mBAyFT,OAnFAmgC,EAAKznC,UAAUgH,cAAgB,WAC3B,MAAO,QAKXygC,EAAKznC,UAAUsH,iBAAmB,WAC9BvI,KAAKzI,OAAOiR,GAAG,cAAexI,KAAK6oC,YAAa7oC,MAChDA,KAAKzI,OAAOiR,GAAG,aAAcxI,KAAK8oC,qBAAsB9oC,OAK5D0oC,EAAKznC,UAAU4H,oBAAsB,WAC7B7I,KAAKzI,OAAOuR,cAGhB9I,KAAKzI,OAAOwR,IAAI,cAAe/I,KAAK6oC,aACpC7oC,KAAKzI,OAAOwR,IAAI,aAAc/I,KAAK8oC,wBAEvCJ,EAAKznC,UAAU6nC,qBAAuB,SAAUC,GAC5C,IAAIpqC,EAAOoqC,EAAWhtC,aAClBid,EAAS+vB,EAAW/vB,OACxBhZ,KAAKgpC,YAAYrqC,EAAMqa,GACvBhZ,KAAK4R,aAAe,EACpBm3B,EAAWhtC,aAAeiE,KAAK4oC,eAC/B5oC,KAAK4oC,mBAETF,EAAKznC,UAAU+nC,YAAc,SAAUrqC,EAAMqa,GACzC,IAAK,IAAIrY,EAAI,EAAGA,EAAIhC,EAAKvG,OAAQuI,IAW7B,GAVIX,KAAKzI,OAAOiB,KAAKK,eAAeV,QAAQC,OAAS,GAA6C,KAAxC4H,KAAKzI,OAAOiB,KAAKC,eAAeC,IACjFH,oBAAkBqB,EAAcoG,KAAKzI,OAAQoH,EAAKgC,GAAG9G,UAAU,MAChEmG,KAAK4R,cACL5R,KAAK4oC,eAAe5oC,KAAK4R,aAAejT,EAAKgC,KAIjDX,KAAK4R,cACL5R,KAAK4oC,eAAe5oC,KAAK4R,aAAejT,EAAKgC,IAE7ChC,EAAKgC,GAAGzG,gBAAiB,CACzB,IAAI+uC,EAAa,IAAIxxC,cAAYkH,EAAKgC,GAAGxG,cAAc+Z,aAAa8E,GACpEhZ,KAAKgpC,YAAYC,EAAWjwB,KAWxC0vB,EAAKznC,UAAUod,WAAa,SAAU7iB,EAAY6d,EAAW8E,GACzDne,KAAKzI,OAAOiB,KAAK6lB,WAAW7iB,EAAY6d,EAAW8E,IAEvDuqB,EAAKznC,UAAUsd,iBAAmB,SAAUrO,GACxClQ,KAAKzI,OAAOiB,KAAK+lB,iBAAiBrO,IAOtCw4B,EAAKznC,UAAU4nC,YAAc,WACzB7oC,KAAKzI,OAAOokB,eAAgBld,aAAc0mB,sBAAoBnlB,KAAKzI,OAAOiB,KAAKiG,gBAAiB,IAMpGiqC,EAAKznC,UAAUqd,aAAe,WAC1Bte,KAAKzI,OAAOiB,KAAK8lB,eACjBte,KAAK6oC,eAOTH,EAAKznC,UAAUiH,QAAU,WACrBlI,KAAK6I,uBAEF6/B,KCpGPQ,GAA4B,WAI5B,SAASA,EAAW3xC,GAChB6W,OAAKC,OAAO86B,cACZnpC,KAAKzI,OAASA,EAelB,OAbA2xC,EAAWjoC,UAAUmoC,cAAgB,WACjC,OAAOppC,KAAKzI,OAAOiB,KAAK6wC,iBAAiBD,iBAE7CF,EAAWjoC,UAAUiH,QAAU,aAO/BghC,EAAWjoC,UAAUgH,cAAgB,WACjC,MAAO,cAEJihC,KCpBPI,GAA6B,WAC7B,SAASA,EAAY/xC,GACjB6W,OAAKC,OAAOk7B,eACZvpC,KAAKzI,OAASA,EACdyI,KAAKuI,mBAgET,OA3DA+gC,EAAYroC,UAAUsH,iBAAmB,WACrCvI,KAAKzI,OAAOiR,GAAG,kBAAmBxI,KAAKwD,gBAAiBxD,MACxDA,KAAKzI,OAAOiR,GAAG,mBAAoBxI,KAAKyD,iBAAkBzD,OAK9DspC,EAAYroC,UAAU4H,oBAAsB,WACpC7I,KAAKzI,OAAOuR,cAGhB9I,KAAKzI,OAAOwR,IAAI,kBAAmB/I,KAAKwD,iBACxCxD,KAAKzI,OAAOwR,IAAI,mBAAoB/I,KAAKyD,oBAE7C6lC,EAAYroC,UAAUuC,gBAAkB,SAAU4D,GAC9C,IAAIoiC,EAASpiC,EAAK0N,QAAQ3L,cAAc,IAAMnJ,KAAKzI,OAAOud,QAAQC,GAAK,6BACnE00B,EAAariC,EAAK0N,QAAQ3L,cAAc,IAAMnJ,KAAKzI,OAAOud,QAAQC,GAAK,2BACvEy0B,KACkD,IAA9CxpC,KAAKzI,OAAOiB,KAAK0D,aAAawmB,YAC9B8mB,EAAOt+B,MAAMwE,QAAU,OAGvB85B,EAAOt+B,MAAMwE,QAAU,SAGQ,SAAlC1P,KAAKzI,OAAO2E,aAAaC,MAAqD,UAAlC6D,KAAKzI,OAAO2E,aAAaC,MACjE5D,oBAAkBkxC,IAAkBA,EAAWjjC,UAAUC,SAAS,iBACvEgjC,EAAWv+B,MAAMwE,QAAU,SAGnC45B,EAAYroC,UAAUwC,iBAAmB,SAAU2D,GAC1B,UAAjBA,EAAKqpB,KAAK1b,IAAmC,UAAjB3N,EAAKqpB,KAAK1b,KACtC/U,KAAKzI,OAAOuZ,OAAO,0BAA2B1J,GAC9CpH,KAAKzI,OAAOokB,eAAgBzf,cAAgBQ,eAAgB0K,EAAKqpB,KAAK1b,MAAQ,GAC9E/U,KAAKzI,OAAOs3B,cAOpBya,EAAYroC,UAAUgH,cAAgB,WAClC,MAAO,eAOXqhC,EAAYroC,UAAUiH,QAAU,WAC5BlI,KAAK6I,uBAMTygC,EAAYroC,UAAU6kB,eAAiB,WACnC,OAAO9lB,KAAKzI,OAAOiB,KAAKsxB,kBAAkBhE,kBAEvCwjB,KChEPI,GAA2B,WAC3B,SAASA,EAAUnyC,GACfyI,KAAK2pC,gBAAkB,EACvB3pC,KAAKwR,aAAe,eACpBxR,KAAKoc,eAAiB,iBACtBpc,KAAK4pC,qBACL5pC,KAAK6pC,uBACL7pC,KAAK8pC,qBACL9pC,KAAKzI,OAASA,EACdyI,KAAK3E,iBAAmB9C,oBAAkBhB,EAAO8F,iBACjD2C,KAAK+pC,gBACL/pC,KAAKzD,sBACLyD,KAAKgqC,OAAQ,EACbhqC,KAAKuI,mBAugBT,OArgBAmhC,EAAUzoC,UAAUsH,iBAAmB,WACnCvI,KAAKzI,OAAOiR,GAAG2hB,GAAkBnqB,KAAK+D,UAAW/D,MACjDA,KAAKzI,OAAOiR,GAAG8hB,GAAiBtqB,KAAKmE,SAAUnE,MAC/CA,KAAKzI,OAAOiR,GAAGgiB,GAAuBxqB,KAAKqE,eAAgBrE,MAC3DA,KAAKzI,OAAOiR,GAAGsR,GAAkB9Z,KAAKuE,UAAWvE,MACjDA,KAAKzI,OAAOiR,GAAGkiB,GAA0B1qB,KAAKoE,kBAAmBpE,MACjEA,KAAKzI,OAAOiR,GAAG+hB,GAAwBvqB,KAAKsE,gBAAiBtE,MAC7DA,KAAKzI,OAAOiR,GAAG,kBAAmBxI,KAAKiqC,gBAAiBjqC,MACxDA,KAAKzI,OAAOiR,GAAG,oBAAqBxI,KAAKkqC,kBAAmBlqC,OAKhE0pC,EAAUzoC,UAAU4H,oBAAsB,WAClC7I,KAAKzI,OAAOuR,cAGhB9I,KAAKzI,OAAOwR,IAAIohB,GAAkBnqB,KAAK+D,WACvC/D,KAAKzI,OAAOwR,IAAIuhB,GAAiBtqB,KAAKmE,UACtCnE,KAAKzI,OAAOwR,IAAI+Q,GAAkB9Z,KAAKuE,WACvCvE,KAAKzI,OAAOwR,IAAIyhB,GAAuBxqB,KAAKqE,gBAC5CrE,KAAKzI,OAAOwR,IAAI2hB,GAA0B1qB,KAAKoE,mBAC/CpE,KAAKzI,OAAOwR,IAAIwhB,GAAwBvqB,KAAKsE,iBAC7CtE,KAAKzI,OAAOwR,IAAI,kBAAmB/I,KAAKiqC,iBACxCjqC,KAAKzI,OAAOwR,IAAI,oBAAqB/I,KAAKkqC,qBAO9CR,EAAUzoC,UAAUiH,QAAU,WAC1BlI,KAAK6I,uBAKT6gC,EAAUzoC,UAAUkpC,gBAAkB,WAClC,OAAOnqC,KAAK+pC,cAKhBL,EAAUzoC,UAAUmpC,eAAiB,WACjC,OAAOpqC,KAAK1E,aAKhBouC,EAAUzoC,UAAUopC,iBAAmB,WACnC,OAAOrqC,KAAKzE,eAKhBmuC,EAAUzoC,UAAUqpC,mBAAqB,WACrC,OAAOtqC,KAAK2pC,iBAEhBD,EAAUzoC,UAAUgpC,gBAAkB,WAClC,IAGIlvC,EAHA4D,EAAQqB,KAAKzI,OAAOiB,KAAKhB,sBAAsBC,cAC/CuI,KAAKzI,OAAOiB,KAAKhB,WAAWA,WAAWsE,KAAOkE,KAAKzI,OAAOiB,KAAKhB,WAC/Dy4B,EAAajwB,KAAKzI,OAAOiB,KAAKoD,0BAA0B,GAE5D,IAAKrD,oBAAkByH,KAAK4pC,oBAAsB5pC,KAAK4pC,kBAAkBxxC,OACrE,IAAK,IAAIF,EAAI,EAAGA,EAAI8H,KAAK4pC,kBAAkBxxC,OAAQF,IAC/C6C,EAAQ4D,EAAKN,IAAI,SAAUP,GAAK,OAAOA,EAAEmyB,KAAgBvxB,QAAQsB,KAAK4pC,kBAAkB1xC,GAAG+3B,IAC3FtxB,EAAKpB,OAAOxC,EAAO,GAG3BiF,KAAK4pC,kBAAoB5pC,KAAK+pC,aAAe/pC,KAAK8pC,kBAAoB9pC,KAAK6pC,oBAAsB7pC,KAAKzD,uBAE1GmtC,EAAUzoC,UAAU8C,UAAY,SAAUqD,GACtC,IAAImjC,EAAkBnjC,EAAK7H,KAAK4gB,UAC5BqqB,EAAaxqC,KAAKzI,OAAOmI,eAAiBM,KAAKzI,OAAO4H,mBAS1D,GARIqrC,GAAcpjC,EAAKqjC,aAAa1vC,MAAQyvC,IACxCD,GAAoCC,GAEpCD,IAAoBvqC,KAAKzI,OAAOkI,iBAChCO,KAAKzI,OAAO8H,aAAaC,YAAaX,KAAMyI,EAAK0C,QAASvK,KAAM6H,EAAK7H,KACjEI,OAAQK,KAAKzI,OAAOiB,KAAKkyC,iBAAiBtjC,EAAK7H,KAAK4gB,aAGxDngB,KAAKgqC,OAA2C,UAAlChqC,KAAKzI,OAAO2E,aAAaC,MAAgE,WAA5C6D,KAAKzI,OAAO2E,aAAaQ,eAA6B,CACjH,IAAIiC,EAAQqB,KAAKzI,OAAOiB,KAAKhB,sBAAsBC,cAC/CuI,KAAKzI,OAAOiB,KAAKhB,WAAWA,WAAWsE,KAAOkE,KAAKzI,OAAOiB,KAAKhB,WAC/DmzC,OAAQ,EAGRC,EAAe5qC,KAAKzI,OAAOiB,KAAKoD,0BAA0B,GAC1DivC,OAAmB,EACnBnxC,OAAe,EACfoxC,OAAa,EAEbnxC,EAAa,aAEjBD,EAAesG,KAAKzE,eAAiB,EAAIyE,KAAK+pC,aAAa/pC,KAAK1E,aAAa3B,GAAc,KAC3F,IAAI2D,OAAY,EACZkB,OAAiB,EACjBnB,OAAkB,EAClB0tC,EAA6D,QAA5C/qC,KAAKzI,OAAO2E,aAAaQ,iBAAoD,IAAxBsD,KAAKzE,cAAuB,EACtD,UAA5CyE,KAAKzI,OAAO2E,aAAaQ,eAA6BsD,KAAK1E,YACrD0E,KAAK1E,YAAc,EAE7B,GADAyvC,EAAiB/qC,KAAKgrC,wBAAwBD,GAC1C/qC,KAAKirC,iBAAkB,CAcvB,GAbIjrC,KAAK+pC,aAAa3xC,SAClBkF,EAAY0C,KAAK+pC,aAAa/pC,KAAK1E,aAAa0E,KAAKzI,OAAO+F,WAC5DD,EAAkB2C,KAAK+pC,aAAa/pC,KAAK1E,aAAa0E,KAAKzI,OAAO8F,iBAC9D2C,KAAK+pC,aAAa/pC,KAAK1E,aAAa3B,KACpC6E,EAAiBwB,KAAK+pC,aAAa/pC,KAAK1E,aAAa3B,GAAoB,WAGjFqG,KAAK4pC,kBAAoBpvC,EAAYwF,KAAK4pC,mBAC1C5pC,KAAK8pC,kBAAoBtvC,EAAYwF,KAAK8pC,mBAC1C9pC,KAAK8pC,kBAAkBzwC,KAAK2G,KAAK+pC,aAAa/pC,KAAK1E,cACnDqvC,EAAQ3qC,KAAKzI,OAAOiB,KAAK67B,gBAAgB0W,GAAgBG,QACzDP,EAAM9wC,SAAWgb,SAAO7U,KAAKzI,OAAOud,QAAQC,GAAK,UACjDrB,WAAS,sBAAwBi3B,EAAM9wC,SAAU8wC,EAAO3qC,KAAKzI,SACxDozC,EAAMxtC,eAAe,SAAU,CAEhC,GADA6C,KAAKmrC,YAAqC,IAAxBnrC,KAAKzE,cAAuB,EAAIyE,KAAKmrC,WACP,UAA5CnrC,KAAKzI,OAAO2E,aAAaQ,gBAEzB,GADAiuC,EAAMS,cAAgB1xC,EAClBsG,KAAKzE,eAAiB,EAAG,CACzBovC,EAAMhxC,WAAa8C,YAAWuD,KAAK+pC,aAAa/pC,KAAK1E,cACrDqvC,EAAMnsC,eAAiBmsC,EAAMhxC,WAAWE,gBACjC8wC,EAAMhxC,WAAWQ,oBACjBwwC,EAAMhxC,WAAWqG,KAAKzI,OAAOiG,cACpCmtC,EAAM3vC,MAAQ2vC,EAAMhxC,WAAWqB,MAAQ,EACvC2vC,EAAM5vC,MAAQiF,KAAKmrC,WACnB,IAAIE,EAAmBpxC,EAAoB+F,KAAK+pC,aAAa/pC,KAAK1E,cAAclD,OAC5EmB,EAASU,EAAoB+F,KAAK+pC,aAAa/pC,KAAK1E,cAAc+vC,EAAmB,GACzF9xC,EAAShB,oBAAkBgB,GAAUyG,KAAK+pC,aAAa/pC,KAAK1E,aAAe/B,EAC3EsxC,EAAmBlsC,EAAKN,IAAI,SAAUP,GAAK,OAAOA,EAAE8sC,KAAkBlsC,QAAQnF,EAAOqxC,IACjF5qC,KAAK3E,kBACLsvC,EAAM3qC,KAAKzI,OAAO8F,iBAAmBC,GAEzCG,EAAgBmtC,EAAcD,EAAMhxC,WAAY,MAAOqG,KAAKzI,OAAQyI,KAAK3E,gBAAiBsvC,SAG7F,IAAiD,UAA5C3qC,KAAKzI,OAAO2E,aAAaQ,gBAA0E,UAA5CsD,KAAKzI,OAAO2E,aAAaQ,kBAClFnE,oBAAkByH,KAAK+pC,aAAa/pC,KAAK1E,cAAe,CAS5D,GARAqvC,EAAM3vC,MAAQgF,KAAK+pC,aAAa/pC,KAAK1E,aAAkB,MACnDqvC,EAAM3vC,OAASgF,KAAKzE,eAAiB,IACrCovC,EAAMhxC,WAAaD,EACnBixC,EAAMnsC,eAAiBA,SAChBmsC,EAAMhxC,WAAWQ,oBACjBwwC,EAAMhxC,WAAWqG,KAAKzI,OAAOiG,eAExCmtC,EAAM5vC,MAAoD,UAA5CiF,KAAKzI,OAAO2E,aAAaQ,eAA6BsD,KAAKmrC,WAAanrC,KAAKmrC,WAAa,EACxD,UAA5CnrC,KAAKzI,OAAO2E,aAAaQ,gBAA8BsD,KAAKzE,eAAiB,EAAG,CAC5E8vC,EAAmBpxC,EAAoB+F,KAAK+pC,aAAa/pC,KAAK1E,cAAclD,OAC5EmB,EAASU,EAAoB+F,KAAK+pC,aAAa/pC,KAAK1E,cAAc+vC,EAAmB,GACzF9xC,EAAShB,oBAAkBgB,GAAUyG,KAAK+pC,aAAa/pC,KAAK1E,aAAe/B,EAC3EsxC,EAAmBlsC,EAAKN,IAAI,SAAUP,GAAK,OAAOA,EAAE8sC,KAAkBlsC,QAAQnF,EAAOqxC,IAEzF,GAAgD,UAA5C5qC,KAAKzI,OAAO2E,aAAaQ,gBAA8BsD,KAAKzE,eAAiB,EAAG,CAC5EhC,EAASyG,KAAK+pC,aAAa/pC,KAAK1E,aACpCuvC,EAAmBlsC,EAAKN,IAAI,SAAUP,GAAK,OAAOA,EAAE8sC,KAAkBlsC,QAAQnF,EAAOqxC,IAErF5qC,KAAK3E,kBACLsvC,EAAM3qC,KAAKzI,OAAO8F,iBAAmBA,GAG7CstC,EAAM5vC,OAAyB,IAAjB4vC,EAAM5vC,MAAe,EAAI4vC,EAAM5vC,MAC7C4vC,EAAMzwC,iBAAkB,EACxBywC,EAAMxwC,gBACN6F,KAAK+pC,aAAaxsC,OAAOotC,EAAM5vC,MAAO,EAAG4vC,GACzC3qC,KAAKzD,mBAAmBgB,OAAOotC,EAAM5vC,MAAO,EAAG4vC,GAE3CG,EADAD,GAIaF,EAAM5vC,MAEyB,UAA5CiF,KAAKzI,OAAO2E,aAAaQ,iBACzBouC,EAA6B,IAAhBH,EAAM5vC,MAAc+vC,EAAaA,EAAa,GAE/DnsC,EAAKpB,OAAOutC,EAAY,EAAGH,GAC3B3qC,KAAK4pC,kBAAkBvwC,KAAKsxC,GAEhC3qC,KAAKzI,OAAOiB,KAAK67B,gBAAgB0W,GAAgBpsC,KAAOgsC,EACxD3qC,KAAKirC,kBAAmB,GAExBjrC,KAAKzI,OAAOmI,eAAiBM,KAAKzI,OAAO4H,oBACoB,QAA1Da,KAAKzI,OAAOiB,KAAK67B,gBAAgB0W,GAAgB7qC,OACpDM,QAAMR,KAAKzD,mBAAmBwuC,GAAiB/qC,KAAKzI,OAAOiB,KAAK67B,gBAAgB0W,GAAgBG,WAI5GxB,EAAUzoC,UAAUoD,eAAiB,SAAUvG,GAE3C,GAAsC,SAAlCkC,KAAKzI,OAAO2E,aAAaC,MAAmB6D,KAAKzI,OAAO6E,WAAuB,aAG/E,OAFA0B,EAAEuJ,QAAS,OACXrH,KAAKzI,OAAO6E,WAAuB,cAAI,GAG3C4D,KAAKzE,cAAgByE,KAAKzI,OAAOiB,KAAKqtB,iBACtC7lB,KAAK1E,YAAc0E,KAAKzI,OAAOiB,KAAKqtB,kBAAoB,EAAI7lB,KAAKzI,OAAOiB,KAAKqtB,iBAAmB,EAChG7lB,KAAKvE,aAAeuE,KAAKzI,OAAOsP,qBAAqB,IAEzD6iC,EAAUzoC,UAAUkD,SAAW,SAAUrG,GACrC,GAAgD,WAA5CkC,KAAKzI,OAAO2E,aAAaQ,eAA6B,CACtDsD,KAAKgqC,OAAQ,EACbhqC,KAAKirC,kBAAmB,EACxB,IAAIK,EAAc,EAMlB,GALKtrC,KAAK+pC,aAAa3xC,SACnB4H,KAAK4pC,qBACL5pC,KAAK+pC,aAAevvC,EAAYwF,KAAKzI,OAAOiB,KAAKgE,yBACjDwD,KAAKzD,mBAAqB/B,EAAYwF,KAAKzI,OAAOiB,KAAKgE,0BAEX,QAA5CwD,KAAKzI,OAAO2E,aAAaQ,eAA0B,CACnD,IAAI3D,EAAUiH,KAAKzI,OAAOiB,KAAKgE,wBACO,UAAlCwD,KAAKzI,OAAO2E,aAAaC,OAAqB6D,KAAKzI,OAAO8E,kBAAkB2D,KAAKwR,cAAcpZ,OAAS,GACrG4H,KAAKzI,OAAO8E,kBAAkB2D,KAAKoc,gBAAgBhkB,UACtDW,EAAUiH,KAAK+pC,cAEnB/pC,KAAKurC,iBAAiBxyC,GACtBiH,KAAKzI,OAAOuZ,OAAOua,MACnBrrB,KAAK2pC,gBAAkB,EAE3B3pC,KAAKwrC,iBAEL,IAAIC,EAAcltC,WAAS,cAAeyB,KAAKzI,OAAOiB,MAClDkzC,EAAQ1rC,KAAKzI,OAAO+d,kBACpBtV,KAAKzI,OAAO8E,kBAAkB2D,KAAKoc,gBAAgBhkB,QAAsD,UAA5C4H,KAAKzI,OAAO2E,aAAaQ,gBACtF4uC,EAAcxtC,EAAEe,IAAIkJ,SACpB0jC,EAAYja,aAAama,OAAOA,OAAS3rC,KAAK2rC,QAG9CL,EAAcI,EAAMj2B,uBAAuB,cAAc,GAAG1N,SAKhE0jC,EAAYja,aAAama,OAAO7F,SAAWwF,EAAaG,EAAYja,aAAama,OAAO7F,QAAQ,MAGxG4D,EAAUzoC,UAAUmD,kBAAoB,SAAUtG,GACzCkC,KAAK+pC,aAAa3xC,SACnB4H,KAAK+pC,aAAevvC,EAAYwF,KAAKzI,OAAOiB,KAAKgE,yBACjDwD,KAAKzD,mBAAqB/B,EAAYwF,KAAKzI,OAAOiB,KAAKgE,0BAE3D,IAAIivC,EAAcltC,WAAS,cAAeyB,KAAKzI,OAAOiB,MACtDwH,KAAK2rC,OAASF,EAAYja,aAAama,OAAOA,OAC9C3rC,KAAKzI,OAASyI,KAAKzI,OACnB,IACIwB,EACA4F,EAFAE,KAGA+sC,EAAa5rC,KAAKzI,OAAOiB,KAAKoD,0BAA0B,GAExDiwC,EAAS5xC,EADb0E,EAAOqB,KAAKzI,OAAOiB,KAAKqO,qBAAqB7G,KAAKzI,OAAOiB,KAAKqO,qBAAqBzO,OAAS,IAE5F,GAAIyzC,EAAOzzC,OACP,IAAK,IAAIF,EAAI,EAAGA,EAAI2zC,EAAOzzC,OAAQF,IAAK,CACpC,IAAI6C,EAAQiF,KAAKzI,OAAOiB,KAAKwG,wBAAwB6sC,EAAO3zC,GAAG0zC,IAC/D/sC,EAAIxF,KAAK2G,KAAKzI,OAAOiB,KAAKuG,UAAUhE,KAChCiF,KAAKzI,OAAO2H,YAAcc,KAAKzI,OAAOmI,eAAiBM,KAAKzI,OAAO4H,qBACnEN,EAAIxF,KAAK2G,KAAKzI,OAAOiB,KAAKw7B,iBAAiBj5B,IAIvD,IAAKxC,oBAAkBoG,EAAKhF,YAAa,CACrC,IAAIA,EAAaC,EAAcoG,KAAKzI,OAAQoH,EAAKhF,WAAWE,UAC5D,IAAKtB,oBAAkBoB,IAAeA,EAAWO,gBAAiB,CAC9D,IAAIylC,EAAahmC,EAAWQ,aAAauE,QAAQC,GACjDhF,EAAWQ,aAAaoD,OAAOoiC,EAAY,GAE/C3/B,KAAK6pC,oBAAsBrvC,EAAYwF,KAAK6pC,qBAC5C7pC,KAAK6pC,oBAAoBxwC,KAAKsF,GAElCktC,EAAOxyC,KAAKsF,GACZ5F,EAAU8yC,EACV,IAAS3zC,EAAI,EAAGA,EAAIa,EAAQX,OAAQF,IAAK,CACrC,IAAI4yC,EAAa9qC,KAAK+pC,aAAa1rC,IAAI,SAAUP,GAAK,OAAOA,EAAE8tC,KAAgBltC,QAAQ3F,EAAQb,GAAG0zC,KAC9E,IAAhBd,GACA9qC,KAAK+pC,aAAaxsC,OAAOutC,EAAY,GAG7C,IAAS5yC,EAAI,EAAGA,EAAI2G,EAAIzG,OAAQF,IACvBK,oBAAkBsG,EAAI3G,KACvB8H,KAAKzI,OAAOiB,KAAKmsB,gBAAgBmnB,gBAAgBzyC,KAAKwF,EAAI3G,KAItEwxC,EAAUzoC,UAAUuqC,eAAiB,WAEjC,IAAK,IADDtlC,EAAOlG,KAAKzI,OAAOiB,KAAKm5B,cACnBz5B,EAAI,EAAGA,EAAIgO,EAAK9N,OAAQF,IAC7BgO,EAAKhO,GAAGsT,aAAa,gBAAiBtT,EAAE8N,YAE5C,GAAIhG,KAAKzI,OAAO2H,YAAcc,KAAKzI,OAAO4H,oBAAsBa,KAAKzI,OAAOmI,cAEnE,CAAA,IADDqsC,EAAQ/rC,KAAKzI,OAAOiB,KAAKmV,qBAC7B,IAASzV,EAAI,EAAGA,EAAI6zC,EAAM3zC,OAAQF,IAC9B6zC,EAAM7zC,GAAGsT,aAAa,gBAAiBtT,EAAE8N,cAIrD0jC,EAAUzoC,UAAUsqC,iBAAmB,SAAUxyC,GAK7C,IAAK,IAJDk3B,EAAajwB,KAAKzI,OAAOiB,KAAKoD,0BAA0B,GACxD4V,EAAe,eAEf7X,EAAyD,UAA5CqG,KAAKzI,OAAO2E,aAAaQ,eAA6B,gBAAkB,aAChFxE,EAAI,EAAGA,EAAI8H,KAAKzI,OAAO8E,kBAAkBmV,GAAcpZ,OAAQF,IAC/DK,oBAAkByH,KAAKzI,OAAO8E,kBAAkBmV,GAActZ,GAAGyB,KAC9DqG,KAAKzI,OAAO8E,kBAAkBmV,GAActZ,GAAGyB,GAAYs2B,KAAgBl3B,EAAQiH,KAAK1E,aAAa20B,KACrGjwB,KAAK2pC,gBAAkB3pC,KAAK2pC,gBAAkB,IAK9DD,EAAUzoC,UAAUqD,gBAAkB,SAAUxG,GAC5C,IACIkuC,EAAgB,iBAChB7vB,EAAiBre,EAAEpC,aAA0B,eACjD,GAAIoC,EAAEpC,aAA0B,eAAEtD,OAE9B,IAAK,IAAIF,EAAI,EAAGA,EAAIikB,EAAe/jB,OAAQF,IACvCgD,GAAaJ,MAAOqhB,EAAejkB,GAAIyD,OAAQ,QAAUqE,KAAKzI,OAAQyI,KAAK3E,gBAAiB2E,KAAK1E,YAAa0E,KAAKzE,mBAFtG,GAKrB,GAAIuC,EAAEpC,aAAaswC,GAAe5zC,OAGzB,CAAA,IADDmB,EADiBuE,EAAEpC,aAAaswC,GAEpC,IAAS9zC,EAAI,EAAGA,EAAIqB,EAAOnB,OAAQF,IAAK,CACpC8H,KAAKisC,eAAe1yC,EAAOrB,GAAG2B,UAE9B,IAAK,IADDgyC,EAAS5xC,EAAoBV,EAAOrB,IAC/BqJ,EAAI,EAAGA,EAAIsqC,EAAOzzC,OAAQmJ,IAC/BvB,KAAKisC,eAAeJ,EAAOtqC,GAAG1H,UAElCiE,EAAEpC,aAAaswC,GAAiBluC,EAAEpC,aAAaswC,GAAe5xC,OAAOyxC,IAG7E7rC,KAAKgqC,OAAQ,GAEjBN,EAAUzoC,UAAUgrC,eAAiB,SAAUnxC,UAEpCkF,KAAKzI,OAAe,yBAAEuD,UAEtBkF,KAAKzI,OAAS,mBAAEuD,IAE3B4uC,EAAUzoC,UAAUipC,kBAAoB,WACpC,IACInvC,EADAu3B,EAAgB,gBAEhB34B,EAAa,aAEb4C,EAAqByD,KAAKzI,OAAOiB,KAAKgE,wBACtCrC,EAAe,eACfwE,EAAQqB,KAAKzI,OAAOiB,KAAKhB,sBAAsBC,cAC/CuI,KAAKzI,OAAOiB,KAAKhB,WAAWA,WAAWsE,KAAOkE,KAAKzI,OAAOiB,KAAKhB,WAC/Dy4B,EAAajwB,KAAKzI,OAAOiB,KAAKoD,0BAA0B,GAC5D,IAAKrD,oBAAkByH,KAAKzI,OAAO+6B,IAAiB,CAChD,IAAIzzB,EAAMmB,KAAKzI,OAAO+6B,GAAelpB,QAAQ,MAC7CpJ,KAAKzI,OAAOooB,YAAY9gB,GACxBmB,KAAKzI,OAAO+6B,GAAiB,KAEjC,IAAK/5B,oBAAkByH,KAAK4pC,mBACxB,IAAK,IAAI1xC,EAAI,EAAGA,EAAI8H,KAAK4pC,kBAAkBxxC,OAAQF,IAG/C,GAFA6C,EAAQ4D,EAAKN,IAAI,SAAUP,GAAK,OAAOA,EAAEmyB,KAAgBvxB,QAAQsB,KAAK4pC,kBAAkB1xC,GAAG+3B,IAC3FtxB,EAAKpB,OAAOxC,EAAO,GAC6B,UAA5CiF,KAAKzI,OAAO2E,aAAaQ,iBACzB3B,EAAQwB,EAAmB8B,IAAI,SAAUP,GAAK,OAAOA,EAAEmyB,KAClDvxB,QAAQsB,KAAK4pC,kBAAkB1xC,GAAGyB,GAAcqG,KAAK4pC,kBAAkB1xC,GAAGyB,GAAYs2B,GACrFjwB,KAAK4pC,kBAAkB1xC,GAAG+3B,KAC3B13B,oBAAkBgE,EAAmBxB,KAEtC,IAAK,IADDsW,EAAW9U,EAAmBxB,GAAOZ,GAChCS,EAAI,EAAGyW,GAAYzW,EAAIyW,EAASjZ,OAAQwC,IACzCyW,EAASzW,GAAGq1B,KAAgBjwB,KAAK4pC,kBAAkB1xC,GAAG+3B,IACtD1zB,EAAmBxB,GAAOZ,GAAcoD,OAAO3C,EAAG,GAO1E,IAAKrC,oBAAkByH,KAAK6pC,qBACxB,IAAS3xC,EAAI,EAAGA,EAAI8H,KAAK6pC,oBAAoBzxC,OAAQF,IACjD,IAAKK,oBAAkByH,KAAK6pC,oBAAoB3xC,GAAGyB,IAAc,CAC7DoB,EAAQwB,EAAmB8B,IAAI,SAAUP,GAAK,OAAOA,EAAEmyB,KAClDvxB,QAAQsB,KAAK6pC,oBAAoB3xC,GAAGyB,GAAYs2B,IACrD,IAAIic,EAA4D,IAA5ClsC,KAAK6pC,oBAAoB3xC,GAAa,MAAU8H,KAAK6pC,oBAAoB3xC,GAAa,MACtG8H,KAAK6pC,oBAAoB3xC,GAAa,MAAI,EACzCK,oBAAkBgE,EAAmBxB,KACtCwB,EAAmBxB,GAAOZ,GAAcoD,OAAO2uC,EAAe,EAAGlsC,KAAK6pC,oBAAoB3xC,IAK1G8H,KAAK4pC,kBAAoB5pC,KAAK+pC,aAAe/pC,KAAK8pC,kBAAoB9pC,KAAKzD,sBAC3EyD,KAAK+pC,aAAevvC,EAAYwF,KAAKzI,OAAOiB,KAAKgE,yBACjDwD,KAAKmrC,WAAa,EAClBnrC,KAAKzD,mBAAqB/B,EAAYwF,KAAKzI,OAAOiB,KAAKgE,yBACvDwD,KAAK6pC,uBACL7pC,KAAKzI,OAAOu2B,WAEhB4b,EAAUzoC,UAAUsD,UAAY,SAAU6C,GACtC,GAAsC,UAAlCpH,KAAKzI,OAAO2E,aAAaC,KAAkB,CAC3C,IAAIjE,OAAI,EACJwD,EAAesE,KAAKzI,OAAO8E,kBAC3B+f,EAAiB,iBAIjBzd,EAAQqB,KAAKzI,OAAOiB,KAAKhB,sBAAsBC,cAC/CuI,KAAKzI,OAAOiB,KAAKhB,WAAWA,WAAWsE,KAAOkE,KAAKzI,OAAOiB,KAAKhB,WAC/D+E,EAAqByD,KAAKzI,OAAOiB,KAAKgE,wBACtC2vC,EAAensC,KAAKzI,OAAOiB,KAAKoD,0BAA0B,GAE1DwwC,EAAa1wC,EAAyB,aAEtCH,OAAgB,EAChBD,OAAc,EAEdG,OAAe,EAKnB,GAHI2wC,EAAWh0C,OAAS,GAAiD,WAA5C4H,KAAKzI,OAAO2E,aAAaQ,gBAClD0vC,EAAWC,UAEiC,WAA5CrsC,KAAKzI,OAAO2E,aAAaQ,eAEzB,GADAiC,EAAKpB,OAAOoB,EAAKvG,OAASg0C,EAAWh0C,OAAQg0C,EAAWh0C,QACnD4H,KAAKzI,OAAO+X,YAKZ,CACD,IAAIg9B,EAAe9xC,EAAYmE,GAC3B4tC,EAAaD,EAAajuC,IAAI,SAAUP,GAAK,OAAOA,EAAEquC,KACrDztC,QAAQnC,EAAmB,GAAG4vC,IAC/BK,EAAWD,EAAavsC,KAAKzI,OAAOiB,KAAK+W,aAAas2B,SAC1DtpC,EAAqB+vC,EAAa/uC,OAAOgvC,EAAYC,QATjDjwC,EAAmBnE,OAASg0C,EAAWh0C,QACvCmE,EAAmBgB,OAAOhB,EAAmBnE,OAASg0C,EAAWh0C,OAAQg0C,EAAWh0C,QAWhG,IAAKF,EAAI,EAAGA,EAAIk0C,EAAWh0C,OAAQF,IAAK,CACpC,IAAI+E,EAAWR,YAAW2vC,EAAWl0C,IAgCrC,UA/BO+E,EAAStD,kBACTsD,EAASpD,gBACToD,EAASlC,aACTkC,EAASjC,aACTiC,EAAS/C,uBACT+C,EAAS9C,oBACT8C,EAASuB,eACXjG,oBAAkB0E,EAASmuC,uBACrBnuC,EAASmuC,cAEpBgB,EAAWl0C,GAAG+E,SAAWA,EACzBxB,EAAeuE,KAAK8pC,kBAAkB5xC,GAClCK,oBAAkBkD,KAClBA,EAAeuE,KAAK8pC,kBAAkB5xC,EAAI,IAE1C8H,KAAK3E,kBACA9C,oBAAkB6zC,EAAWl0C,GAAGyB,aACjC8D,EAAgB0uC,EAAcC,EAAWl0C,GAAGyB,WAAY,MAAOqG,KAAKzI,OAAQyI,KAAK3E,gBAAiB+wC,EAAWl0C,KAGhHK,oBAAkBkD,KACnBH,EAAcG,EAAaV,OAEiB,QAA5CiF,KAAKzI,OAAO2E,aAAaQ,gBAAwE,WAA5CsD,KAAKzI,OAAO2E,aAAaQ,gBAC1EnE,oBAAkB6zC,EAAWl0C,GAAGyB,cAAuC,IAAxBqG,KAAKzE,gBACpDA,GAAiB,EACjBE,EAAe,MAGvBP,GAAaJ,MAAOsxC,EAAWl0C,GAAIyD,OAAQ,OAASqE,KAAKzI,OAAQyI,KAAK3E,gBAAiBC,EAAaC,OApDvF,EAoDkHE,GAC/HF,EAAgB,KACgC,UAA5CyE,KAAKzI,OAAO2E,aAAaQ,iBAA+BnE,oBAAkB6zC,EAAWl0C,GAAa,YAIlG,IAAK,IAHDu0C,EAAalwC,EAAmB8B,IAAI,SAAUP,GAAK,OAAOA,EAAEquC,KAC3DztC,QAAQ0tC,EAAWl0C,GAAa,WAAEi0C,IACnC96B,EAAW9U,EAAmBkwC,GAAwB,aACjD7xC,EAAI,EAAGA,EAAIyW,EAASjZ,OAAQwC,IAC7ByW,EAASzW,GAAGuxC,KAAkBC,EAAWl0C,GAAGi0C,IAC5C5vC,EAAmBkwC,GAAwB,aAAElvC,OAAO3C,EAAG,GAKvE,GAAIc,EAAa0gB,GAAgBhkB,OAC7B,IAAKF,EAAI,EAAGA,EAAIwD,EAAa0gB,GAAgBhkB,OAAQF,IACjDgD,GAAaJ,MAAOY,EAAa0gB,GAAgBlkB,GAAIyD,OAAQ,UAAYqE,KAAKzI,OAAQyI,KAAK3E,gBAAiBC,EAAaC,OAnEhH,EAmE2IE,GAG5JuE,KAAKzI,OAAOoG,cACZ,IAAK,IAAIg3B,EAAM,EAAGA,EAAMh2B,EAAKvG,OAAQu8B,IACjCh2B,EAAKg2B,GAAU,MAAIA,EACnBjhB,WAAS,sBAAwB/U,EAAKg2B,GAAa,SAAI,SAAUA,EAAK30B,KAAKzI,QACtEoH,EAAKg2B,GAAU,OAChB30B,KAAKzI,OAAOoG,WAAWtE,KAAKsF,EAAKg2B,IAI7C30B,KAAK8pC,kBAAoB9pC,KAAK4pC,kBAAoB5pC,KAAK+pC,aAAe/pC,KAAK6pC,oBAAsB7pC,KAAKzD,uBAE1GmtC,EAAUzoC,UAAU+pC,wBAA0B,SAAUjwC,GACpD,IAAImL,EAAOlG,KAAKzI,OAAOiB,KAAKm5B,cAC5B,IAAiD,UAA5C3xB,KAAKzI,OAAO2E,aAAaQ,gBAA0E,UAA5CsD,KAAKzI,OAAO2E,aAAaQ,iBAC9EsD,KAAKzE,eAAiB,EAAG,CAC5B,IAAKhD,oBAAkByH,KAAK+pC,aAAa/pC,KAAK1E,eAAiB0E,KAAK+pC,aAAa/pC,KAAK1E,aAAatB,SAC/F,GAAIgG,KAAKzI,OAAO8E,kBAAkB2D,KAAKwR,cAAcpZ,OAAS,GACvD4H,KAAKzI,OAAO8E,kBAAkB2D,KAAKoc,gBAAgBhkB,QAEtD,GADA2C,GAASd,EAAoB+F,KAAK+pC,aAAa/pC,KAAK1E,cAAclD,OAClB,UAA5C4H,KAAKzI,OAAO2E,aAAaQ,eAA4B,CAErD3B,GADsBiF,KAAKsqC,2BAK/BvvC,GAASd,EAAoB+F,KAAK+pC,aAAa/pC,KAAK1E,cAAclD,OAGtE2C,GAASmL,EAAK9N,SACd2C,EAAQmL,EAAK9N,OAAS,GAE1B4H,KAAKurC,iBAAiBvrC,KAAKzI,OAAOiB,KAAKgE,yBACnCwD,KAAK2pC,kBACL5uC,GAASiF,KAAK2pC,iBAElB3pC,KAAK2pC,gBAAkB,EAE3B,OAAO5uC,GAEJ2uC,KCjhBPgD,GAAsB,WAItB,SAASA,EAAKn1C,GACVyI,KAAKwR,aAAe,eACpBxR,KAAKoc,eAAiB,iBACtBpc,KAAK2sC,iBAAmB,KACxBv+B,OAAKC,OAAOu+B,QACZ5sC,KAAKzI,OAASA,EACdyI,KAAK3E,iBAAmB9C,oBAAkBhB,EAAO8F,iBACjD2C,KAAK6sC,uBAAyB,KAC9B7sC,KAAK8sC,sBACL9sC,KAAK+sC,gBAAkB,IAAIrD,GAAU1pC,KAAKzI,QAC1CyI,KAAKuI,mBA8uBT,OAxuBAmkC,EAAKzrC,UAAUgH,cAAgB,WAC3B,MAAO,QAKXykC,EAAKzrC,UAAUsH,iBAAmB,WAC9BvI,KAAKzI,OAAOiR,GAAGqR,EAAmB7Z,KAAK0D,WAAY1D,MACnDA,KAAKzI,OAAOiR,GAAG6gB,EAAkBrpB,KAAK2D,UAAW3D,MACjDA,KAAKzI,OAAOiR,GAAG6iB,EAAiBrrB,KAAK4D,SAAU5D,MAC/CA,KAAKzI,OAAOiR,GAAG8iB,EAA0BtrB,KAAK6D,kBAAmB7D,MACjEA,KAAKzI,OAAOiR,GAAGwhB,EAAiBhqB,KAAK8D,SAAU9D,MAC/CA,KAAKzI,OAAOiR,GAAGmiB,GAAoB3qB,KAAKkE,YAAalE,MACrDA,KAAKzI,OAAOiB,KAAKgQ,GAAGwkC,GAAmBhtC,KAAKwE,WAAYxE,MACxDA,KAAKzI,OAAOiB,KAAKgQ,GAAG,iBAAkBxI,KAAKitC,YAAajtC,MACxDA,KAAKzI,OAAOiB,KAAKgQ,GAAG,gBAAiBxI,KAAKktC,aAAcltC,MACxDA,KAAKzI,OAAOiR,GAAG6hB,GAAiBrqB,KAAKgE,SAAUhE,MAC/CA,KAAKzI,OAAOiR,GAAG,cAAexI,KAAKmtC,iBAAkBntC,MACrDA,KAAKzI,OAAOiR,GAAG,iBAAkBxI,KAAKmtC,iBAAkBntC,MACxDA,KAAKzI,OAAOiB,KAAKgQ,GAAG4kC,GAAkBptC,KAAK6D,kBAAmB7D,MAC9DA,KAAKzI,OAAOiB,KAAKgQ,GAAG,WAAYxI,KAAKqtC,aAAcrtC,MACnDA,KAAKzI,OAAOiR,GAAG,0BAA2BxI,KAAKstC,wBAAyBttC,MAExEA,KAAKzI,OAAOiB,KAAKgQ,GAAG+kC,GAAwBvtC,KAAK6E,gBAAiB7E,MAClEA,KAAKzI,OAAOiB,KAAKgQ,GAAGglC,GAA0BxtC,KAAK8E,kBAAmB9E,MACtEA,KAAKzI,OAAOiB,KAAKgQ,GAAG,mBAAoBxI,KAAKytC,eAAgBztC,MAC7DA,KAAKzI,OAAOiB,KAAKgQ,GAAG,mBAAoBxI,KAAK0tC,eAAgB1tC,OAEjE0sC,EAAKzrC,UAAUosC,aAAe,SAAUvvC,GACpCkC,KAAK2tC,kBAAoB7vC,EAAEuD,QAE/BqrC,EAAKzrC,UAAUysC,eAAiB,SAAUE,GACtCA,EAAQlxC,eAAiBsD,KAAKzI,OAAO2E,aAAaQ,eAClDkxC,EAAQtyC,YAAc0E,KAAK1E,YAC3BsyC,EAAQC,cAAgB7tC,KAAK2sC,kBAEjCD,EAAKzrC,UAAU4D,gBAAkB,SAAUuC,GACvCpH,KAAKzI,OAAO+P,QAAQ4jB,EAAoB9jB,IAE5CslC,EAAKzrC,UAAU6D,kBAAoB,SAAUsC,GACH,SAAlCpH,KAAKzI,OAAO2E,aAAaC,MACzB6D,KAAKzI,OAAO+P,QAAQkP,EAAuBpP,IAMnDslC,EAAKzrC,UAAU4H,oBAAsB,WAC7B7I,KAAKzI,OAAOuR,cAGhB9I,KAAKzI,OAAOwR,IAAI8Q,EAAmB7Z,KAAK0D,YACxC1D,KAAKzI,OAAOwR,IAAIsgB,EAAkBrpB,KAAK2D,WACvC3D,KAAKzI,OAAOwR,IAAIsiB,EAAiBrrB,KAAK4D,UACtC5D,KAAKzI,OAAOwR,IAAIuiB,EAA0BtrB,KAAK6D,mBAC/C7D,KAAKzI,OAAOwR,IAAI4hB,GAAoB3qB,KAAKkE,aACzClE,KAAKzI,OAAOiB,KAAKuQ,IAAIikC,GAAmBhtC,KAAKwE,YAC7CxE,KAAKzI,OAAOiB,KAAKuQ,IAAI,iBAAkB/I,KAAKitC,aAC5CjtC,KAAKzI,OAAOiB,KAAKuQ,IAAI,gBAAiB/I,KAAKktC,cAC3CltC,KAAKzI,OAAOwR,IAAIshB,GAAiBrqB,KAAKgE,UACtChE,KAAKzI,OAAOwR,IAAI,cAAe/I,KAAKmtC,kBACpCntC,KAAKzI,OAAOwR,IAAI,iBAAkB/I,KAAKmtC,kBACvCntC,KAAKzI,OAAOiB,KAAKuQ,IAAIqkC,GAAkBptC,KAAK6D,mBAC5C7D,KAAKzI,OAAOwR,IAAI,0BAA2B/I,KAAKstC,yBAChDttC,KAAKzI,OAAOiB,KAAKuQ,IAAIwkC,GAAwBvtC,KAAK6E,iBAClD7E,KAAKzI,OAAOiB,KAAKuQ,IAAIykC,GAA0BxtC,KAAK8E,mBACpD9E,KAAKzI,OAAOiB,KAAKuQ,IAAI,WAAY/I,KAAKqtC,cACtCrtC,KAAKzI,OAAOiB,KAAKuQ,IAAI,mBAAoB/I,KAAKytC,gBAC9CztC,KAAKzI,OAAOiB,KAAKuQ,IAAI,mBAAoB/I,KAAK0tC,kBAQlDhB,EAAKzrC,UAAUiH,QAAU,WACrBlI,KAAK6I,uBAKT6jC,EAAKzrC,UAAU6sC,oBAAsB,SAAU9b,GAC3ChyB,KAAKzI,OAAOiB,KAAK4D,WAAW0xC,oBAAoB9b,IAEpD0a,EAAKzrC,UAAUksC,iBAAmB,SAAU/lC,GACxC,IAAI2mC,EAAY30C,YAAU,aAAcgO,GACpCya,EAAYzoB,YAAU,OAAQ20C,GAC9BC,EAAUhuC,KAAKzI,OACfG,EAAUs2C,EAAQx2C,WAAWE,QACjC,IAAKJ,EAAa02C,IAAYt2C,aAAmB4pB,sBAClB,SAA1BysB,EAAUluC,aAA+C,QAArBkuC,EAAUpyC,SACN,UAAxCqyC,EAAQ9xC,aAAaQ,gBAAsE,UAAxCsxC,EAAQ9xC,aAAaQ,gBAC1B,UAAxCsxC,EAAQ9xC,aAAaQ,gBAC5B,GAAkB,gBAAdmlB,EAA6B,CAC7B,IAAI9Z,EAAWxP,oBAAkBw1C,EAAUlvC,OAAS3F,OAAOC,KAAK40C,EAAUlvC,KAAKzG,OAAS4H,KAAKzE,cACzFwyC,EAAUlvC,IAAIkJ,SAAW,EACzBkmC,EAAY11C,oBAAkBwP,KAA2B,IAAdA,GACwC,EAAnFimC,EAAQxxC,wBAAwBuL,GAAUimC,EAAQpyC,0BAA0B,IAChFoyC,EAAQx1C,KAAKga,MAAMM,UAAU,gBAAiBm7B,QAE7C,GAAkB,mBAAdpsB,EAEL,IAAK,IADDqsB,EAAeF,EAAQx1C,KAAKga,MAAMG,OAAOva,OACpCF,EAAI,EAAGA,EAAIg2C,EAAch2C,IACW,kBAArC81C,EAAQx1C,KAAKga,MAAMG,OAAOza,GAAGQ,KAC7Bs1C,EAAQx1C,KAAKga,MAAMG,OAAOpV,OAAOrF,GAKX,UAAlC8H,KAAKzI,OAAO2E,aAAaC,MAA8C,WAA1B4xC,EAAUluC,aACvDG,KAAKzI,OAAOuZ,OAAO,uBAG3B47B,EAAKzrC,UAAU4C,kBAAoB,SAAUuD,GACzC,IAAI/F,EAAS+F,EAAK/F,OAClB,IAAI9I,oBAAkB8I,EAAO+H,QAAQ,iBAArC,CAGA,IAAIzJ,EAASK,KAAKzI,OAAOiB,KAAKkyC,kBAAkBrpC,EAAO+H,QAAQ,gBAAgBoB,aAAa,kBAC5F,GAAsC,SAAlCxK,KAAKzI,OAAO2E,aAAaC,OAAoB6D,KAAKmuC,WAAaxuC,IAAWA,EAAOyuC,cACjFzuC,EAAOM,eAAkBoB,EAAOmF,UAAUC,SAAS,sBACnDpF,EAAOmF,UAAUC,SAAS,uBAA0BzG,KAAKzI,OAAO2E,aAAagwB,oBAAqB,CAGlG,GAFAlsB,KAAKmuC,WAAY,EACjBnuC,KAAKzI,OAAOiB,KAAKmjB,eAAgBkK,iBAAkBze,EAAKW,WAAY,GAChE/H,KAAKzI,OAAO+G,qBAAsB,CAClC,IAAImP,EAAKvE,eAAa9B,EAAK/F,OAAQ,SACnCrB,KAAK2sC,iBAAmBl/B,EAAGjD,aAAa,iBACxCiD,EAAGjC,aAAa,gBAAiBiC,EAAG1F,SAAW,IAEnD/H,KAAKquC,mBAAmB,YAGhC3B,EAAKzrC,UAAUotC,mBAAqB,SAAUlyC,GAC1C6D,KAAKzI,OAAOiB,KAAKmjB,eAAgBzf,cAAgBC,KAAMA,KAAU,GAC9C/C,YAAU,gBAAiB4G,KAAKzI,OAAOiB,KAAK4D,YAClD4F,MAAMhC,KAAKzI,OAAOiB,KAAK4D,YACpC4D,KAAKzI,OAAOiB,KAAKqzB,QAAS,GAE9B6gB,EAAKzrC,UAAUwsC,eAAiB,WACxBztC,KAAKzI,OAAO+G,sBAA0D,SAAlC0B,KAAKzI,OAAO2E,aAAaC,OAC7D6D,KAAKmuC,WAAY,EACjBnuC,KAAKquC,mBAAmB,YAGhC3B,EAAKzrC,UAAUuD,WAAa,SAAU4C,IAC9BpH,KAAKmuC,WAAgD,SAAlCnuC,KAAKzI,OAAO2E,aAAaC,MAAmBiQ,cAAcpM,KAAKzI,OAAOge,oBACzFvV,KAAKsuC,SAAWlnC,EAAKzL,QAEL,OAAhByL,EAAKzL,QACLqE,KAAK6D,kBAAkBuD,IAG/BslC,EAAKzrC,UAAUgrC,eAAiB,SAAUnxC,UAE/BkF,KAAKzI,OAAe,yBAAEuD,UAEtBkF,KAAKzI,OAAS,mBAAEuD,IAE3B4xC,EAAKzrC,UAAU+C,SAAW,SAAUoD,GAChC,IAAI9B,EAAQtF,KAERuuC,EAAOnnC,EAAY,QAoBvB,UAnBOA,EAAY,QACfpH,KAAKzI,OAAO+G,uBAAyB/F,oBAAkByH,KAAK2sC,oBAC5DvlC,EAAKvI,IAAI2M,aAAa,gBAAiBxL,KAAK2sC,kBAC5C3sC,KAAK2sC,sBAAmB1xB,GAEN,UAAlBjb,KAAKsuC,UACLtuC,KAAKzI,OAAO+P,QAAQ+iB,GAAiBjjB,EAAM,SAAUonC,GAC5CA,EAAannC,QAA6C,SAAnC/B,EAAM/N,OAAO2E,aAAaC,KAG7CqyC,EAAannC,QAA6C,SAAnC/B,EAAM/N,OAAO2E,aAAaC,OACtDmJ,EAAM6oC,WAAY,EAClB7oC,EAAM+oC,mBAAmB,WAJzB/oC,EAAMgqB,mBAAmB,QAMxB/2B,oBAAkBg2C,IACnBA,EAAKxlB,QAAQylB,KAIrBxuC,KAAK2tC,oBAAsB3tC,KAAK2tC,kBAAkBnnC,UAAUC,SAAS,qBACrEzG,KAAK2tC,kBAAkBnnC,UAAUC,SAAS,uBAG1C,OAFAW,EAAKC,QAAS,OACdrH,KAAK2tC,kBAAoB,MAGS,SAAlC3tC,KAAKzI,OAAO2E,aAAaC,OACH,QAAlB6D,KAAKsuC,UAAwC,aAAlBtuC,KAAKsuC,SAChCtuC,KAAKsuC,SAAW,KAEO,UAAlBtuC,KAAKsuC,WACVlnC,EAAKC,QAAS,EACdrH,KAAKsuC,SAAW,QAO5B5B,EAAKzrC,UAAUquB,mBAAqB,SAAUmf,GAC1C,IAAKl2C,oBAAkByH,KAAKzI,OAAOiB,KAAKg3B,eAAgB,CACpD,IAAIkf,EAAY1uC,KAAKzI,OAAOud,QAAQC,GAAK,gBACzC/U,KAAKzI,OAAOiB,KAAKg3B,cAAcC,aAAaif,EAAY,MAAOA,EAAY,OAAQA,EAAY,UAAuB,SAAZD,GAC1GzuC,KAAKzI,OAAOiB,KAAKg3B,cAAcC,aAAaif,EAAY,SAAUA,EAAY,UAAuB,SAAZD,KAGjG/B,EAAKzrC,UAAUiD,YAAc,SAAUpG,GACnC,GAAsC,SAAlCkC,KAAKzI,OAAO2E,aAAaC,KAAiB,CAC1C,IAAIwyC,EAAcpwC,WAAS,yBAA0ByB,KAAKzI,OAAOiB,KAAK4D,YAClEwyC,EAAiBD,EAAY5mC,SAC7B8mC,OAAW,EAKXA,GAJoC,IAApC7uC,KAAKzI,OAAOkrB,qBAAkCziB,KAAKzI,OAAOksB,gBAAwB,SAIvEzjB,KAAKzI,OAAOwH,UAAU6vC,GAAgBpvC,MAAMQ,KAAKzI,OAAOkI,iBAHxDO,KAAKzI,OAAOwH,UAAU6vC,GAAgBpvC,MAAMQ,KAAKzI,OAAOkI,gBAAkB,GAKzFO,KAAKzI,OAAO8H,aAAaC,YACrBX,KAAMgwC,EAAY7kC,QAClBvK,KAAMsvC,EACNlvC,OAAQK,KAAKzI,OAAOiB,KAAKoH,aAAaI,KAAKzI,OAAOkI,mBAEtDO,KAAKquC,mBAAmB,UACxBruC,KAAKmuC,WAAY,EAEiB,UAAlCnuC,KAAKzI,OAAO2E,aAAaC,MACzB6D,KAAKzI,OAAOuZ,OAAO,yBAG3B47B,EAAKzrC,UAAU6C,SAAW,SAAUsD,GAChC,GAAsC,SAAlCpH,KAAKzI,OAAO2E,aAAaC,MAAmB6D,KAAKzI,OAAOud,QAAQ3L,cAAc,QAAS,CACvF/B,EAAKC,QAAS,EAEdqM,WAAS,UAAU,EAAO1T,KAAKzI,OAAOiB,MACtCkb,WAAS,kBAAkB,EAAM1T,KAAKzI,QACtC6P,EAAK0C,QAAQ1C,EAAK5L,YAAc4L,EAAKtM,MACrC,IAAI+D,OAAM,EACNiwC,OAAO,EAEPjwC,EADAtG,oBAAkB6O,EAAK7H,MACjBS,KAAKzI,OAAOiB,KAAK4D,WAAqB,WAAE2yC,KAAKhvB,cAAc8c,WAG3Dz1B,EAAK7H,KAAKs9B,WAEpB,IAAImS,EACAC,EAAgBjvC,KAAKzI,OAAOqE,0BAC5BrD,oBAAkBsG,GAClBmB,KAAKzI,OAAOiB,KAAKgE,wBAAwBqB,OAAO,SAAUC,EAAG5F,GACrD4F,EAAEmxC,EAAc,MAAQ7nC,EAAK0C,QAAQmlC,EAAc,MACnDD,EAAa92C,KAMrB82C,GAAsD,IAAxChvC,KAAKzI,OAAOwH,UAAUL,QAAQG,IAAemB,KAAKzI,OAAOmI,cAAgB,EACnFM,KAAKzI,OAAOiB,KAAKw7B,iBAAiBt1B,QAAQG,GAAOmB,KAAKzI,OAAOwH,UAAUL,QAAQG,GAEvF,IAAIu1B,KAMJ,GALA33B,SAAO23B,EAAKhtB,GACZgtB,EAAI/sB,QAAS,EACb+sB,EAAItpB,KAAO,OACXjM,EAAMmB,KAAKzI,OAAOiB,KAAKuG,UAAUF,EAAIkJ,UACrC/H,KAAKzI,OAAO+P,QAAQ4jB,EAAoBkJ,GACnCA,EAAI/sB,OAgCLrH,KAAKzI,OAAOiB,KAAKqzB,QAAS,MAhCb,CACRhtB,EAAIkJ,WAAa/H,KAAKzI,OAAOiF,wBAAwBpE,OAAS,GAAwB,QAAlB4H,KAAKsuC,WAC1EtuC,KAAKkvC,cAAe,GAExBlvC,KAAKmvC,gBAAgB/nC,GACrBpH,KAAKgvB,WAAW5nB,EAAM4nC,GAClBhvC,KAAKzI,OAAOiB,KAAK42C,iBACjBpvC,KAAKzI,OAAOiB,KAAK42C,gBAAgBthB,QAAQ1mB,EAAK0C,SAElD9J,KAAKzI,OAAOiB,KAAK4D,WAAWizC,gBAAgBrvC,KAAKzI,OAAOiB,KAAKyX,iBAAiB7I,EAAK5L,cACnFwE,KAAKzI,OAAOiB,KAAK4D,WAAWkzC,QAAQpnC,UACd,QAAlBlI,KAAKsuC,UAAwC,aAAlBtuC,KAAKsuC,WAChCtuC,KAAKquC,mBAAmB,UACxBruC,KAAKmuC,WAAY,GAErBnuC,KAAKsvB,mBAAmB,QACpBtvB,KAAKzI,OAAOmI,cAAgB,IAC5BovC,EAAO9uC,KAAKzI,OAAOiB,KAAKw7B,iBAAiBgb,GACzCrjC,eAAamjC,IAAQ,cAAe,eACpCnjC,cAAYmjC,EAAKnoC,iBAAiB,eAAgB,oBAAqB,iBAE3EgF,eAAa9M,IAAO,cAAe,eACnC8M,cAAY9M,EAAI8H,iBAAiB,eAAgB,oBAAqB,gBACtE3G,KAAKzI,OAAOiB,KAAKizC,YAAY8D,eAC7Br0C,GAAaJ,MAAOsM,EAAK0C,QAASnO,OAAQ,QAAUqE,KAAKzI,OAAQyI,KAAK3E,gBAAiB2E,KAAK1E,YAAa0E,KAAKzE,cAAe6L,EAAK5L,YAClI,IAAIg0C,GACA1kC,KAAM,OAAQnL,OAAQK,KAAKzI,OAAO0Y,iBAAiB7I,EAAK5L,YAAamD,KAAMyI,EAAK0C,QAChF2lC,aAAcroC,EAAKsoC,cAAe7wC,IAAKA,EAAKwC,OAAQ+F,EAAK7H,MAE7DS,KAAKzI,OAAO+P,QAAQkP,EAAuBg5B,MAOvD9C,EAAKzrC,UAAUgsC,YAAc,SAAUqC,IAC9BtvC,KAAKzI,OAAOiB,KAAKqzB,QAAU7rB,KAAKmuC,WAA+B,QAAlBnuC,KAAKsuC,UAAwD,SAAlCtuC,KAAKzI,OAAO2E,aAAaC,OAClG6D,KAAKquC,mBAAmB,UACxBruC,KAAKmuC,WAAY,EACjBnuC,KAAKsuC,SAAW,OAGxB5B,EAAKzrC,UAAUkuC,gBAAkB,SAAU/nC,GACvC,GAAIgF,cAAcpM,KAAKzI,OAAOge,iBAK1B,IAAK,IAJDyc,EAAOhyB,KAAKzI,OAAOiB,KAAKoH,aAExB+gB,EAAc3gB,KAAKzI,OAAOiB,KAAa,YAElCN,EAAI,EAAGA,EAAI85B,EAAK55B,OAAQF,IAAK,CAClC,GAAIyoB,EAAYzoB,GAAGoZ,SAAU,CACzB,IAAIq+B,EAAa3vC,KAAKzI,OAAOiB,KAAKsc,QAAQC,GAAKid,EAAK95B,GAAGmS,IACvDsW,EAAYzoB,GAAG03C,mBAAfjvB,CAAmClkB,UAAS1B,OAAU7C,IAAMkP,EAAK0C,SAAU9J,KAAKzI,OAAOiB,KAAM,WAAYm3C,EAAY3vC,KAAKzI,OAAOiB,KAAQ,iBAAG,MAE5Iw5B,EAAK95B,GAAG23C,cACRC,uBAAqB9vC,KAAKzI,OAAOiB,KAAKsc,QAAQC,GAAKid,EAAK95B,GAAGmS,IAAM,eAAgB,eAAgB2nB,EAAK95B,IAEtG85B,EAAK95B,GAAGoZ,UACRw+B,uBAAqB9vC,KAAKzI,OAAOiB,KAAKsc,QAAQC,GAAKid,EAAK95B,GAAGmS,IAAK,WAAY2nB,EAAK95B,IAAI,KAKrGw0C,EAAKzrC,UAAU+tB,WAAa,SAAU5nB,EAAMW,GACxC/H,KAAKzI,OAAOiB,KAAK4D,WAAW6yB,UAAUlnB,EAAUX,EAAK0C,SACrD9J,KAAKzI,OAAOiB,KAAK67B,gBAAgBtsB,GAAUpJ,KAAOyI,EAAK0C,SAE3D4iC,EAAKzrC,UAAUyC,WAAa,SAAUvI,EAASK,GAC3CN,EAAWC,EAAS6E,KAAKzI,OAAQyI,KAAK3E,gBAAiB2E,KAAK1E,YAAa0E,KAAKzE,cAAeC,EAAYwE,KAAKvE,cAC9GuE,KAAKzI,OAAOoG,cAGZ,IAAK,IAFDgB,EAAOqB,KAAKzI,OAAOiB,KAAKhB,sBAAsBC,cAC9CuI,KAAKzI,OAAOiB,KAAKhB,WAAWA,WAAWsE,KAAOkE,KAAKzI,OAAOiB,KAAKhB,WAC1DU,EAAI,EAAGA,EAAIyG,EAAKvG,OAAQF,IAAK,CAClCyG,EAAKzG,GAAG6C,MAAQ7C,EAChB,IAAIQ,EAAMsH,KAAKzI,OAAOiB,KAAKoD,0BAA0B,GACjDT,EAAQL,MAAMpC,KAASiG,EAAKzG,GAAGQ,IACR,QAAnByC,EAAQQ,SACRgD,EAAKzG,GAAG8C,MAAQgF,KAAK8sC,mBAAmB9xC,MACxC2D,EAAKzG,GAAG+E,SAAW+C,KAAK8sC,mBAAmB7vC,SAC3C0B,EAAKzG,GAAG2B,SAAWmG,KAAK8sC,mBAAmBjzC,SACtCtB,oBAAkByH,KAAK8sC,mBAAmBnzC,cAC3CgF,EAAKzG,GAAGyB,WAAaqG,KAAK8sC,mBAAmBnzC,WAC7CgF,EAAKzG,GAAGsG,eAAiBwB,KAAK8sC,mBAAmBtuC,gBAErDG,EAAKzG,GAAGiC,aAAe6F,KAAK8sC,mBAAmB3yC,cAGvDuZ,WAAS,sBAAwB/U,EAAKzG,GAAG2B,SAAW,SAAU3B,EAAG8H,KAAKzI,QACjEoH,EAAKzG,GAAG8C,OACTgF,KAAKzI,OAAOoG,WAAWtE,KAAKsF,EAAKzG,IAGlB,QAAnBiD,EAAQQ,QAAmD,MAA/BqE,KAAK6sC,yBACjC7sC,KAAKzI,OAAOokB,eAAgBzf,cAAgBQ,eAAgBsD,KAAK6sC,0BAA4B,GAC7F7sC,KAAK6sC,uBAAyB,OAGtCH,EAAKzrC,UAAU8uC,YAAc,SAAUpxC,EAAMuH,EAAMnN,GAC/C,IAAK,IAAI6B,EAAI,EAAGA,EAAIoF,KAAKzI,OAAOo6B,cAAcv5B,OAAQwC,IAAK,CACvD,IAAIo1C,EAAQj3C,EAAQ6B,GAChBG,EAAQwD,WAAS,sBAAwByxC,EAAMn2C,SAAW,SAAUmG,KAAKzI,QAE7E,GADAy4C,EAAMj1C,MAAQA,GACTxC,oBAAkBy3C,EAAMr2C,YAAa,CACtC,IAAIomC,EAAcxhC,WAAS,sBAAwByxC,EAAMr2C,WAAWE,SAAW,SAAUmG,KAAKzI,QAC9Fy4C,EAAMr2C,WAAWoB,MAAQglC,GAIjC,IAAK,IADDnzB,GAAS,EACJ5P,EAAI,EAAGA,EAAIgD,KAAKzI,OAAOwH,UAAU3G,OAAQ4E,IAAK,CAC9CkJ,EAAKlJ,GAAGwJ,UAAUC,SAAS,gBAC5BmG,IAEJ,IAAIqjC,EAAQl3C,EAAQ6T,GAEhB5R,GADAD,EAAQk1C,EAAMl1C,MACNk1C,EAAMj1C,OACd6D,EAAMqH,EAAKlJ,GACVzE,oBAAkB03C,EAAMt2C,cACzBoB,EAAQwD,WAAS,sBAAwB0xC,EAAMt2C,WAAWE,SAAW,SAAUmG,KAAKzI,SAGxF,IAAK,IADD24C,EAAWrxC,EAAIW,MAAMQ,KAAKzI,OAAOkI,iBAC5B0wC,EAAI,EAAGA,EAAID,EAAS1pC,UAAUpO,OAAQ+3C,IAAK,CAChD,IAAIr1C,EAAQo1C,EAAS1pC,UAAU2pC,GAG3B58B,EAASzY,EAAM2M,MAFN,mBAGTiR,EAAU5d,EAAM2M,MAFN,yBAGA,MAAV8L,GACA5H,eAAaukC,GAAWp1C,GAEb,MAAX4d,GACA/M,eAAaukC,GAAWp1C,GAG3BoL,EAAKlJ,GAAGwJ,UAAUC,SAAS,eAI5BqI,YAAUohC,GAAW,uBAAyBn1C,EAAQ,QAAUC,GAHhE8T,YAAUohC,GAAW,iBAAmBn1C,EAAQ,QAAUC,KAOtE0xC,EAAKzrC,UAAU2C,SAAW,SAAUwD,GAChC,IAAI0nB,EACA/zB,EAAQiF,KAAK1E,YACbvC,EAAUiH,KAAKzI,OAAOiB,KAAKgE,wBACO,UAAlCwD,KAAKzI,OAAO2E,aAAaC,OACzBpB,EAAQiF,KAAK+sC,gBAAgB3C,iBAC7BpqC,KAAKzE,cAAgByE,KAAK+sC,gBAAgB1C,oBACtCrqC,KAAKzI,OAAO8E,kBAAkB2D,KAAKwR,cAAcpZ,OAAS,GACvD4H,KAAKzI,OAAO8E,kBAAkB2D,KAAKoc,gBAAgBhkB,UACtDW,EAAUiH,KAAK+sC,gBAAgB5C,oBAGvC,IAAIjkC,EAAOlG,KAAKzI,OAAOiB,KAAKm5B,cACxBye,EAAiBlqC,EAAK9N,QAAU8N,EAAK,GAAGsE,aAAa,iBAAmB,EACxE6lC,EAAgBnqC,EAAK9N,QAAU8N,EAAKA,EAAK9N,OAAS,GAAGoS,aAAa,iBAAmB,EACrF8lC,EAActwC,KAAKzE,eAAiB60C,GAAkBpwC,KAAKzE,eAAiB80C,EAC5EE,EAAmBvwC,KAAKzI,OAAO+G,sBAAwB0B,KAAK1E,aAAe,GAA+B,OAA1B0E,KAAK2sC,iBACzF,GAAsC,WAAlC3sC,KAAKzI,OAAO2E,aAAaC,KAAmB,CAC5C,GAAgD,UAA5C6D,KAAKzI,OAAO2E,aAAaQ,eACzBoyB,EAAW,cAEV,IAAiD,UAA5C9uB,KAAKzI,OAAO2E,aAAaQ,gBAA0E,UAA5CsD,KAAKzI,OAAO2E,aAAaQ,kBAClFsD,KAAKzE,eAAiB,GAAKg1C,IAAqBD,IACpDxhB,EAAW,SACNv2B,oBAAkBQ,EAAQgC,KAAWhC,EAAQgC,GAAOf,UACrD,GAAsC,UAAlCgG,KAAKzI,OAAO2E,aAAaC,OAAqB6D,KAAKzI,OAAO8E,kBAAkB2D,KAAKwR,cAAcpZ,OAAS,GACrG4H,KAAKzI,OAAO8E,kBAAkB2D,KAAKoc,gBAAgBhkB,SAEtD,GADA2C,GAASd,EAAoBlB,EAAQgC,IAAQ3C,OACG,UAA5C4H,KAAKzI,OAAO2E,aAAaQ,eAA4B,CAErD3B,GADsBiF,KAAK+sC,gBAAgBzC,2BAK/CvvC,GAASd,EAAoBlB,EAAQgC,IAAQ3C,OAIzD,IAAK4H,KAAKzE,eAAiB,GAAKg1C,IAAqBD,IAC7Cv1C,GAAsD,UAA5CiF,KAAKzI,OAAO2E,aAAaQ,gBACY,UAA5CsD,KAAKzI,OAAO2E,aAAaQ,gBAA8B,CAC1D3B,GAASmL,EAAK9N,SACd2C,EAAQmL,EAAK9N,OAAS,GAE1B,IACIo4C,EAAexwC,KAAKzI,OAAOiB,KAAK4e,cAAe,KAAE,GACjDq5B,EAAkB5W,SAAS6W,cAC/BxqC,EAAKnL,EAAQ,GAAG+zB,GAAU5oB,EAAK,IAC/BwN,WAAS,aAAc3Y,EAAQ,EAAGiF,KAAK+sC,iBACvC,IAAIhC,EAA6D,UAA5C/qC,KAAKzI,OAAO2E,aAAaQ,eAA6B3B,EAAQA,EAAQ,EAG3F,GAFAiF,KAAKzI,OAAOiB,KAAK4e,cAAe,KAAE7Z,OAAO,EAAG,GAC5CyC,KAAKzI,OAAOiB,KAAK4e,cAAe,KAAE7Z,OAAOwtC,EAAgB,EAAGyF,GACxDxwC,KAAKzI,OAAO2H,YAAcc,KAAKzI,OAAO4H,oBAAsBa,KAAKzI,OAAOmI,cAAe,CACvF,IAAIo0B,EAAc9zB,KAAKzI,OAAOoW,qBAE1BgjC,EAAqB3wC,KAAKzI,OAAOiB,KAAK67B,gBAAgB,GAC1DP,EAAY/4B,EAAQ,GAAG+zB,GAAUgF,EAAY,IAC7C9zB,KAAKzI,OAAOiB,KAAK4e,cAAmB,WAAE7Z,OAAO,EAAG,GAChDyC,KAAKzI,OAAOiB,KAAK4e,cAAmB,WAAE7Z,OAAOwtC,EAAgB,EAAG4F,GAChEj9B,WAAS,aAAc3Y,EAAQ,EAAGiF,KAAK+sC,iBAE3C,GAAsC,QAAlC/sC,KAAKzI,OAAO2E,aAAaC,MAAoD,SAAlC6D,KAAKzI,OAAO2E,aAAaC,KAAiB,CAErF,IAAK,IADDy0C,EAAS5wC,KAAKzI,OAAOiB,KAAK8c,kBAAkB3O,iBAAiB,gBACxDzO,EAAI,EAAGA,EAAI04C,EAAOx4C,OAAQF,IAC/B04C,EAAO14C,GAAGgrB,SAEdxP,WAAS,gBAAkB1T,KAAKzI,OAAOiB,KAAK4D,WAAWkzC,SAEvDiB,IACAvwC,KAAK2sC,iBAAmB,MAE5B8D,EAAgBI,WAsB5BnE,EAAKzrC,UAAU0C,UAAY,SAAUyD,GACjC,GAAyB,YAArBA,EAAKvH,aAA6BG,KAAKmuC,UACvC/mC,EAAKC,QAAS,OAGlB,GAAsC,SAAlCrH,KAAKzI,OAAO2E,aAAaC,MAAwC,cAArBiL,EAAKvH,YAArD,CAIA,GAAIG,KAAK2tC,oBAAsB3tC,KAAK2tC,kBAAkBnnC,UAAUC,SAAS,qBACrEzG,KAAK2tC,kBAAkBnnC,UAAUC,SAAS,uBAAyBzG,KAAK2tC,kBAAkBnnC,UAAUC,SAAS,YAG7G,OAFAW,EAAKC,QAAS,OACdrH,KAAK2tC,kBAAoB,MAG7B,GAAyB,WAArBvmC,EAAKvH,YAEL,IAAK,IADDlB,EAAOyI,EAAKzI,KACPzG,EAAI,EAAGA,EAAIyG,EAAKvG,OAAQF,IAAK,CAClC8H,KAAKisC,eAAettC,EAAKzG,GAAG2B,UAE5B,IAAK,IADDgyC,EAAS5xC,EAAoB0E,EAAKzG,IAC7BqJ,EAAI,EAAGA,EAAIsqC,EAAOzzC,OAAQmJ,IAC/BvB,KAAKisC,eAAeJ,EAAOtqC,GAAG1H,UAElCuN,EAAKzI,KAAOA,EAAKvE,OAAOyxC,GAGhC,GAAyB,QAArBzkC,EAAKvH,YAAuB,CAE5B,GADAG,KAAKzE,cAAgByE,KAAKzI,OAAOiB,KAAKqtB,iBAClC7lB,KAAKzI,OAAO+G,qBAAsB,CAClC,IAAIwyC,EAAW,yBAA2B9wC,KAAKzE,cAAgB,KAC3DsD,OAAM,EACNmB,KAAKzE,eAAiB,GAAiD,QAA5CyE,KAAKzI,OAAO2E,aAAaQ,gBACR,WAA5CsD,KAAKzI,OAAO2E,aAAaQ,gBACzBsD,KAAK2sC,iBAAmB3sC,KAAKzE,cAAcyK,WAC3CnH,EAAMmB,KAAKzI,OAAOi6B,aAAaroB,cAAc2nC,GAC7C9wC,KAAK1E,YAAcuD,EAAMA,EAAIkJ,SAAW,GAGpC/H,KAAK2sC,kBAA8C,OAA1B3sC,KAAK2sC,kBAC9BmE,EAAW,yBAA2B9wC,KAAK2sC,iBAAmB,KAC9D9tC,EAAMmB,KAAKzI,OAAOi6B,aAAaroB,cAAc2nC,GAC7C9wC,KAAK1E,YAAcuD,EAAMA,EAAIkJ,SAAW,GAGxC/H,KAAK1E,YAAc,OAK3B0E,KAAK1E,YAAc0E,KAAKzI,OAAOiB,KAAKqtB,kBAAoB,EAAI7lB,KAAKzI,OAAOiB,KAAKqtB,iBAAmB,EAEpG7lB,KAAKvE,aAAeuE,KAAKzI,OAAOsP,qBAAqB,GAEzDO,EAAOpH,KAAK+wC,aAAa3pC,QA/CrBA,EAAKC,QAAS,GAyDtBqlC,EAAKzrC,UAAUqsC,wBAA0B,SAAUlmC,GACX,OAAhCpH,KAAK6sC,yBACL7sC,KAAK6sC,uBAAyB7sC,KAAKzI,OAAO2E,aAAaQ,iBAG/DgwC,EAAKzrC,UAAU8vC,aAAe,SAAU3pC,GACpC,IAAItM,EAAQsM,EAAKzI,KACjB,GAAoB,QAAhByI,EAAKzL,OAAkB,CACvB,IAAIjD,EAAMsH,KAAKzI,OAAOiB,KAAKoD,0BAA0B,GACjDkzB,EAAW,KACfh0B,EAAMmC,SAAW1E,oBAAkBuC,EAAMmC,UAAYR,YAAW2K,EAAKzI,MAAQ7D,EAAMmC,SAGnF,IAAI4a,EAAc7X,KAAKzI,OAAOiB,KAAKgE,wBAC/BzB,EAAQiF,KAAK1E,YACjBR,EAAMjB,SAAWgb,SAAO7U,KAAKzI,OAAOud,QAAQC,GAAK,UACjDrB,WAAS,sBAAwB5Y,EAAMjB,SAAUiB,EAAOkF,KAAKzI,QAC7D,IAAIyD,EAAQ,EAERsC,OAAY,EACZkB,OAAiB,EACjB7E,OAAa,EACb0D,OAAkB,EAClBkzC,EAAmBvwC,KAAKzI,OAAO+G,sBAAwB0B,KAAK1E,aAAe,GAA+B,OAA1B0E,KAAK2sC,iBACrFzmC,EAAOlG,KAAKzI,OAAOwH,UACnBqxC,EAAiBlqC,EAAK9N,QAAU8N,EAAK,GAAGsE,aAAa,iBAAmB,EACxE6lC,EAAgBnqC,EAAK9N,QAAU8N,EAAKA,EAAK9N,OAAS,GAAGoS,aAAa,iBAAmB,EACrF8lC,EAActwC,KAAKzE,eAAiB60C,GAAkBpwC,KAAKzE,eAAiB80C,EAUhF,GATIx4B,EAAYzf,SACAyf,EAAY7X,KAAK1E,aAAaP,MAC1CuC,EAAYua,EAAY7X,KAAK1E,aAAa0E,KAAKzI,OAAO+F,WACtDD,EAAkBwa,EAAY7X,KAAK1E,aAAa0E,KAAKzI,OAAO8F,iBACxDwa,EAAY7X,KAAK1E,aAAa3B,aAC9B6E,EAAiBqZ,EAAY7X,KAAK1E,aAAa3B,WAAWE,UAE9DF,EAAake,EAAY7X,KAAK1E,aAAa3B,YAEC,QAA5CqG,KAAKzI,OAAO2E,aAAaQ,gBAA4Bmb,EAAYzf,OAAQ,CAEzE,GADA4C,EAAQ6c,EAAY7X,KAAK1E,aAAaN,MACU,UAA5CgF,KAAKzI,OAAO2E,aAAaQ,eACzBoyB,EAAW,SACX/zB,EAAQ8c,EAAY7X,KAAK1E,aAAaP,WAErC,GAAgD,UAA5CiF,KAAKzI,OAAO2E,aAAaQ,eAA4B,CAC1DoyB,EAAW,QACX,IAAIuc,EAAmBpxC,EAAoB4d,EAAY7X,KAAK1E,cAAclD,OACtEyyC,EAAmBhzB,EAAY7X,KAAK1E,aAAaP,MACrDA,EAASswC,EAAmB,EAAMR,EAAmBQ,SAEpD,GAAgD,UAA5CrrC,KAAKzI,OAAO2E,aAAaQ,eAA4B,CAC1DoyB,EAAW,SACN9uB,KAAKzE,eAAiB,GAAKg1C,IAAqBD,IACjDx1C,EAAMnB,WAAa8C,YAAWob,EAAY7X,KAAK1E,cAC/CR,EAAM0D,eAAiB1D,EAAMnB,WAAWE,gBACjCiB,EAAMnB,WAAWQ,oBACjBW,EAAMnB,WAAWqG,KAAKzI,OAAOiG,eAExC,IAAIwzC,EAAoB/2C,EAAoB4d,EAAY7X,KAAK1E,cAAclD,OACvE64C,EAAoBp5B,EAAY7X,KAAK1E,aAAaP,MACtDD,EAAME,MAAQA,EAAQ,EACtBD,EAASi2C,EAAoB,EAAMC,EAAoBD,IACnDhxC,KAAK3E,kBACLP,EAAMmC,SAAS+C,KAAKzI,OAAO8F,iBAAmBvC,EAAMkF,KAAKzI,OAAO8F,iBAAmBC,EAC9E/E,oBAAkBuC,EAAMnB,aACzB8D,EAAgB/E,EAAKoC,EAAMnB,WAAY,MAAOqG,KAAKzI,OAAQyI,KAAK3E,gBAAiBP,IAsB7F,GAlBgD,UAA5CkF,KAAKzI,OAAO2E,aAAaQ,gBAA0E,UAA5CsD,KAAKzI,OAAO2E,aAAaQ,kBAC3EsD,KAAKzE,eAAiB,GAAKg1C,IAAqBv1C,GAASs1C,IAC1Dx1C,EAAM0D,eAAiBA,EACvB1D,EAAMnB,WAAa8C,YAAW9C,UACvBmB,EAAMnB,WAAWQ,oBACjBW,EAAMnB,WAAWqG,KAAKzI,OAAOiG,eAExC1C,EAAME,MAAQA,EACVgF,KAAK3E,kBACLP,EAAMmC,SAAS+C,KAAKzI,OAAO8F,iBAAmBvC,EAAMkF,KAAKzI,OAAO8F,iBAAmBA,EAC9E9E,oBAAkBuC,EAAMnB,aACzB8D,EAAgB/E,EAAKoC,EAAMnB,WAAY,MAAOqG,KAAKzI,OAAQyI,KAAK3E,gBAAiBP,KAI7E,MAAZg0B,IAAqB9uB,KAAKzE,eAAiB,GAAKg1C,IAAqBD,IACrElpC,EAAKrM,MAAqB,WAAb+zB,EAAwB/zB,EAAQA,EAAQ,GAET,WAA5CiF,KAAKzI,OAAO2E,aAAaQ,eAA6B,CACtD,IAAIlF,EAAcwI,KAAKzI,OAAOiB,KAAKhB,sBAAsBC,cACrDuI,KAAKzI,OAAOiB,KAAKhB,WAAWA,WAAWsE,KAAOkE,KAAKzI,OAAOiB,KAAKhB,WACnE4P,EAAKrM,MAAQvD,EAAWY,QAG5BG,oBAAkBuC,EAAME,SACxBF,EAAME,MAAQA,GAGlBF,EAAMZ,iBAAkB,EACxBY,EAAMX,gBACNW,EAAMC,MAAQ,EAOlB,GALoB,QAAhBqM,EAAKzL,SACLqE,KAAK8sC,oBAAuB9xC,MAAOF,EAAME,MAAOrB,WAAYmB,EAAMnB,WAAYE,SAAUiB,EAAMjB,SAC1FoD,SAAUnC,EAAMmC,SAAUuB,eAAgBjG,oBAAkBuC,EAAMnB,iBAAcshB,EAAYngB,EAAMnB,WAAWE,SAC7GM,aAAcW,EAAMX,eAEH,WAArBiN,EAAKvH,YAEL,IAAK,IADDqxC,EAAgB9pC,EAAKzI,KAChBzG,EAAI,EAAGA,EAAIg5C,EAAc94C,OAAQF,IACtC,GAAIg5C,EAAch5C,GAAGyB,WAAY,CACzBA,EAAaC,EAAcoG,KAAKzI,OAAQ25C,EAAch5C,GAAGyB,WAAWE,UACxE,IAAKtB,oBAAkBoB,IAAeA,EAAWO,gBAAiB,CAC9D,IAAIylC,EAAahmC,EAAWQ,aAAauE,QAAQwyC,EAAch5C,IAC/DyB,EAAWQ,aAAaoD,OAAOoiC,EAAY,IAK3D,OAAOv4B,GAMXslC,EAAKzrC,UAAU4tB,UAAY,SAAUlwB,EAAM5D,EAAO+zB,GAC9C9uB,KAAK6sC,uBAAyB7sC,KAAKzI,OAAO2E,aAAaQ,eACnDiC,GACI5D,GAAS,GACTiF,KAAKzE,cAAgBR,EACrBiF,KAAK1E,YAAcP,IAGnBiF,KAAKzE,cAAgByE,KAAKzI,OAAOsuB,iBACjC7lB,KAAK1E,YAAc0E,KAAKzI,OAAOsuB,kBAE/BiJ,GACA9uB,KAAKzI,OAAOokB,eAAgBzf,cAAgBQ,eAAgBoyB,KAAc,GAE9E9uB,KAAKzI,OAAOiB,KAAK4D,WAAWyyB,UAAUlwB,EAAM5D,IAG5CiF,KAAKzI,OAAOiB,KAAK4D,WAAWyyB,UAAUlwB,EAAM5D,IAOpD2xC,EAAKzrC,UAAUkwC,iBAAmB,WAC9B,OAAOnxC,KAAKzI,OAAOiB,KAAK4D,WAAW+0C,oBAKvCzE,EAAKzrC,UAAUmwC,YAAc,WACzBpxC,KAAKzI,OAAOiB,KAAK4D,WAAWg1C,eAEhC1E,EAAKzrC,UAAUisC,aAAe,SAAUpvC,GAC/BvF,oBAAkBuF,EAAEsJ,KAAKvH,cACY,WAAlC/B,EAAEsJ,KAAKvH,YAAYmG,YAA6D,SAAlClI,EAAEsJ,KAAKvH,YAAYmG,aAC3B,UAAlChG,KAAKzI,OAAO2E,aAAaC,MAAsD,cAAlC2B,EAAEsJ,KAAKvH,YAAYmG,cACxEhG,KAAK+vC,YAAY/vC,KAAKzI,OAAOiB,KAAKhB,WAAYwI,KAAKzI,OAAOwH,UAAWiB,KAAKzI,OAAOiF,0BAC7EwD,KAAKzI,OAAO2H,YAAcc,KAAKzI,OAAO4H,oBAAsBa,KAAKzI,OAAOmI,gBACpEM,KAAKzI,OAAOiB,KAAKhB,WAAWY,SAAW4H,KAAKzI,OAAOoW,qBAAqBvV,QACxE4H,KAAK+vC,YAAY/vC,KAAKzI,OAAOiB,KAAKhB,WAAYwI,KAAKzI,OAAOoW,qBAAsB3N,KAAKzI,OAAOiF,2BAS5GkwC,EAAKzrC,UAAUouB,SAAW,SAAUtnB,EAAUmI,GACJ,SAAlClQ,KAAKzI,OAAO2E,aAAaC,MAAqD,UAAlC6D,KAAKzI,OAAO2E,aAAaC,OAC/B,UAAlC6D,KAAKzI,OAAO2E,aAAaC,OACzB6D,KAAKmuC,WAAY,EACjBnuC,KAAKquC,mBAAmB,UAE5BruC,KAAKzI,OAAOiB,KAAK4D,WAAWizB,SAAStnB,EAAUmI,KAGhDw8B,KCpwBP2E,GAA+B,WAC/B,SAASA,EAAc95C,GACnB6W,OAAKC,OAAOijC,iBACZtxC,KAAKzI,OAASA,EAiBlB,OAXA85C,EAAcpwC,UAAUgH,cAAgB,WACpC,MAAO,iBAOXopC,EAAcpwC,UAAUiH,QAAU,aAG3BmpC,KCjBPE,GAA2B,WAC3B,SAASA,EAAUh6C,GACf6W,OAAKC,OAAOmjC,aACZxxC,KAAKzI,OAASA,EACdyI,KAAKuI,mBAwGT,OA/FAgpC,EAAUtwC,UAAUgH,cAAgB,WAChC,MAAO,aAEXspC,EAAUtwC,UAAUsH,iBAAmB,WACnCvI,KAAKzI,OAAOiR,GAAG,eAAgBxI,KAAKyxC,aAAczxC,MAClDA,KAAKzI,OAAOiR,GAAG,kBAAmBxI,KAAK0xC,gBAAiB1xC,MACxDA,KAAKzI,OAAOiB,KAAKgQ,GAAG,yBAA0BxI,KAAK2xC,oBAAqB3xC,MACxEA,KAAKzI,OAAOiR,GAAG,iBAAkBxI,KAAK4xC,eAAgB5xC,MACtDA,KAAKzI,OAAOiR,GAAG,oBAAqBxI,KAAK6xC,kBAAmB7xC,MAC5DA,KAAKzI,OAAOiR,GAAG,iBAAkBxI,KAAK8xC,eAAgB9xC,OAK1DuxC,EAAUtwC,UAAU4H,oBAAsB,WAClC7I,KAAKzI,OAAOuR,cAGhB9I,KAAKzI,OAAOwR,IAAI,eAAgB/I,KAAKyxC,cACrCzxC,KAAKzI,OAAOwR,IAAI,kBAAmB/I,KAAK0xC,iBACxC1xC,KAAKzI,OAAOwR,IAAI,iBAAkB/I,KAAK4xC,gBACvC5xC,KAAKzI,OAAOwR,IAAI,oBAAqB/I,KAAK6xC,mBAC1C7xC,KAAKzI,OAAOwR,IAAI,iBAAkB/I,KAAK8xC,gBACvC9xC,KAAKzI,OAAOiB,KAAKuQ,IAAI,yBAA0B/I,KAAK2xC,uBAExDJ,EAAUtwC,UAAU0wC,oBAAsB,SAAUvqC,GAEhDA,EAAY,SAAI,GAEpBmqC,EAAUtwC,UAAUwwC,aAAe,WAI/B,IAAK,IAHDM,EAAY/xC,KAAKzI,OAAOwH,UAAUlB,OAAO,SAAUC,GACnD,OAAQA,EAAE0I,UAAUC,SAAS,iBAExBvO,EAAI,EAAGA,EAAI65C,EAAU35C,OAAQF,IAAK,CACvC,IAAI85C,EAAWD,EAAU75C,GAAGud,uBAAuB,uBAC/Cw8B,EAAajyC,KAAKzI,OAAOiB,KAAKkd,oBAAoBq8B,EAAU75C,GAAGsS,aAAa,aAC5E7Q,EAAaP,YAAU,aAAc4G,KAAKzI,OAAOiB,KAAKgE,wBAAwBtE,KAC9EK,oBAAkBoB,KAAgBpB,oBAAkBoB,IACpDL,EAAgB0G,KAAKzI,OAAQ06C,EAAWtzC,KAAMqB,KAAKzI,OAAOiB,KAAKgE,2BAC/DwD,KAAKzI,OAAOiB,KAAKsd,gBAAgBnF,OAAOqhC,EAAS,MAI7DT,EAAUtwC,UAAU2wC,eAAiB,SAAUxqC,GAC3C,IAAI8qC,EAAmB9qC,EAAKvI,IAAI4W,uBAAuB,uBAClDld,oBAAkB25C,EAAiB,KACpClyC,KAAKzI,OAAOiB,KAAKsd,gBAAgBnF,OAAOuhC,EAAiB,KAGjEX,EAAUtwC,UAAU4wC,kBAAoB,SAAUzqC,GAC9C,IAAI9P,EAAa0I,KAAKzI,QAGtB,IAAK,IAAIW,EAAI,EAAGA,EAAIkP,EAAKisB,WAAWj7B,OAAQF,IACxCkP,EAAKisB,WAAWn7B,GAAGgT,MAAMwE,QAAUtI,EAAKzL,QAGhD41C,EAAUtwC,UAAUywC,gBAAkB,SAAUtqC,GAC5C,IAAKgF,eAAepM,KAAKzI,OAAOge,iBAAkB,CAC9C,IAAI5W,EAAOyI,EAAKzI,KACZE,EAAMuI,EAAK+qC,cAAcpyB,cAAcqyB,gBAEvCC,EAAgB,kBADP95C,oBAAkBoG,EAAKhF,YAAsCgF,EAAK5D,MAA7B4D,EAAKhF,WAAWoB,OACnB,QAAU4D,EAAK3D,MAC1Ds3C,EAAYzzC,EAAIsK,cAAc,IAAMkpC,GAAe7rC,UACnD+rC,KAAc7rC,MAAMnB,KAAK+sC,GAAWz0C,OAAO,SAAU20C,GAAa,OAAQA,IAAcH,IACxFI,EAAQF,EAAS,GAAGn6C,OAEpBs6C,EAAc,eADDH,EAASvsC,WAAWU,MAAM,EAAG+rC,GAE9C3jC,YAAU1H,EAAK+qC,cAAcpyB,eAAgB2yB,KAIrDnB,EAAUtwC,UAAU6wC,eAAiB,SAAU1qC,GAC3C,GAAyB,cAArBA,EAAKvH,aAAoD,QAArBuH,EAAKvH,YAAuB,CAChE,IAAI8yC,EAASvrC,EAAKvI,IAAI8H,iBAAiB,eAAe,GAAG6D,aAAa,WAElEooC,GADQ5hC,SAAS2hC,EAAO,IAAM,GACX3sC,WACvBoB,EAAKvI,IAAI8H,iBAAiB,eAAe,GAAG6E,aAAa,UAAWonC,GAGxE,IAAK,IADDC,EAAe7yC,KAAKzI,OAAOiB,KAAK4e,cAAcrY,UACzC7G,EAAI,EAAGA,EAAI26C,EAAaz6C,OAAQF,IACrC26C,EAAa36C,GAAGsH,MAAM,GAAGyyB,SAAU,EAErB74B,YAAU,cAAe4G,KAAKzI,OAAOiB,MAErC,eAAE,EAApBizC,EAA4BvlC,KAAMlG,KAAKzI,OAAOiB,KAAK4e,cAAcrY,aAOrEwyC,EAAUtwC,UAAUiH,QAAU,WAC1BlI,KAAK6I,uBAEF0oC,KCpHP9wC,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBxH,OAAO2H,iBAChBC,wBAA2B/D,OAAS,SAAU4D,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI7C,KAAK6C,EAAOA,EAAEzD,eAAeY,KAAI4C,EAAE5C,GAAK6C,EAAE7C,MACpD4C,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAa1H,OAAOgI,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,IAAIF,IAV3C,GAmBxC+xC,GAA4C,SAAU/wC,GAEtD,SAAS+wC,EAA2Bv7C,EAAQw7C,GACxC,IAAIztC,EAAQvD,EAAOwD,KAAKvF,KAAMzI,EAAQw7C,IAAY/yC,KAWlD,OAVAsF,EAAM0tC,kBAAmB,EACzB1tC,EAAM2tC,WAAa,EACnB3tC,EAAM4tC,SAAW,EACjB5tC,EAAM6tC,aAAc,EAEpB7tC,EAAMinC,YAAc,EACpBjnC,EAAMknC,UAAY,EAClBlnC,EAAM8tC,aAAe,EACrB9tC,EAAM+tC,gBAAiB,EACvB/tC,EAAMiD,mBACCjD,EAoTX,OAjUA7E,GAAUqyC,EAA4B/wC,GAetC+wC,EAA2B7xC,UAAUqyC,kBAAoB,WACrD,OAAO,IAAIjT,GAA6BrgC,KAAKzI,SAEjDu7C,EAA2B7xC,UAAUnC,cAAgB,SAAU/D,GAC3D,OAAOiF,KAAKzI,OAAOo6B,cAAc9zB,OAAO,SAAUC,GAAK,OAAOkT,SAASlT,EAAE0M,aAAa,iBAAkB,KAAOzP,IAAU,IAE7H+3C,EAA2B7xC,UAAUsH,iBAAmB,WACpDvI,KAAKzI,OAAOiR,GAAG+qC,GAA0BvzC,KAAKwzC,mBAAoBxzC,MAClEA,KAAKzI,OAAOiR,GAAGirC,GAAsBzzC,KAAK4E,cAAe5E,OAE7D8yC,EAA2B7xC,UAAUuyC,mBAAqB,SAAUpsC,GAC5DA,EAAKssC,QACL1zC,KAAKizC,WAAa,EAClBjzC,KAAKusC,WAAa,EAClBvsC,KAAKwsC,SAAWxsC,KAAKzI,OAAOgY,aAAas2B,SAAW,GAE/Cz+B,EAAK4rC,mBACVhzC,KAAKgzC,kBAAmB,IAGhCF,EAA2B7xC,UAAU2D,cAAgB,SAAUwC,GAC3D,IAAIw1B,EAAU58B,KAAKzI,OAAOi6B,aAAaroB,cAAc,cACrD,GAAInJ,KAAKmzC,aAAenzC,KAAKusC,YAAc,GAAKvsC,KAAKwsC,UAAY,EAAG,CAChE,GAAIxsC,KAAKwsC,SAAWplC,EAAKwF,MAAQ5M,KAAKzI,OAAOgY,aAAas2B,SAAU,CAChE,IAAI8N,KAAqB/W,EAAQxC,UAAYp6B,KAAKzI,OAAOq8C,gBACrDC,EAAYF,EAAkB3zC,KAAKzI,OAAOwH,UAAU3G,OACpDy7C,EAAYzsC,EAAKwF,QACjBinC,EAAYF,GACPvsC,EAAKwF,MAAQ+mC,IAEtB3zC,KAAKusC,WAAasH,EAAY7zC,KAAKzI,OAAOwH,UAAU3G,OACpD4H,KAAKwsC,SAAWqH,OAGhB7zC,KAAKusC,YAAc,EACnBvsC,KAAKwsC,UAAY,EAErBxsC,KAAKmzC,aAAc,EAEvB/rC,EAAKmlC,WAAavsC,KAAKusC,WACvBnlC,EAAKolC,SAAWxsC,KAAKwsC,UAEzBsG,EAA2B7xC,UAAU2sB,cAAgB,SAAUjyB,GAC3D,IAAI2J,EAAQtF,KACNA,KAAKzI,OAAOC,sBAAsBC,oBAAyDwjB,IAA1Cjb,KAAKzI,OAAOC,WAAWA,WAAWmpC,KACxC,KAA1C3gC,KAAKzI,OAAOC,WAAWA,WAAWmpC,IAiBrC5+B,EAAOd,UAAU2sB,cAAcroB,KAAKvF,KAAM,OAhB1CA,KAAKzI,OAAOoE,GAAQ,aAAcqE,KAAK8zC,YAAa9zC,MAEpDA,KAAKmW,GAAK,WACN7Q,EAAMyuC,UAAUC,SAAS,SAAUC,GAAc,OAAO3uC,EAAM4uC,gBAAgBD,KAC9E3uC,EAAM/N,OAAOwR,IAAI,gBAAiBzD,EAAM6Q,KAE5CnW,KAAKzI,OAAOiR,GAAG,gBAAiBxI,KAAKmW,GAAInW,MACzCA,KAAKzI,OAAOgR,iBAAiBiO,EAAuBxW,KAAKm0C,iBAAiB/6B,KAAKpZ,OAC/EA,KAAKzI,OAAOoE,GAAQ,mCAAoCqE,KAAK2D,UAAW3D,MACxEA,KAAKzI,OAAOoE,GAAQ,kCAAmCqE,KAAK4D,SAAU5D,MACtEA,KAAKzI,OAAOoE,GAAQ,8BAA+BqE,KAAKo0C,mBAAoBp0C,MAC5EA,KAAKzI,OAAOoE,GAAQ,aAAcqE,KAAKq0C,iBAAkBr0C,MACzDA,KAAKzI,OAAOoE,GAAQ,mBAAoBqE,KAAKs0C,QAASt0C,MACtDA,KAAKzI,OAAOoE,GAAQ,6BAA8BqE,KAAKu0C,WAAYv0C,QAM3E8yC,EAA2B7xC,UAAU6yC,YAAc,SAAUh2C,GACzDiE,EAAOd,UAAU6yC,YAAYvuC,KAAKvF,KAAMlC,GAClCkC,KAAKzI,OAAOC,sBAAsBC,oBAAyDwjB,IAA1Cjb,KAAKzI,OAAOC,WAAWA,WAAWmpC,KACxC,KAA1C3gC,KAAKzI,OAAOC,WAAWA,WAAWmpC,MAChCpoC,oBAAkBuF,EAAE8O,SACrB5M,KAAKssC,aAAexuC,EAAE8O,MACtBrO,WAAS,aAAcyB,MAAMw0C,iBAAiBx0C,KAAKzI,OAAOq8C,eAAiB91C,EAAE8O,MAAO,SAGnFrU,oBAAkBuF,EAAE+B,cAA6C,gBAA7B/B,EAAE+B,YAAYmG,aACnDhG,KAAKy0C,SAASra,UAAY,KAItC0Y,EAA2B7xC,UAAU4sB,YAAc,WAC/C9rB,EAAOd,UAAU4sB,YAAYtoB,KAAKvF,MAC5BA,KAAKzI,OAAOC,sBAAsBC,oBAAyDwjB,IAA1Cjb,KAAKzI,OAAOC,WAAWA,WAAWmpC,KACxC,KAA1C3gC,KAAKzI,OAAOC,WAAWA,WAAWmpC,MACrCpiC,WAAS,WAAYyB,MAAMD,QAAQ20C,eAAgB,EACnD10C,KAAK+zC,UAAY,IAAIY,GAAyBp2C,WAAS,WAAYyB,MAAM8U,QAASvW,WAAS,WAAYyB,MAAMD,SAC7GC,KAAKy0C,SAAWz0C,KAAK40C,WAAWtpC,aAGxCwnC,EAA2B7xC,UAAU4zC,cAAgB,SAAUC,EAAMC,EAASC,EAAMC,GAChF,OAAIj1C,KAAKzI,OAAOC,sBAAsBC,oBAAyDwjB,IAA1Cjb,KAAKzI,OAAOC,WAAWA,WAAWmpC,KACtC,KAA1C3gC,KAAKzI,OAAOC,WAAWA,WAAWmpC,IACjC3gC,KAAKqzC,gBACLrzC,KAAKqzC,gBAAiB,EACfrzC,KAAKozC,eAGZpzC,KAAKozC,aAAerxC,EAAOd,UAAU4zC,cAActvC,KAAKvF,KAAM80C,EAAMC,EAASC,EAAMC,GAC5ElzC,EAAOd,UAAU4zC,cAActvC,KAAKvF,KAAM80C,EAAMC,EAASC,EAAMC,IAInElzC,EAAOd,UAAU4zC,cAActvC,KAAKvF,KAAM80C,EAAMC,EAASC,EAAMC,IAG9EnC,EAA2B7xC,UAAU0C,UAAY,SAAU7F,GACvD,IAAIgzC,EAAW,yBAA2BhzC,EAAE/C,MAAQ,KAChDA,EAAQiF,KAAKzI,OAAOi6B,aAAaroB,cAAc2nC,GAAU/oC,SACzD+B,EAAU9J,KAAKzI,OAAOiF,wBAAwBzB,GAClD+C,EAAEa,KAAOmL,GAEbgpC,EAA2B7xC,UAAU2C,SAAW,SAAUwD,GACtD,IAEIwmC,GAAYlxC,eAAgBsD,KAAKk1C,YAAa55C,YAAa0E,KAAK1E,YAAauyC,aAAc7tC,KAAK6tC,cACpG7tC,KAAKzI,OAAOuZ,OAAO,mBAAoB88B,GACvC5tC,KAAKk1C,YAActH,EAAQlxC,eAC3BsD,KAAK1E,YAAcsyC,EAAQtyC,YAC3B0E,KAAK6tC,aAAeD,EAAQC,aAC5B,IAAI3nC,EAAOlG,KAAKzI,OAAOwH,UACnBqxC,EAAiBlqC,EAAK9N,QAAU8N,EAAK,GAAGsE,aAAa,iBAAmB,EACxE6lC,EAAgBnqC,EAAK9N,QAAU8N,EAAKA,EAAK9N,OAAS,GAAGoS,aAAa,iBAAmB,EACrF2qC,EAAcn1C,KAAKzI,OAAOsuB,kBAAoBuqB,GAAkBpwC,KAAKzI,OAAOsuB,kBAAoBwqB,EACzE,QAArBrwC,KAAKk1C,aAA8C,WAArBl1C,KAAKk1C,cACrCl1C,KAAU,OAAI,GAEO,QAArBA,KAAKk1C,aAA8C,WAArBl1C,KAAKk1C,cAChCl1C,KAAK1E,cAAqC,IAAtB0E,KAAK1E,cAA0D,IAAlC0E,KAAKzI,OAAOsuB,kBAA4BsvB,IAC5FpzC,EAAOd,UAAmB,eAAEsE,KAAKvF,KAAMoH,IAG/C0rC,EAA2B7xC,UAAUm0C,iBAAmB,WAEpDrzC,EAAOd,UAAqB,YAAEsE,KAAKvF,OAEvC8yC,EAA2B7xC,UAAUozC,iBAAmB,WAGpDr0C,KAAKzI,OAAOuZ,OAAO,uBACO,QAArB9Q,KAAKk1C,aAA8C,WAArBl1C,KAAKk1C,cAA6Bl1C,KAAU,OAC3E+B,EAAOd,UAAqB,YAAEsE,KAAKvF,OAG3C8yC,EAA2B7xC,UAAUmzC,mBAAqB,SAAUhtC,GAChE,IACIw1B,EAAU58B,KAAKzI,OAAOi6B,aAAaroB,cAAc,cACjDnJ,KAAU,OAAK48B,EAAQzzB,cAAc,iBACrCnJ,KAAKmzC,aAAc,IAG3BL,EAA2B7xC,UAAUszC,WAAa,SAAUntC,GAExDrF,EAAOd,UAAoB,WAAEsE,KAAKvF,KAAMoH,IAE5C0rC,EAA2B7xC,UAAUo0C,cAAgB,WACjD,IACIzY,EAAU58B,KAAKzI,OAAOi6B,aAAaroB,cAAc,cACjDnJ,KAAU,QAAM48B,EAAQzzB,cAAc,iBACtCnJ,KAAKzI,OAAOs0B,QAAS,EACrB7rB,KAAKzI,OAAOs3B,cAGpBikB,EAA2B7xC,UAAUqzC,QAAU,SAAU31C,GAErDoD,EAAOd,UAAwB,eAAEsE,KAAKvF,KAAMrB,IAEhDm0C,EAA2B7xC,UAAUkzC,iBAAmB,SAAU/sC,GAC9D,GAAyB,QAArBA,EAAKvH,YAAuB,CAC5B,IAAI+tC,GAAYlxC,eAAgBsD,KAAKk1C,YAAa55C,YAAa0E,KAAK1E,YAAauyC,aAAc7tC,KAAK6tC,cACpG7tC,KAAKzI,OAAOuZ,OAAO,mBAAoB88B,GACvC5tC,KAAKk1C,YAActH,EAAQlxC,eAC3BsD,KAAK1E,YAAcsyC,EAAQtyC,YAC3B0E,KAAK6tC,aAAeD,EAAQC,aAGhC9rC,EAAOd,UAAwB,eAAEsE,KAAKvF,KAAMoH,IAEhD0rC,EAA2B7xC,UAAUizC,gBAAkB,SAAUD,GAC7D,IAAIe,EAAOf,EAAWqB,SAElB1Y,EAAU58B,KAAKzI,OAAOi6B,aAAaroB,cAAc,cACjDosC,EAFY,GAEev1C,KAAKzI,OAAOq8C,eACvC4B,EAAYvB,EAAWwB,OAAOtb,IAAMn6B,KAAKizC,WAAc,EACvDyC,EAAczB,EAAWwB,OAAOtb,IAAMn6B,KAAKizC,WAAcsC,EAC7D,GAAIC,EAAU,CACV,IAAIG,IAAY31C,KAAKzI,OAAOssB,OAAO7d,WAAWtH,QAAQ,KAAO,EAAIsB,KAAKzI,OAAOssB,OACzE7jB,KAAKzI,OAAOud,QAAQsoB,wBAAwBvZ,QAC5C9oB,KAAY6hC,EAAQxC,UAAYp6B,KAAKzI,OAAOq8C,gBAC1C5+B,KAAKC,KAAK0gC,EAAU31C,KAAKzI,OAAOq8C,gBAChC5zC,KAAKzI,OAAOwH,UAAU3G,OAI5B,GAHA2C,EAASA,EAAQ,EAAKA,EAAQ,EAC9BiF,KAAKusC,WAAaxxC,EAClBiF,KAAKwsC,SAAWzxC,EAAQiF,KAAKzI,OAAOwH,UAAU3G,OAC1C4H,KAAKwsC,SAAWxsC,KAAKssC,aAAc,CACnC,IAAIsJ,EAAU51C,KAAKssC,aAAe,EAC9BuJ,EAAU71C,KAAKwsC,SAAWoJ,EAC9B51C,KAAKwsC,SAAWoJ,EAChB51C,KAAKusC,WAAavsC,KAAKusC,WAAasJ,EAGxC,IAAIC,EAAQ9gC,KAAKC,KAAKg/B,EAAWwB,OAAOtb,IAAMn6B,KAAKzI,OAAOq8C,gBAC1DkC,GAAgB91C,KAAKzI,OAAOgY,aAAas2B,SACzC,IAAIkQ,EAAa,EACjB,IAAKx9C,oBAAkByH,KAAKzI,OAAOwH,UAAU+2C,IAAS,CAGlDC,GAFW/1C,KAAKzI,OAAOi6B,aAAa7qB,iBAAiB,iBAAiBmvC,GACjE3sC,cAAc,MAAMqB,aAAa,SAG1C,GAAmB,IAAfurC,EACA/1C,KAAKizC,WAAagB,EAAWwB,OAAOtb,QAEnC,CACD,IAAItW,EAAS7jB,KAAKzI,OAAOq8C,eACzB5zC,KAAKizC,WAAcgB,EAAWwB,OAAOtb,IAlC7B,GAkCgDtW,EAAU,EAC9DowB,EAAWwB,OAAOtb,IAnCd,GAmCiCtW,EAAU,GAAK,QAG3D,GAAI6xB,EAAY,CACjB,IAAI/B,KAAqB/W,EAAQxC,UAAYp6B,KAAKzI,OAAOq8C,gBACrDC,EAAYF,EAAkB3zC,KAAKzI,OAAOwH,UAAU3G,OACpDy7C,EAAY7zC,KAAKssC,eACjBuH,EAAYF,GACP3zC,KAAKssC,aAAeqH,IAE7B3zC,KAAKusC,WAAasH,EAAY7zC,KAAKzI,OAAOwH,UAAU3G,OACpD4H,KAAKwsC,SAAWqH,EACZI,EAAWwB,OAAOtb,IAAOn6B,KAAKzI,OAAOq8C,eAAiB5zC,KAAKssC,aAC3DtsC,KAAKizC,WAAajzC,KAAK60C,cAAcZ,EAAWwB,OAAOtb,IAAKyC,EAAQQ,wBAAwBvZ,QAG5F7jB,KAAKizC,WAAagB,EAAWwB,OAAOtb,IAG5C,GAAKub,GAAezB,EAAWwB,OAAOtb,IAAOn6B,KAAKzI,OAAOq8C,eAAiB5zC,KAAKssC,gBAC5D,CACf,IAAI0J,EAAWz3C,WAAS,kBAAmByB,MAAMgC,MAAMhC,MAAOi0C,EAAW56B,UAAW27B,EAAMf,EAAWwB,SACrGz1C,KAAKi2C,aAAeD,EACpB,IAAIt+B,EAAOs+B,EAASz+B,WAAay+B,EAASE,SAAWF,EAASv+B,SAASC,KAAOs+B,EAASt+B,KACvF1X,KAAKzI,OAAOokB,eAAgBpM,cAAgBiI,YAAaE,KAAU,GAC5C,0BAAnBs+B,EAASG,MACTn2C,KAAKzI,OAAOu2B,UAGZ9tB,KAAKzI,OAAOuZ,OAAOklC,EAASG,OAASt2C,YAAa,gBAAiBgzC,aAAcoB,EAAWpB,iBAIxGC,EAA2B7xC,UAAUm1C,cAAgB,SAAU/0C,EAAQg1C,EAAUv4C,GAC7E,GAAIkC,KAAKzI,OAAOC,sBAAsBC,oBAAyDwjB,IAA1Cjb,KAAKzI,OAAOC,WAAWA,WAAWmpC,KACtC,KAA1C3gC,KAAKzI,OAAOC,WAAWA,WAAWmpC,IACjCpiC,WAAS,mBAAoBT,KAC7BkC,KAAKqzC,gBAAiB,GAE1BtxC,EAAOd,UAAUm1C,cAAc7wC,KAAKvF,KAAMqB,EAAQg1C,EAAUv4C,OAE3D,CACD,IAAIk3C,EAAOl3C,EAAEw4C,YAAYC,cAAoD,MAApCz4C,EAAEw4C,YAAYC,aAAaC,MAChEj4C,WAAS,cAAeyB,MAAM0X,MAAQnZ,WAAS,cAAeyB,MAAM0X,OAAS5Z,EAAEw4C,YAAY5+B,KAC3FnZ,WAAS,cAAeyB,MAAQlC,EAAEw4C,YAClCG,EAAUzB,EAAK0B,cAAc,GAAM,EACnCC,EAAU32C,KAAK42C,gBAAgBH,IAEnCp1C,EAASrB,KAAKzI,OAAOoT,cAAc,UAC5BsB,YAAYoqC,GAEnBr2C,KAAK62C,WAAW1tC,cAAc,SAAgB,YAAE9H,GAC3CrB,KAAKgzC,kBAAwC,IAApBhzC,KAAKizC,WAI/BjzC,KAAKgzC,kBAAmB,EAHxBz0C,WAAS,aAAcyB,MAAM82C,YAAYH,EAAS32C,KAAKizC,YAK3Dv/B,WAAS,WAAY1T,KAAKi2C,aAAej2C,KAAKi2C,aAAejB,EAAMh1C,MAGnE+B,EAAOd,UAAmB,UAAEsE,KAAKvF,KAAMlC,GAEnCkC,KAAU,QAAMA,KAAKzI,OAAOi6B,aAAaroB,cAAc,cAAcA,cAAc,gBACxD,QAArBnJ,KAAKk1C,aAA8C,WAArBl1C,KAAKk1C,cACjCl1C,KAAK6tC,cAAgB7tC,KAAKusC,WAC1BvsC,KAAKq1C,gBAEAr1C,KAAK1E,aAAe0E,KAAK1E,aAAe,IAC7C0E,KAAU,OAAI,EACdA,KAAKzI,OAAOs0B,QAAS,IAIjC7rB,KAAKo1C,mBACLrzC,EAAOd,UAAoB,WAAEsE,KAAKvF,QAG1C8yC,EAA2B7xC,UAAU4H,oBAAsB,WACnD7I,KAAKzI,OAAOuR,cAGhB9I,KAAKzI,OAAOwR,IAAI,aAAc/I,KAAK8zC,aACnC9zC,KAAKzI,OAAOwR,IAAI,gBAAiB/I,KAAKmW,IACtCnW,KAAKzI,OAAOwR,IAAIwqC,GAA0BvzC,KAAKwzC,oBAC/CxzC,KAAKzI,OAAOwR,IAAI0qC,GAAsBzzC,KAAK4E,eAC3C5E,KAAKzI,OAAOwR,IAAI,mCAAoC/I,KAAK2D,WACzD3D,KAAKzI,OAAOwR,IAAI,kCAAmC/I,KAAK4D,UACxD5D,KAAKzI,OAAOwR,IAAI,8BAA+B/I,KAAKo0C,oBACpDp0C,KAAKzI,OAAOwR,IAAI,aAAc/I,KAAKq0C,kBACnCr0C,KAAKzI,OAAOwR,IAAI,mBAAoB/I,KAAKs0C,SACzCt0C,KAAKzI,OAAOwR,IAAI,6BAA8B/I,KAAKu0C,cAEhDzB,GACTiE,0BAEEpC,GAA0C,SAAU5yC,GAEpD,SAAS4yC,IACL,IAAIrvC,EAAmB,OAAXvD,GAAmBA,EAAOC,MAAMhC,KAAMwB,YAAcxB,KAKhE,OAJAsF,EAAM0xC,YAAa,EACnB1xC,EAAM2xC,OAAS,EACf3xC,EAAM4xC,QAAU,EAChB5xC,EAAM6xC,MAAQ,EACP7xC,EA8CX,OArDA7E,GAAUk0C,EAA0B5yC,GASpC4yC,EAAyB1zC,UAAU+yC,SAAW,SAAUoD,GACpD1jC,WAAS,gBAAiBnV,WAAS,UAAWyB,MAAM4L,UAAUwxB,wBAAyBp9B,MACvFwhB,eAAavW,IAAI1M,WAAS,UAAWyB,MAAM4L,UAAW,SAAU5L,KAAKq3C,sBAAsBD,GAAWp3C,OAE1G20C,EAAyB1zC,UAAU4/B,MAAQ,WACvC7gC,KAAKk3C,QAAU,MAEnBvC,EAAyB1zC,UAAUo2C,sBAAwB,SAAUD,GACjE,IAAI9xC,EAAQtF,KACRs3C,EAAU,EACVC,EAAW,EACf,OAAO,SAAUz5C,GACb,IAAIs8B,EAAYt8B,EAAEuD,OAAO+4B,UACrBqD,EAAa3/B,EAAEuD,OAAOo8B,WACtBpkB,EAAYi+B,EAAUld,EAAY,OAAS,KAC/C/gB,EAAYk+B,IAAa9Z,EAAapkB,EAAYk+B,EAAW9Z,EAAa,QAAU,OACpF6Z,EAAUld,EACVmd,EAAW9Z,EACX,IAAIqI,EAAUvnC,WAAS,eAAgB+G,GAAO+T,GAC1Cm+B,EAAQ,EACZlyC,EAAM2xC,OAAS7c,EACM,MAAjB90B,EAAM4xC,UACNM,EAAQlyC,EAAM2xC,OAAS3xC,EAAM4xC,SAEjC5xC,EAAM4xC,QAAU5xC,EAAM2xC,OAClB3xC,EAAM6xC,OACNM,aAAanyC,EAAM6xC,OAEvB7xC,EAAM6xC,MAAQvsB,WAAWtlB,EAAMu7B,MAAO,IAOjC2W,EAAQ,KAAOA,GAAS,MAAS15C,GAAKA,EAAE45C,iBACzC55C,EAAE65C,aAAc,EAChB75C,EAAE45C,kBAENN,GAAW/9B,UAAWA,EAAWu+B,QAAStyC,EAAM0xC,WAC5C1B,SAAUxP,EAAS2P,QAAUtb,IAAKC,EAAWQ,KAAM6C,GACnDoV,aAAchZ,SAAS6W,kBAG5BiE,GACTkD,wBC/YEp3C,GAAwC,WACxC,IAAIC,EAAgB,SAAUC,EAAGC,GAI7B,OAHAF,EAAgBxH,OAAO2H,iBAChBC,wBAA2B/D,OAAS,SAAU4D,EAAGC,GAAKD,EAAEG,UAAYF,IACvE,SAAUD,EAAGC,GAAK,IAAK,IAAI7C,KAAK6C,EAAOA,EAAEzD,eAAeY,KAAI4C,EAAE5C,GAAK6C,EAAE7C,MACpD4C,EAAGC,IAE5B,OAAO,SAAUD,EAAGC,GAEhB,SAASG,IAAOf,KAAKgB,YAAcL,EADnCD,EAAcC,EAAGC,GAEjBD,EAAEM,UAAkB,OAANL,EAAa1H,OAAOgI,OAAON,IAAMG,EAAGE,UAAYL,EAAEK,UAAW,IAAIF,IAV3C,GAwBxC+2C,GAA+B,WAI/B,SAASA,EAAcvgD,GACnByI,KAAK+3C,gBAAkB,EACvB/3C,KAAKg4C,cAAgB,EACrBh4C,KAAKzI,OAASA,EAId,IAAK,IADDyqB,EAAU5T,OAAKnN,UAAyB,gBACnC/I,EAAI,EAAGA,EAAI8pB,EAAQ5pB,OAAQF,IAChC,GAAI8pB,EAAQ9pB,KAAO+/C,gBAAmB,CAClCj2B,EAAQzkB,OAAOrF,EAAG,GAClB,MAGRkW,OAAKC,OAAO6pC,IACZl4C,KAAKuI,mBA4GT,OA1GAuvC,EAAc72C,UAAUk3C,iBAAmB,SAAU/wC,GACjDA,EAAKzI,KAAOqB,KAAKwgC,YAMrBsX,EAAc72C,UAAUgH,cAAgB,WACpC,MAAO,iBAKX6vC,EAAc72C,UAAUsH,iBAAmB,WACvCvI,KAAKzI,OAAOiR,GAAG+qB,EAAiCvzB,KAAKo4C,4BAA6Bp4C,MAClFA,KAAKzI,OAAOiR,GAAGmR,EAAsB3Z,KAAKq4C,kBAAmBr4C,OAKjE83C,EAAc72C,UAAU4H,oBAAsB,WACtC7I,KAAKzI,OAAOuR,cAGhB9I,KAAKzI,OAAOwR,IAAIwqB,EAAiCvzB,KAAKo4C,6BACtDp4C,KAAKzI,OAAOwR,IAAI4Q,EAAsB3Z,KAAKq4C,qBAE/CP,EAAc72C,UAAUm3C,4BAA8B,SAAUv5C,GAC5DmB,KAAKzI,OAAOiB,KAAKsY,OAAOyiC,IAA4BP,kBAAkB,IACtEhzC,KAAKs4C,kBAAoBz5C,EAAItF,OAC7BsF,EAAItF,OAAOS,SAA0B,aAAf6E,EAAIlD,OAC1B,IAAIwpC,GACA5xB,OAAQvT,KAAKzI,OAAOqG,SACpBiB,IAAKA,EAAIA,IACTlD,OAAQkD,EAAIlD,OACZpC,OAAQsF,EAAItF,OACZqT,MAAO5M,KAAKzI,OAAOqG,SAASxF,QAE5ByH,EAActB,WAAS,gBAAiByB,KAAKzI,QAAU,cAAgB,UAC3EgH,WAAS,oBAAqByB,KAAKzI,QAAQqc,mBAAmBuxB,GAAOtlC,YAAaA,KAEtFi4C,EAAc72C,UAAUo3C,kBAAoB,SAAU5S,GAClD,IAAIngC,EAAQtF,KACR1F,EAAK,IAAI7C,cAAYguC,EAAelyB,QACpCvZ,EAAW,IAAI8H,YAAU,WAAY,WAAY,MAAMkkC,GAAG,WAAY,gBAAY/qB,GAClFzhB,EAAUc,EAAG4Z,cAAa,IAAIzB,SAAQI,MAAM7Y,IAC5CwmC,EAAahnC,EAAQqE,OAAO,SAAUC,GACtC,OAAOxE,EAAgBgM,EAAM/N,OAAQuG,EAAGtE,KAE5CwG,KAAKwgC,WAAaA,EAClBxgC,KAAKzI,OAAOiB,KAAKsY,OAAOwvB,IAAuB3hC,KAAM6hC,IACrD,IAAI+X,GAAWhM,YAAa,EAAGC,UAAW,EAAG5/B,MAAO64B,EAAe74B,OACnE5M,KAAKzI,OAAOiB,KAAKsY,OAAO2iC,GAAsB8E,GAC9C,IAAIhM,EAAagM,EAAOhM,WACpBC,EAAW+L,EAAO/L,SAEtB,GADA/G,EAAe74B,MAAQ4zB,EAAWpoC,QACd,IAAhBm0C,IAAmC,IAAdC,EAAiB,CACtC,IAAIh6B,EAAQ,IAAIC,QACZmzB,EAAO5lC,KAAKzI,OAAOiB,KAAK+W,aAAas2B,SAErCF,EAAOC,GADG5lC,KAAKzI,OAAOiB,KAAK+W,aAAaiI,YACf,GAC7BhF,EAAQA,EAAMmzB,KAAKA,GAAMI,KAAKH,GAC9BtrC,EAAG9C,WAAWsE,KAAO0kC,EACrBiF,EAAelyB,OAASjZ,EAAG4Z,aAAa1B,OAEvC,CASD,GAPoB,cADFizB,EAAettB,WAAWtY,cAExC0sC,EAAa,EACbC,EAAWxsC,KAAKzI,OAAOiB,KAAK+W,aAAas2B,SAAW,EACpD7lC,KAAKzI,OAAOiB,KAAKsY,OAAOyiC,IAA4BG,QAAQ,MAI3Dn7C,oBAAkByH,KAAKs4C,mBAAoB,CAC5C,IAAIE,EAAgBx4C,KAAKzI,OAAOwH,UAC5B05C,EAASjY,EAAW9hC,QAAQsB,KAAKs4C,mBACtB9X,EAAW95B,MAAM+xC,EAAQA,EAASD,EAAcpgD,QAClDA,OAASogD,EAAcpgD,QAAUqgD,GAAU,GAGpDlM,EADAkM,GADAA,EAASjY,EAAWpoC,OAASogD,EAAcpgD,QACzB,EAAIqgD,EAAS,EAE/BjM,EAAWhM,EAAWpoC,QAEjBmG,WAAS,gBAAiByB,KAAKzI,UACpCg1C,EAAa,EACbC,EAAWxsC,KAAKzI,OAAOiB,KAAK+W,aAAas2B,SAAW,EACpD7lC,KAAKzI,OAAOiB,KAAKsY,OAAOyiC,IAA4BG,QAAQ,KAEhE1zC,KAAKs4C,kBAAoB,KAG7B7S,EAAelyB,OAASitB,EAAW95B,MAAM6lC,EAAYC,GACrDxsC,KAAK+3C,eAAiBxL,EACtBvsC,KAAKg4C,aAAexL,EAExBxsC,KAAKzI,OAAOuZ,OAAO,eAAgB20B,IAOvCqS,EAAc72C,UAAUiH,QAAU,WAC9BlI,KAAK6I,uBAEFivC,KAGPI,GAA6B,SAAUn2C,GAEvC,SAASm2C,EAAY3gD,EAAQw7C,GACzB,IAAIztC,EAAQvD,EAAOwD,KAAKvF,KAAMzI,EAAQw7C,IAAY/yC,KAGlD,OAFAzB,WAAS,SAAU+G,GAAOyD,IAAI,eAAgBxK,WAAS,sBAAuB+G,GAAQA,GACtF/G,WAAS,SAAU+G,GAAOkD,GAAG,eAAgBlD,EAAMozC,qBAAsBpzC,GAClEA,EAuBX,OA5BA7E,GAAUy3C,EAAan2C,GAOvBm2C,EAAYj3C,UAAUy3C,qBAAuB,WACzCn6C,WAAS,SAAUyB,MAAM24C,KAAK,aAAc,kBAAmB,kBAC/D,IAAIC,EAAWr6C,WAAS,UAAWyB,MAAM64C,WAAW,mBACpDt6C,WAAS,cAAeq6C,GACnB52C,MAAM42C,GAAWE,aAAWC,QAAS,IAAIjG,GAA2Bv0C,WAAS,SAAUyB,MAAOzB,WAAS,UAAWyB,SAEvHA,KAAKg5C,kBAETd,EAAYj3C,UAAU+3C,eAAiB,WACnC,IAAIC,EAAa16C,WAAS,SAAUyB,MAChCwlB,EAAYyzB,EAAWrF,eACtBr7C,oBAAkB0gD,EAAWp1B,SAA0C,iBAAvBo1B,EAAiB,SAAsD,IAApCA,EAAWp1B,OAAOnlB,QAAQ,OAC9Gu6C,EAAWnkC,QAAQ5J,MAAM2Y,OAASo1B,EAAWp1B,QAEjD,IAGIA,EAAqB,MAHXo1B,EAAWp1B,OAAO7d,WAAWtH,QAAQ,KAAO,EAAIu6C,EAAWp1B,OACrEo1B,EAAWnkC,QAAQsoB,wBAAwBvZ,QAClB2B,GAEzBogB,EAAOqT,EAAW1pC,aAAas2B,SACnCoT,EAAWt9B,eAAgBpM,cAAgBs2B,SAAUD,EAAO/hB,EAASA,EAAS+hB,KAAU,IAErFsS,GACTD,iBChLEiB,GAAwB,WAIxB,SAASA,EAAO3hD,GACZ6W,OAAKC,OAAO8qC,UACZn5C,KAAKzI,OAASA,EACdyI,KAAKuI,mBAqET,OAnEA2wC,EAAOj4C,UAAUsH,iBAAmB,WAChCvI,KAAKzI,OAAOiR,GAAG,oBAAqBxI,KAAK6xC,kBAAmB7xC,MAC5DA,KAAKzI,OAAOiR,GAAG,eAAgBxI,KAAKyxC,aAAczxC,MAClDA,KAAKzI,OAAOiB,KAAKgQ,GAAG,WAAYxI,KAAKo5C,gBAAiBp5C,OAE1Dk5C,EAAOj4C,UAAU4H,oBAAsB,WAC/B7I,KAAKzI,OAAOuR,cAGhB9I,KAAKzI,OAAOwR,IAAI,oBAAqB/I,KAAK6xC,mBAC1C7xC,KAAKzI,OAAOwR,IAAI,eAAgB/I,KAAKyxC,cACrCzxC,KAAKzI,OAAOiB,KAAKuQ,IAAI,WAAY/I,KAAKo5C,mBAE1CF,EAAOj4C,UAAU4wC,kBAAoB,SAAUzqC,GAC3C,IAEIlB,EAFA4tB,EAAc9zB,KAAKzI,OAAOoW,qBAC1B0rC,EAAar5C,KAAKzI,OAAOwH,UAQzBmH,EANCkB,EAAKisB,WAAWj7B,OAMVgP,EAAKisB,WALLS,EAAYj2B,OAAO,SAAUC,GAChC,OAAOA,EAAEqL,cAAc,kBAAoB/B,EAAK7N,OAAOwB,MAAQ,SAAWqM,EAAK7N,OAAOyB,MAAQ,MAMtG,IAAK,IAAI9C,EAAI,EAAGA,EAAIgO,EAAK9N,OAAQF,IAAK,CAClC,IAAIohD,EAAQt5C,KAAKzI,OAAOiB,KAAKkd,oBAAoBxP,EAAKhO,GAAGsS,aAAa,aAAa7L,KACnFuH,EAAKhO,GAAGgT,MAAMwE,QAAUtI,EAAKzL,OAC7B,IAAI49C,EAAgC,SAAhBnyC,EAAKzL,OAAoB,8CACvC,4CACN,GAAI09C,EAAWnzC,EAAKhO,GAAG6P,UAAUoB,cAAcowC,GAAgB,CAE3D,IAAK,IADD9kB,KACKE,EAAM,EAAGA,EAAMb,EAAY17B,OAAQu8B,IACpCb,EAAYa,GAAKxrB,cAAc,kBAAoBmwC,EAAMv+C,MAAQ,SAAWu+C,EAAMt+C,MAAQ,KAC1Fy5B,EAAKp7B,KAAKy6B,EAAYa,IAG1BF,EAAKr8B,QACL4H,KAAK6xC,mBAAoBxe,WAAYoB,EAAM94B,OAAQyL,EAAKzL,YAKxEu9C,EAAOj4C,UAAUm4C,gBAAkB,SAAUt7C,GACrCoL,eAAapL,EAAEuD,OAAQ,cACvBrB,KAAKzI,OAAOiB,KAAK0D,aAAagwB,qBAAyD,SAAlClsB,KAAKzI,OAAO2E,aAAaC,MAC9E6D,KAAKzI,OAAOiB,KAAK4D,WAAWgzB,UAAUlmB,eAAapL,EAAEuD,OAAQ,WAGrE63C,EAAOj4C,UAAUwwC,aAAe,SAAUrqC,GACjBpH,KAAKzI,OAAOqI,aAAa/B,OAAO,SAAUC,GAC3D,OAAOA,EAAEzF,eAEMD,QAAU4H,KAAKzI,OAAOiiD,cAAgBx5C,KAAKzI,OAAOuC,eACjEgV,YAAU9O,KAAKzI,OAAOud,QAAQW,uBAAuB,UAAU,IAAK,qBAG5EyjC,EAAOj4C,UAAUiH,QAAU,WACvBlI,KAAK6I,uBAMTqwC,EAAOj4C,UAAUgH,cAAgB,WAC7B,MAAO,UAEJixC,KC9EPO,GAA+B,WAI/B,SAASA,EAAcliD,GACnB6W,OAAKC,OAAOqrC,iBACZ15C,KAAKzI,OAASA,EA0BlB,OAlBAkiD,EAAcx4C,UAAU0uB,kBAAoB,SAAUgqB,EAAGC,GACrD,OAAO55C,KAAKzI,OAAOiB,KAAKs3B,oBAAoBH,kBAAkBgqB,EAAGC,IAOrEH,EAAcx4C,UAAUiH,QAAU,aAOlCuxC,EAAcx4C,UAAUgH,cAAgB,WACpC,MAAO,iBAEJwxC,0BnClCO,oCAIK,wHAYG,uKAkBH,uCAIC,qJAcA,2BAEC,wCAEY,gSAgCb,kDAIQ,qJAYG,wDAId,4CAIA,yBAEK"}